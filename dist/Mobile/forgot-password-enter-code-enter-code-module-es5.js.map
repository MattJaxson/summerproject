{"version":3,"sources":["webpack:///src/app/pages/auth/forgot-password/enter-code/enter-code.page.html","webpack:///src/app/pages/auth/forgot-password/enter-code/enter-code.page.ts","webpack:///src/app/pages/auth/forgot-password/enter-code/enter-code.page.scss","webpack:///src/app/pages/auth/forgot-password/enter-code/enter-code-routing.module.ts","webpack:///src/app/pages/auth/forgot-password/enter-code/enter-code.module.ts"],"names":["EnterCodePage","router","formBuilder","auth","activatedRoute","toast","code","userEmail","validationMessasges","type","message","enterCodeForm","group","required","snapshot","paramMap","get","generateCode","then","sendEmailWithCodeForgotPassword","formOnChanges","console","log","valueChanges","subscribe","data","length","result","characters","charactersLength","i","charAt","Math","floor","random","newPassword","controls","value","presentToast","navigate","sendEmailWithCode","presentNewCodeToast","create","duration","present","email","cssClass","keyboardClose","position","selector","template","routes","path","component","loadChildren","m","NewPasswordPageModule","EnterCodePageRoutingModule","imports","forChild","exports","EnterCodePageModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFA,aAAa;AAWxB,+BACUC,MADV,EAEUC,WAFV,EAGUC,IAHV,EAIUC,cAJV,EAKUC,KALV,EAKkC;AAAA;;AAJxB,eAAAJ,MAAA,GAAAA,MAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,IAAA,GAAAA,IAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AAdV,eAAAC,IAAA,GAAO,EAAP;AACA,eAAAC,SAAA,GAAY,EAAZ;AAEA,eAAAC,mBAAA,GAAsB;AACpBF,gBAAI,EAAE,CACJ;AAAEG,kBAAI,EAAE,MAAR;AAAgBC,qBAAO,EAAE;AAAzB,aADI;AADc,WAAtB;AAWqC;;AAhBb;AAAA;AAAA,qCAkBb;AAAA;;AACT,iBAAKC,aAAL,GAAsB,KAAKT,WAAL,CAAiBU,KAAjB,CAAuB;AAC3CN,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWO,QAAhB;AADqC,aAAvB,CAAtB;AAIA,iBAAKN,SAAL,GAAiB,KAAKH,cAAL,CAAoBU,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,OAA1C,CAAjB;AAEA,iBAAKC,YAAL,CAAkB,CAAlB,EAAqBC,IAArB,CAA0B,UAAAZ,IAAI,EAAI;AAChC,mBAAI,CAACH,IAAL,CAAUgB,+BAAV,CAA0Cb,IAA1C,EAAgD,KAAI,CAACC,SAArD;AACD,aAFD;AAIA,iBAAKa,aAAL;AAED;AA/BuB;AAAA;AAAA,0CAiCX;AACXC,mBAAO,CAACC,GAAR,CAAY,KAAKX,aAAjB;AACA,iBAAKA,aAAL,CAAmBY,YAAnB,CAAgCC,SAAhC,CAA2C,UAAAC,IAAI,EAAI;AAC/CJ,qBAAO,CAACC,GAAR,CAAYG,IAAZ;AACD,aAFH;AAGD;AAtCuB;AAAA;AAAA,uCAwCLC,MAxCK,EAwCG;;;;;;;AACrBC,4B,GAAS,E;AACPC,gC,GAAa,gE;AACbC,sC,GAAmBD,UAAU,CAACF,M;;AAEpC,2BAAUI,CAAV,GAAc,CAAd,EAAiBA,CAAC,GAAGJ,MAArB,EAA6BI,CAAC,EAA9B,EAAmC;AAChCH,8BAAM,IAAIC,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,gBAA3B,CAAlB,CAAV;AACF;;AACDR,6BAAO,CAACC,GAAR,CAAY,qBAAqBK,MAAjC;uDACO,KAAKrB,IAAL,GAAYqB,M;;;;;;;;;AACrB;AAlDwB;AAAA;AAAA,0CAqDRQ,WArDQ,EAqDK;AAC3Bd,mBAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAYa,WAAZ;;AAEA,gBAAI,KAAKxB,aAAL,CAAmByB,QAAnB,CAA4B9B,IAA5B,CAAiC+B,KAAjC,KAA2C,KAAK/B,IAApD,EAA0D;AACxD,mBAAKgC,YAAL;AACAjB,qBAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,aAHD,MAGO;AACLD,qBAAO,CAACC,GAAR,CAAY,eAAZ;AACA,mBAAKrB,MAAL,CAAYsC,QAAZ,CAAqB,CAAC,6CAAD,EAAgD,KAAKhC,SAArD,CAArB;AACD;AACF;AAhEuB;AAAA;AAAA,wCAkEJ;;;;;;;;;AAClB,6BAAM,KAAKU,YAAL,CAAkB,CAAlB,EAAqBC,IAArB,CAA0B,UAAAZ,IAAI,EAAI;AACtCe,+BAAO,CAACC,GAAR,CAAY,WAAWhB,IAAvB;;AACA,8BAAI,CAACH,IAAL,CAAUqC,iBAAV,CAA4BlC,IAA5B,EAAkC,MAAI,CAACC,SAAvC;AACD,uBAHK,CAAN;;;;AAKA,6BAAM,KAAKkC,mBAAL,CAAyB,KAAKlC,SAA9B,CAAN;;;;;;;;;AACA;AAzEsB;AAAA;AAAA,yCA4EH;;;;;;;;AACL,6BAAM,KAAKF,KAAL,CAAWqC,MAAX,CAAkB;AACpChC,+BAAO,EAAE,2CAD2B;AAEpCiC,gCAAQ,EAAE;AAF0B,uBAAlB,CAAN;;;AAARtC,2B;AAINA,2BAAK,CAACuC,OAAN;;;;;;;;;AACD;AAlFuB;AAAA;AAAA,8CAoFEC,KApFF,EAoFS;;;;;;;;AACjB,6BAAM,KAAKxC,KAAL,CAAWqC,MAAX,CAAkB;AACpChC,+BAAO,6BAAsBmC,KAAtB,CAD6B;AAEpCF,gCAAQ,EAAE,IAF0B;AAGpCG,gCAAQ,EAAE,eAH0B;AAIpCC,qCAAa,EAAE,IAJqB;AAKpCC,gCAAQ,EAAE;AAL0B,uBAAlB,CAAN;;;AAAR3C,2B;AAONA,2BAAK,CAACuC,OAAN;;;;;;;;;AACD;AA7FuB;AAAA;AAAA,mCA+Ff;AACPvB,mBAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,iBAAKrB,MAAL,CAAYsC,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD;AAlGuB;;AAAA;AAAA,S;;;;gBAXjB;;gBACW;;gBACX;;gBAFQ;;gBAGR;;;;AAQIvC,mBAAa,6DALzB,gEAAU;AACTiD,gBAAQ,EAAE,gBADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAKyB,E,+EAYN,sD,EACK,0D,EACP,yE,EACU,8D,EACT,8D,EAhBO,GAAblD,aAAa,CAAb;;;;;;;;;;;;;;;;ACZb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMf,UAAMmD,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACA;AACED,YAAI,EAAE,qBADR;AAEEE,oBAAY,EAAE;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,mBAAiEpC,IAAjE,CAAsE,UAAAqC,CAAC;AAAA,mBAAIA,CAAC,CAACC,qBAAN;AAAA,WAAvE,CAAN;AAAA;AAFhB,OANqB,CAAvB;;UAgBaC,0BAA0B;AAAA;AAAA,O;;AAA1BA,gCAA0B,6DAJtC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBR,MAAtB,CAAD,CADD;AAERS,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIsC,GAA1BH,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCFAI,mBAAmB;AAAA;AAAA,O;;AAAnBA,yBAAmB,6DAV/B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0DAJO,EAKP,qFALO,CADD;AAQRI,oBAAY,EAAE,CAAC,8DAAD;AARN,OAAT,CAU+B,GAAnBD,mBAAmB,CAAnB","file":"forgot-password-enter-code-enter-code-module-es5.js","sourcesContent":["export default \"<ion-header style=\\\"display: none;\\\">\\n</ion-header>\\n\\n<ion-content>\\n    <ion-grid class=\\\"ion-text-center\\\" style=\\\"margin-top: 10%;\\\">\\n        <ion-row>\\n          <ion-col size-sm=\\\"10\\\" size-lg=\\\"6\\\" offset-lg=\\\"3\\\" offset-sm=\\\"1\\\">\\n            <h6 class=\\\"text-header\\\">Please enter <span style=\\\"font-weight: 700;\\\">6 character code</span> that was sent to {{userEmail}}</h6>\\n            <form [formGroup]=\\\"enterCodeForm\\\" (ngSubmit)=\\\"newPasswordPage(this.enterCodeForm.value)\\\">\\n              <ion-list class=\\\"line-input\\\">\\n              <ion-item>\\n                <ion-input\\n                placeholder=\\\"Enter Code\\\"\\n                required\\n                formControlName=\\\"code\\\"\\n                type=\\\"text\\\"\\n                placeholder=\\\"Enter Code\\\"></ion-input>\\n              </ion-item>\\n\\n              <!-- Password Validation-->\\n              <div class=\\\"validation-errors\\\">\\n                  <ng-container *ngFor=\\\"let validation of validationMessasges.code\\\">\\n                    <div class=\\\"error-message\\\"\\n                      *ngIf=\\\"enterCodeForm\\n                        .get('code')\\n                        .hasError(validation.type) && (enterCodeForm.get('code')\\n                        .dirty || enterCodeForm.get('code').touched)\\\">\\n                      {{ validation.message }}\\n                    </div>\\n                  </ng-container>\\n                </div>\\n\\n\\n              <ion-button type=\\\"submit\\\"  class=\\\"orange-button\\\">ENTER CODE</ion-button><br>\\n              <ion-button class=\\\"send-new-code\\\" (click)=\\\"sendNewCode()\\\">\\n                Send new code\\n              </ion-button>\\n              <ion-button (click)=\\\"cancel()\\\" class=\\\"cancel-button\\\" slot=\\\"end\\\">\\n                  cancel\\n              </ion-button>\\n            </ion-list>\\n\\n            </form>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n</ion-content>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-enter-code',\n  templateUrl: './enter-code.page.html',\n  styleUrls: ['./enter-code.page.scss'],\n})\nexport class EnterCodePage implements OnInit {\n  enterCodeForm: FormGroup;\n  code = '';\n  userEmail = '';\n\n  validationMessasges = {\n    code: [\n      { type: 'text', message: 'The codes do not match'}\n    ]\n  };\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private toast: ToastController) { }\n\n  ngOnInit() {\n    this.enterCodeForm =  this.formBuilder.group({\n      code: ['', Validators.required],\n    });\n\n    this.userEmail = this.activatedRoute.snapshot.paramMap.get('email');\n\n    this.generateCode(6).then(code => {\n      this.auth.sendEmailWithCodeForgotPassword(code, this.userEmail);\n    });\n\n    this.formOnChanges();\n\n  }\n\n  formOnChanges(): void {\n    console.log(this.enterCodeForm);\n    this.enterCodeForm.valueChanges.subscribe( data => {\n        console.log(data);\n      });\n  }\n\n  async generateCode(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n\n    for ( let i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    console.log('Generated Code: ' + result);\n    return this.code = result;\n }\n\n\n  newPasswordPage(newPassword) {\n    console.log('New Password: ');\n    console.log(newPassword);\n\n    if (this.enterCodeForm.controls.code.value !== this.code) {\n      this.presentToast();\n      console.log('Codes do not match');\n    } else {\n      console.log('Codes matched');\n      this.router.navigate(['/enter-email/enter-code/:email/new-password', this.userEmail]);\n    }\n  }\n\n  async sendNewCode() {\n    await this.generateCode(6).then(code => {\n      console.log('Data: ' + code);\n      this.auth.sendEmailWithCode(code, this.userEmail);\n    });\n\n    await this.presentNewCodeToast(this.userEmail);\n   }\n\n\n  async presentToast() {\n    const toast = await this.toast.create({\n      message: 'The codes do not match. Please try again.',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  async presentNewCodeToast(email) {\n    const toast = await this.toast.create({\n      message: `New Code sent to ${email}`,\n      duration: 2000,\n      cssClass: 'success-toast',\n      keyboardClose: true,\n      position: 'top',\n    });\n    toast.present();\n  }\n\n  cancel() {\n    console.log('Forgot password cancelled');\n    this.router.navigate(['']);\n  }\n\n}\n","export default \".send-new-code {\\n  display: block;\\n  --background: none;\\n  color: #005191;\\n  --border-color: #005191;\\n  --border-width: 1px;\\n  --border-style: solid;\\n  border: 1px;\\n  width: 150px;\\n  margin: 50px auto;\\n  opacity: 0;\\n  -webkit-animation: slide-from-right 1s ease-out 5s forwards;\\n          animation: slide-from-right 1s ease-out 5s forwards;\\n}\\n\\nspan {\\n  font-weight: 900;\\n  font-size: 1.2em;\\n  color: #005191;\\n}\\n\\n@-webkit-keyframes slide-from-right {\\n  0% {\\n    transform: translateX(300px);\\n    opacity: 0;\\n  }\\n  100% {\\n    transform: translateX(0px);\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes slide-from-right {\\n  0% {\\n    transform: translateX(300px);\\n    opacity: 0;\\n  }\\n  100% {\\n    transform: translateX(0px);\\n    opacity: 1;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYXV0aC9mb3Jnb3QtcGFzc3dvcmQvZW50ZXItY29kZS9lbnRlci1jb2RlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EscUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsVUFBQTtFQUNBLDJEQUFBO1VBQUEsbURBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFFRTtJQUNFLDRCQUFBO0lBQ0EsVUFBQTtFQUFGO0VBR0E7SUFDRSwwQkFBQTtJQUNBLFVBQUE7RUFERjtBQUNGOztBQVRBO0VBRUU7SUFDRSw0QkFBQTtJQUNBLFVBQUE7RUFBRjtFQUdBO0lBQ0UsMEJBQUE7SUFDQSxVQUFBO0VBREY7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvZm9yZ290LXBhc3N3b3JkL2VudGVyLWNvZGUvZW50ZXItY29kZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VuZC1uZXctY29kZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiAjMDA1MTkxO1xuICAtLWJvcmRlci1jb2xvcjogIzAwNTE5MTtcbiAgLS1ib3JkZXItd2lkdGggOiAxcHg7XG4gIC0tYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyOiAxcHg7XG4gIHdpZHRoOiAxNTBweDtcbiAgbWFyZ2luOiA1MHB4IGF1dG87XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogc2xpZGUtZnJvbS1yaWdodCAxcyBlYXNlLW91dCA1cyBmb3J3YXJkcztcbn1cblxuc3BhbiB7XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIGZvbnQtc2l6ZTogMS4yZW07XG4gIGNvbG9yOiAjMDA1MTkxO1xufVxuXG5Aa2V5ZnJhbWVzIHNsaWRlLWZyb20tcmlnaHQge1xuXG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzAwcHgpO1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cblxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHB4KTtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59Il19 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { EnterCodePage } from './enter-code.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EnterCodePage\n  },\n  //  to new password page\n  {\n    path: 'new-password/:email',\n    loadChildren: () => import('../../forgot-password/new-password/new-password.module').then(m => m.NewPasswordPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EnterCodePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EnterCodePageRoutingModule } from './enter-code-routing.module';\n\nimport { EnterCodePage } from './enter-code.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    EnterCodePageRoutingModule\n  ],\n  declarations: [EnterCodePage]\n})\nexport class EnterCodePageModule {}\n"]}