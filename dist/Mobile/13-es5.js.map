{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-button_2-ios.entry.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,YAAA,EAAA,YAAA;AAAA,aAAA,MAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,IAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,8CAAA,GAAA,mBAAA;AAAA;AAAA,0DAAA,CAAA;AAAA;;;AAAA,QAAA,gDAAA,GAAA,mBAAA;AAAA;AAAA,4DAAA,CAAA;AAAA;;;AAAA,QAAA,iDAAA,GAAA,mBAAA;AAAA;AAAA,6DAAA,CAAA;AAAA;;;AAAA,QAAA,+CAAA,GAAA,mBAAA;AAAA;AAAA,2DAAA,CAAA;;AAKA,UAAA,MAAA,GAAA,MAAA;AACA,MAAA,WAAA,CAAA,OAAA,EAAA;AACQ,QAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,EAAgB,OAAhB;AACR,aAAA,SAAA,GAAA,KAAA;AACA,aAAA,MAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,UAAA,GAAA,QAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,KAAA;AACA;;;;;AAIA,aAAA,eAAA,GAAA,SAAA;AACA;;;;AAGA,aAAA,MAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,IAAA,GAAA,QAAA;;AACA,aAAA,WAAA,GAAA,EAAA,IAAA;AACA,cAAA,KAAA,IAAA,KAAA,QAAA,EAAA;AACgB,YAAA,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAO,KAAA,IAAP,EAAO,EAAP,EAAO,KAAA,eAAP;AAChB,WAFA,MAGA,IAAqB,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAY,KAAA,EAAZ,CAArB,EAAiC;AACjC;AACA;AACA;AACA,kBAAA,IAAA,GAAA,KAAA,EAAA,CAAA,OAAA,CAAA,MAAA,CAAA;;AACA,gBAAA,IAAA,EAAA;AACA,cAAA,EAAA,CAAA,cAAA;AACA,oBAAA,UAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AACA,cAAA,UAAA,CAAA,IAAA,GAAA,KAAA,IAAA;AACA,cAAA,UAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,cAAA,IAAA,CAAA,WAAA,CAAA,UAAA;AACA,cAAA,UAAA,CAAA,KAAA;AACA,cAAA,UAAA,CAAA,MAAA;AACA;AACA;AACA,SAnBA;;AAoBA,aAAA,OAAA,GAAA,MAAA;AACA,eAAA,QAAA,CAAA,IAAA;AACA,SAFA;;AAGA,aAAA,MAAA,GAAA,MAAA;AACA,eAAA,OAAA,CAAA,IAAA;AACA,SAFA;;AAGA,aAAA,QAAA,GAAwB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,UAAX,EAAW,CAAX,CAAxB;AACA,aAAA,OAAA,GAAuB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,SAAX,EAAW,CAAX,CAAvB;AACA;;AACA,MAAA,iBAAA,GAAA;AACA,aAAA,SAAA,GAAA,CAAA,CAAA,KAAA,EAAA,CAAA,OAAA,CAAA,aAAA,CAAA;AACA,aAAA,MAAA,GAAA,CAAA,CAAA,KAAA,EAAA,CAAA,OAAA,CAAA,UAAA,CAAA,IAAA,CAAA,CAAA,KAAA,EAAA,CAAA,OAAA,CAAA,kBAAA,CAAA;AACA;;AACA,UAAA,WAAA,GAAA;AACA,eAAA,CAAA,CAAA,KAAA,EAAA,CAAA,aAAA,CAAA,4BAAA,CAAA;AACA;;AACA,UAAA,UAAA,GAAA;AACA,cAAA,YAAA,GAAA,KAAA,IAAA,KAAA,SAAA,IAAA,KAAA,IAAA,KAAA,OAAA,CADA,CAEA;AACA;;AACA,YAAA,YAAA,IAAA,KAAA,WAAA,IAAA,KAAA,SAAA,EAAA;AACA,iBAAA,WAAA;AACA;;AACA,eAAA,SAAA;AACA;;AACA,MAAA,MAAA,GAAA;AACA,cAAA,IAAA,GAAqB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAY,IAAZ,CAArB;AACA,cAAA;AAAe,UAAA,UAAf;AAAe,UAAA,IAAf;AAAe,UAAA,QAAf;AAAe,UAAA,GAAf;AAAe,UAAA,MAAf;AAAe,UAAA,IAAf;AAAe,UAAA,IAAf;AAAe,UAAA,KAAf;AAAe,UAAA,MAAf;AAAe,UAAA,WAAf;AAAe,UAAA,KAAf;AAAe,UAAA;AAAf,YAAgH,IAAhH;AACA,cAAA,SAAA,GAAA,IAAA,KAAA,SAAA,IAAA,KAAA,MAAA,GAAA,OAAA,GAAA,IAAA;AACA,cAAA,OAAA,GAAA,IAAA,KAAA,SAAA,GAAA,QAAA,GAAA,GAAA;AACA,cAAA,KAAA,GAAA,OAAA,KAAA,QAAA,GACA;AAAe,UAAA;AAAf,SADA,GAEA;AACA,UAAA,QAAA,EAAA,KAAA,QADA;AAEA,UAAA,IAFA;AAGA,UAAA,GAHA;AAIA,UAAA;AAJA,SAFA;AAQA,YAAA,IAAA,GAAA,KAAA,IAAA;;AACA,YAAA,IAAA,KAAA,SAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,SAAA,GAAA,OAAA,GAAA,OAAA;AACA;;AACA,eAAgB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,8CAAA,CAAA,GAAA,CAAF,EAAM;AAAG,UAAA,OAAA,EAAA,KAAA,WAAH;AAAG,2BAAA,QAAA,GAAA,MAAA,GAAA,IAAH;AAAG,UAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAA8G,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAoB,KAApB,CAA9G,CAAA,EAAkI;AAAW,aAAA,IAAA,GAAA,IAAX;AAAW,aAAA,UAAA,GAAA,IAAX;AAAW,uBAAuC,UAAvC,cAAqD,MAArD,IAA4D,MAAA,KAAA,SAAvE;AAAuE,uBAA8B,UAA9B,cAA4C,SAA5C,IAAsD,SAAA,KAAA,SAA7H;AAA6H,uBAAiC,UAAjC,cAA+C,KAA/C,IAAqD,KAAA,KAAA,SAAlL;AAAkL,uBAA6B,UAA7B,cAA2C,IAA3C,IAAgD,IAAlO;AAAkO,uBAAc,UAAd,eAAyB,MAA3P;AAA2P,oCAAA,WAA3P;AAA2P,+BAAA,QAA3P;AAA2P,+BAAA,IAA3P;AAA2P,6BAAA;AAA3P,WAAlI;AAAH,SAAN,EAAghB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,OAAD,EAAC,MAAA,CAAA,MAAA,CAAA,EAAA,EAA0B,KAA1B,EAA0B;AAAU,UAAA,KAAA,EAAA,eAAV;AAAU,UAAA,QAAA,EAAA,QAAV;AAAU,UAAA,OAAA,EAAA,KAAA,OAAV;AAAU,UAAA,MAAA,EAAA,KAAA;AAAV,SAA1B,CAAD,EAAiI,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,MAAD,EAAC;AAAU,UAAA,KAAA,EAAA;AAAV,SAAD,EAAqC,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,MAAD,EAAC;AAAU,UAAA,IAAA,EAAA;AAAV,SAAD,CAArC,EAAuE,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,MAAD,EAAC;AAAU,UAAA,IAAA,EAAA;AAAV,SAAD,CAAvE,EAAqG,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,MAAD,EAAC,IAAD,CAArG,EAAsH,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,MAAD,EAAC;AAAU,UAAA,IAAA,EAAA;AAAV,SAAD,CAAtH,CAAjI,EAAgR,IAAA,KAAA,IAAA,IAAqB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,mBAAD,EAAC;AAAuB,UAAA,IAAA,EAAA,KAAA;AAAvB,SAAD,CAArS,CAAhhB,CAAhB;AACA;;AACA,UAAA,EAAA,GAAA;AAAc,eAAQ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAR;AAAyB;;AACvC,iBAAA,KAAA,GAAA;AAAwB,eAAA,k6OAAA;AAA26O;;AA3Fn8O,KAAA;AA8FA,QAAA,UAAA;;AACA,UAAA,UAAA,GAAA,MAAA;AACA,UAAA,CAAA,UAAA,EAAA;AACA,cAAA,GAAA,GAAA,MAAA;AACA,QAAA,GAAA,CAAA,QAAA,GAAA,GAAA,CAAA,QAAA,IAAA,EAAA;AACA,QAAA,UAAA,GAAA,GAAA,CAAA,QAAA,CAAA,GAAA,GAAA,GAAA,CAAA,QAAA,CAAA,GAAA,IAAA,IAAA,GAAA,EAAA;AACA;;AACA,aAAA,UAAA;AACA,KAPA;;AAQA,UAAA,MAAA,GAAA,CAAA,IAAA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA;;AACA,UAAA,GAAA,EAAA;AACA,eAAA,GAAA;AACA;;AACA,MAAA,GAAA,GAAA,OAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA,CAAA;;AACA,UAAA,GAAA,EAAA;AACA,eAAA,WAAA,CAAA,GAAA,CAAA;AACA;;AACA,UAAA,CAAA,CAAA,IAAA,EAAA;AACA,QAAA,GAAA,GAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA;;AACA,YAAA,GAAA,EAAA;AACA,iBAAA,GAAA;AACA;;AACA,QAAA,GAAA,GAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA;;AACA,YAAA,GAAA,EAAA;AACA,iBAAA,GAAA;AACA;AACA;;AACA,aAAA,IAAA;AACA,KApBA;;AAqBA,UAAA,WAAA,GAAA,IAAA,IAAA;AACA,YAAA,GAAA,GAAA,UAAA,GAAA,GAAA,CAAA,IAAA,CAAA;;AACA,UAAA,GAAA,EAAA;AACA,eAAA,GAAA;AACA;;AACA,aAAW,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,eAAoB,IAApB,UAAX;AACA,KANA;;AAOA,UAAA,OAAA,GAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,KAAA;AACA;AACA,MAAA,IAAA,GAAA,CAAA,IAAA,IAAA,IAAA,CAAA,WAAA,EAAA,MAAA,KAAA,GAAA,KAAA,GAAA,IAAA,CAFA,CAGA;AACA;;AACA,UAAA,GAAA,IAAA,IAAA,KAAA,KAAA,EAAA;AACA,QAAA,IAAA,GAAA,GAAA,CAAA,WAAA,EAAA;AACA,OAFA,MAGA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,EAAA;AACA,QAAA,IAAA,GAAA,EAAA,CAAA,WAAA,EAAA;AACA,OAFA,MAGA;AACA,YAAA,CAAA,IAAA,IAAA,IAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,EAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA;;AACA,YAAA,KAAA,CAAA,IAAA,CAAA,EAAA;AACA,UAAA,IAAA,GAAA,IAAA,CAAA,WAAA,EAAA;;AACA,cAAA,CAAA,oBAAA,IAAA,CAAA,IAAA,CAAA,EAAA;AACA;AACA;AACA,YAAA,IAAA,GAAA,IAAA,GAAA,GAAA,GAAA,IAAA;AACA;AACA;AACA;;AACA,UAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,IAAA,CAAA,IAAA,OAAA,EAAA,EAAA;AACA,eAAA,IAAA;AACA,OA1BA,CA2BA;;;AACA,YAAA,YAAA,GAAA,IAAA,CAAA,OAAA,CAAA,cAAA,EAAA,EAAA,CAAA;;AACA,UAAA,YAAA,KAAA,EAAA,EAAA;AACA,eAAA,IAAA;AACA;;AACA,aAAA,IAAA;AACA,KAjCA;;AAkCA,UAAA,MAAA,GAAA,GAAA,IAAA;AACA,UAAA,KAAA,CAAA,GAAA,CAAA,EAAA;AACA,QAAA,GAAA,GAAA,GAAA,CAAA,IAAA,EAAA;;AACA,YAAA,KAAA,CAAA,GAAA,CAAA,EAAA;AACA,iBAAA,GAAA;AACA;AACA;;AACA,aAAA,IAAA;AACA,KARA;;AASA,UAAA,KAAA,GAAA,GAAA,IAAA;AACA,aAAA,GAAA,CAAA,MAAA,GAAA,CAAA,IAAA,UAAA,IAAA,CAAA,GAAA,CAAA;AACA,KAFA;;AAGA,UAAA,KAAA,GAAA,GAAA,IAAA,OAAA,GAAA,KAAA,QAAA;;AAEA,UAAA,eAAA,GAAA,UAAA,IAAA;AACA,UAAA,UAAA,EAAA;AACA,cAAA,GAAA,GAAA,QAAA,CAAA,aAAA,CAAA,KAAA,CAAA;AACA,QAAA,GAAA,CAAA,SAAA,GAAA,UAAA,CAFA,CAGA;;AACA,aAAA,IAAA,CAAA,GAAA,GAAA,CAAA,UAAA,CAAA,MAAA,GAAA,CAAA,EAA+C,CAAA,IAAA,CAA/C,EAAuD,CAAA,EAAvD,EAAuD;AACvD,cAAA,GAAA,CAAA,UAAA,CAAA,CAAA,EAAA,QAAA,CAAA,WAAA,OAAA,KAAA,EAAA;AACA,YAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,UAAA,CAAA,CAAA,CAAA;AACA;AACA,SARA,CASA;;;AACA,cAAA,MAAA,GAAA,GAAA,CAAA,iBAAA;;AACA,YAAA,MAAA,IAAA,MAAA,CAAA,QAAA,CAAA,WAAA,OAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,YAAA,CAAA,OAAA,EAAA,YAAA,EADA,CAEA;AACA;AACA;;AACA,cAAA,OAAA,CAAA,MAAA,CAAA,EAAA;AACA,mBAAA,GAAA,CAAA,SAAA;AACA;AACA;AACA;;AACA,aAAA,EAAA;AACA,KAvBA;;AAwBA,UAAA,OAAA,GAAA,GAAA,IAAA;AACA,UAAA,GAAA,CAAA,QAAA,KAAA,CAAA,EAAA;AACA,YAAA,GAAA,CAAA,QAAA,CAAA,WAAA,OAAA,QAAA,EAAA;AACA,iBAAA,KAAA;AACA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAuB,CAAA,GAAA,GAAA,CAAA,UAAA,CAAA,MAAvB,EAAkD,CAAA,EAAlD,EAAkD;AAClD,gBAAA,GAAA,GAAA,GAAA,CAAA,UAAA,CAAA,CAAA,EAAA,KAAA;;AACA,cAAA,KAAA,CAAA,GAAA,CAAA,IAAA,GAAA,CAAA,WAAA,GAAA,OAAA,CAAA,IAAA,MAAA,CAAA,EAAA;AACA,mBAAA,KAAA;AACA;AACA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAuB,CAAA,GAAA,GAAA,CAAA,UAAA,CAAA,MAAvB,EAAkD,CAAA,EAAlD,EAAkD;AAClD,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AACA,mBAAA,KAAA;AACA;AACA;AACA;;AACA,aAAA,IAAA;AACA,KAlBA;;AAoBA,UAAA,QAAA,GAAA,IAAA,GAAA,EAAA;;AACA,UAAA,aAAA,GAAA,GAAA,IAAA;AACA;AACA,UAAA,GAAA,GAAA,QAAA,CAAA,GAAA,CAAA,GAAA,CAAA;;AACA,UAAA,CAAA,GAAA,EAAA;AACA;AACA,QAAA,GAAA,GAAA,KAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACA,cAAA,GAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA,mBAAA,GAAA,CAAA,IAAA,EAAA;AACA;;AACA,iBAAA,OAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACS,SALT,EAKS,IALT,CAKS,UAAA,IAAA,eAAA,CAAA,UAAA,CALT,CAAA,CAFA,CAQA;;AACA,QAAA,QAAA,CAAA,GAAA,CAAA,GAAA,EAAA,GAAA;AACA;;AACA,aAAA,GAAA;AACA,KAfA;;AAiBA,UAAA,IAAA,GAAA,MAAA;AACA,MAAA,WAAA,CAAA,OAAA,EAAA;AACQ,QAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,EAAgB,OAAhB;AACR,aAAA,IAAA,GAAA,UAAA,CAAA,IAAA,CAAA;AACA,aAAA,SAAA,GAAA,KAAA;AACA;;;;;AAIA,aAAA,IAAA,GAAA,KAAA;AACA;;AACA,MAAA,iBAAA,GAAA;AACA;AACA;AACA;AACA,aAAA,gBAAA,CAAA,KAAA,EAAA,EAAA,MAAA,EAAA,MAAA;AACA,eAAA,SAAA,GAAA,IAAA;AACA,eAAA,QAAA;AACS,SAHT;AAIA;;AACA,MAAA,oBAAA,GAAA;AACA,YAAA,KAAA,EAAA,EAAA;AACA,eAAA,EAAA,CAAA,UAAA;AACA,eAAA,EAAA,GAAA,SAAA;AACA;AACA;;AACA,MAAA,gBAAA,CAAA,EAAA,EAAA,UAAA,EAAA,EAAA,EAAA;AACA,YAAA,KAAA,IAAA,IAAA,OAAA,MAAA,KAAA,WAAA,IAAA,MAAA,CAAA,oBAAA,EAAA;AACA,gBAAA,EAAA,GAAA,KAAA,EAAA,GAAA,IAAA,MAAA,CAAA,oBAAA,CAAA,IAAA,IAAA;AACA,gBAAA,IAAA,CAAA,CAAA,CAAA,CAAA,cAAA,EAAA;AACA,cAAA,EAAA,CAAA,UAAA;AACA,mBAAA,EAAA,GAAA,SAAA;AACA,cAAA,EAAA;AACA;AACa,WANb,EAMa;AAAG,YAAA;AAAH,WANb,CAAA;AAOA,UAAA,EAAA,CAAA,OAAA,CAAA,EAAA;AACA,SATA,MAUA;AACA;AACA;AACA,UAAA,EAAA;AACA;AACA;;AACA,MAAA,QAAA,GAAA;AACA,YAAA,KAAA,SAAA,EAAA;AACA,gBAAA,GAAA,GAAA,MAAA,CAAA,IAAA,CAAA;;AACA,cAAA,GAAA,EAAA;AACA,YAAA,aAAA,CAAA,GAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,KAAA,UAAA,GAAA,UADA;AAEA;AACA;;AACA,YAAA,CAAA,KAAA,SAAA,EAAA;AACA,gBAAA,KAAA,GAAA,OAAA,CAAA,KAAA,IAAA,EAAA,KAAA,IAAA,EAAA,KAAA,IAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,CAAA,CADA,CAEA;AACA;;AACA,cAAA,KAAA,EAAA;AACA,iBAAA,SAAA,GAAA,KAAA,CACA,OADA,CACA,MADA,EACA,EADA,EAEA,OAFA,CAEA,KAFA,EAEA,EAFA,EAGA,OAHA,CAGA,KAHA,EAGA,GAHA,CAAA;AAIA;AACA;AACA;;AACA,MAAA,MAAA,GAAA;AACA,cAAA,IAAA,GAAA,KAAA,IAAA,IAAA,IAAA;AACA,cAAA,OAAA,GAAA,KAAA,OAAA,IAAA,KAAA,SAAA,IAAA,KAAA,SAAA,CAAA,OAAA,CAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,OAAA,KAAA,KAAA;AACA,eAAgB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,8CAAA,CAAA,GAAA,CAAF,EAAM;AAAG,UAAA,IAAA,EAAA,KAAH;AAAG,UAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAoC,aAAA,IAAA,GAAA;AAApC,WAAA,EAAmD,kBAAA,CAAA,KAAA,KAAA,CAAnD,EAAmD;AAAmC,4BAAU,KAAA,IAAV,IAAoB,CAAA,CAAA,KAAA,IAAvD;AAAuD,wBAAA,CAAA,CAAA,OAAA,IAAA,KAAA,EAAA,CAAA,aAAA,CAAA,GAAA,KAAA;AAAvD,WAAnD;AAAH,SAAN,EAAqM,KAAA,UAAA,GACvM,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,KAAD,EAAC;AAAS,UAAA,KAAA,EAAA,YAAT;AAAS,UAAA,SAAA,EAAA,KAAA;AAAT,SAAD,CADuM,GAEvM,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,KAAD,EAAC;AAAS,UAAA,KAAA,EAAA;AAAT,SAAD,CAFE,CAAhB;AAGA;;AACA,iBAAA,UAAA,GAAA;AAA6B,eAAA,CAAA,KAAA,CAAA;AAAgB;;AAC7C,UAAA,EAAA,GAAA;AAAc,eAAQ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAR;AAAyB;;AACvC,iBAAA,QAAA,GAAA;AAA2B,eAAA;AAC3B,kBAAA,CAAA,UAAA,CAD2B;AAE3B,iBAAA,CAAA,UAAA,CAF2B;AAG3B,kBAAA,CAAA,UAAA;AAH2B,SAAA;AAIrB;;AACN,iBAAA,KAAA,GAAA;AAAwB,eAAA,qlCAAA;AAA8lC;;AA7EtnC,KAAA;;AA+EA,UAAA,UAAA,GAAA,GAAA,IAAA;AACA,aAAW,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAO,GAAP,KAAO,QAAA,CAAA,eAAA,CAAA,YAAA,CAAA,MAAA,CAAP,IAAO,IAAlB;AACA,KAFA;;AAGA,UAAA,kBAAA,GAAA,KAAA,IAAA;AACA,aAAA,KAAA,GAAA;AACA,qBAAA,IADA;AAEA,6BAAsB,KAAtB,IAA4B;AAF5B,OAAA,GAGK,IAHL;AAIA,KALA","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode$1, h, H as Host, e as getElement, i as getAssetPath, j as getMode } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nimport { h as hasShadowDom } from './helpers-46f4a262.js';\nimport { o as openURL, c as createColorClasses$1 } from './theme-18cbe2cc.js';\n\nconst Button = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inToolbar = false;\n        this.inItem = false;\n        /**\n         * The type of button.\n         */\n        this.buttonType = 'button';\n        /**\n         * If `true`, the user cannot interact with the button.\n         */\n        this.disabled = false;\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        /**\n         * If `true`, activates a button with a heavier font weight.\n         */\n        this.strong = false;\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        this.handleClick = (ev) => {\n            if (this.type === 'button') {\n                openURL(this.href, ev, this.routerDirection);\n            }\n            else if (hasShadowDom(this.el)) {\n                // this button wants to specifically submit a form\n                // climb up the dom to see if we're in a <form>\n                // and if so, then use JS to submit it\n                const form = this.el.closest('form');\n                if (form) {\n                    ev.preventDefault();\n                    const fakeButton = document.createElement('button');\n                    fakeButton.type = this.type;\n                    fakeButton.style.display = 'none';\n                    form.appendChild(fakeButton);\n                    fakeButton.click();\n                    fakeButton.remove();\n                }\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    }\n    componentWillLoad() {\n        this.inToolbar = !!this.el.closest('ion-buttons');\n        this.inItem = !!this.el.closest('ion-item') || !!this.el.closest('ion-item-divider');\n    }\n    get hasIconOnly() {\n        return !!this.el.querySelector('ion-icon[slot=\"icon-only\"]');\n    }\n    get rippleType() {\n        const hasClearFill = this.fill === undefined || this.fill === 'clear';\n        // If the button is in a toolbar, has a clear fill (which is the default)\n        // and only has an icon we use the unbounded \"circular\" ripple effect\n        if (hasClearFill && this.hasIconOnly && this.inToolbar) {\n            return 'unbounded';\n        }\n        return 'bounded';\n    }\n    render() {\n        const mode = getIonMode$1(this);\n        const { buttonType, type, disabled, rel, target, size, href, color, expand, hasIconOnly, shape, strong } = this;\n        const finalSize = size === undefined && this.inItem ? 'small' : size;\n        const TagType = href === undefined ? 'button' : 'a';\n        const attrs = (TagType === 'button')\n            ? { type }\n            : {\n                download: this.download,\n                href,\n                rel,\n                target\n            };\n        let fill = this.fill;\n        if (fill === undefined) {\n            fill = this.inToolbar ? 'clear' : 'solid';\n        }\n        return (h(Host, { onClick: this.handleClick, \"aria-disabled\": disabled ? 'true' : null, class: Object.assign(Object.assign({}, createColorClasses$1(color)), { [mode]: true, [buttonType]: true, [`${buttonType}-${expand}`]: expand !== undefined, [`${buttonType}-${finalSize}`]: finalSize !== undefined, [`${buttonType}-${shape}`]: shape !== undefined, [`${buttonType}-${fill}`]: true, [`${buttonType}-strong`]: strong, 'button-has-icon-only': hasIconOnly, 'button-disabled': disabled, 'ion-activatable': true, 'ion-focusable': true }) }, h(TagType, Object.assign({}, attrs, { class: \"button-native\", disabled: disabled, onFocus: this.onFocus, onBlur: this.onBlur }), h(\"span\", { class: \"button-inner\" }, h(\"slot\", { name: \"icon-only\" }), h(\"slot\", { name: \"start\" }), h(\"slot\", null), h(\"slot\", { name: \"end\" })), mode === 'md' && h(\"ion-ripple-effect\", { type: this.rippleType }))));\n    }\n    get el() { return getElement(this); }\n    static get style() { return \":host{--overflow:hidden;--ripple-color:currentColor;--border-width:initial;--border-color:initial;--border-style:initial;--color-hover:initial;--box-shadow:none;display:inline-block;width:auto;color:var(--color);font-family:var(--ion-font-family,inherit);text-align:center;text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:top;vertical-align:-webkit-baseline-middle;pointer-events:auto;-webkit-font-kerning:none;font-kerning:none}:host(.button-disabled){--opacity:.5;pointer-events:none}:host(.button-disabled) .button-native{cursor:default;pointer-events:none}:host(.button-solid){--background:var(--ion-color-primary,#3880ff);--background-focused:var(--ion-color-primary-shade,#3171e0);--background-hover:var(--ion-color-primary-tint,#4c8dff);--color:var(--ion-color-primary-contrast,#fff);--color-activated:var(--ion-color-primary-contrast,#fff);--color-focused:var(--ion-color-primary-contrast,#fff)}:host(.button-solid.ion-color) .button-native{background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(.button-solid.ion-color.ion-focused) .button-native{background:var(--ion-color-shade)}:host(.button-outline){--border-color:var(--ion-color-primary,#3880ff);--background:transparent;--color:var(--ion-color-primary,#3880ff);--color-focused:var(--ion-color-primary,#3880ff)}:host(.button-outline.ion-color) .button-native{border-color:var(--ion-color-base);background:transparent;color:var(--ion-color-base)}:host(.button-outline.ion-focused.ion-color) .button-native{background:rgba(var(--ion-color-base-rgb),.1);color:var(--ion-color-base)}:host(.button-clear){--border-width:0;--background:transparent;--color:var(--ion-color-primary,#3880ff)}:host(.button-clear.ion-color) .button-native{background:transparent;color:var(--ion-color-base)}:host(.button-clear.ion-focused.ion-color) .button-native{background:rgba(var(--ion-color-base-rgb),.1);color:var(--ion-color-base)}:host(.button-clear.activated.ion-color) .button-native{background:transparent}:host(.button-block){display:block}:host(.button-block) .button-native{margin-left:0;margin-right:0;display:block;width:100%;clear:both;contain:content}:host(.button-block) .button-native:after{clear:both}:host(.button-full){display:block}:host(.button-full) .button-native{margin-left:0;margin-right:0;display:block;width:100%;contain:content}:host(.button-full:not(.button-round)) .button-native{border-radius:0;border-right-width:0;border-left-width:0}.button-native{border-radius:var(--border-radius);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);outline:none;background:var(--background);line-height:1;-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);contain:layout style;cursor:pointer;opacity:var(--opacity);overflow:var(--overflow);z-index:0;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::-moz-focus-inner{border:0}.button-inner{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%}::slotted(ion-icon){font-size:1.4em;pointer-events:none}::slotted(ion-icon[slot=start]){margin-left:-.3em;margin-right:.3em;margin-top:0;margin-bottom:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){::slotted(ion-icon[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:-.3em;margin-inline-start:-.3em;-webkit-margin-end:.3em;margin-inline-end:.3em}}::slotted(ion-icon[slot=end]){margin-left:.3em;margin-right:-.2em;margin-top:0;margin-bottom:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){::slotted(ion-icon[slot=end]){margin-left:unset;margin-right:unset;-webkit-margin-start:.3em;margin-inline-start:.3em;-webkit-margin-end:-.2em;margin-inline-end:-.2em}}::slotted(ion-icon[slot=icon-only]){font-size:1.8em}ion-ripple-effect{color:var(--ripple-color)}:host(.ion-focused) .button-native{background:var(--background-focused);color:var(--color-focused)}:host(.activated) .button-native{background:var(--background-activated);color:var(--color-activated)}\\@media (any-hover:hover){:host(:hover) .button-native{background:var(--background-hover);color:var(--color-hover)}}:host{--border-radius:10px;--padding-top:0;--padding-bottom:0;--padding-start:1em;--padding-end:1em;--transition:background-color,opacity 100ms linear;margin-left:2px;margin-right:2px;margin-top:4px;margin-bottom:4px;height:2.8em;font-size:16px;font-weight:500;letter-spacing:-.03em}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.button-solid){--background-activated:var(--ion-color-primary-shade,#3171e0)}:host(.button-solid.activated){--opacity:1}:host(.button-solid.activated.ion-color) .button-native{background:var(--ion-color-shade)}:host(.button-outline){--border-radius:10px;--border-width:1px;--border-style:solid;--background-activated:var(--ion-color-primary,#3880ff);--background-focused:rgba(var(--ion-color-primary-rgb,56,128,255),0.1);--color-activated:var(--ion-color-primary-contrast,#fff)}:host(.button-outline.activated.ion-color) .button-native{background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(.button-clear.activated){--opacity:0.4}:host(.button-clear){--background-activated:transparent;--background-focused:rgba(var(--ion-color-primary-rgb,56,128,255),0.1);--color-activated:var(--ion-color-primary,#3880ff);--color-focused:var(--ion-color-primary,#3880ff)}:host(.button-large){--border-radius:12px;--padding-top:0;--padding-start:1em;--padding-end:1em;--padding-bottom:0;height:2.8em;font-size:20px}:host(.button-small){--border-radius:6px;--padding-top:0;--padding-start:0.9em;--padding-end:0.9em;--padding-bottom:0;height:2.1em;font-size:13px}:host(.button-round){--border-radius:64px;--padding-top:0;--padding-start:26px;--padding-end:26px;--padding-bottom:0}:host(.button-strong){font-weight:600}\\@media (any-hover:hover){:host(.button-solid:hover){--opacity:0.8}:host(.button-clear:hover),:host(.button-outline:hover){--opacity:0.6}:host(.ion-focused:hover){--background-hover:var(--background-focused);--color-hover:var(--color-focused)}:host(.activated:hover){--background-hover:var(--background-activated);--color-hover:var(--color-activated)}}\"; }\n};\n\nlet CACHED_MAP;\r\nconst getIconMap = () => {\r\n    if (!CACHED_MAP) {\r\n        const win = window;\r\n        win.Ionicons = win.Ionicons || {};\r\n        CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\r\n    }\r\n    return CACHED_MAP;\r\n};\r\nconst getUrl = (i) => {\r\n    let url = getSrc(i.src);\r\n    if (url) {\r\n        return url;\r\n    }\r\n    url = getName(i.name, i.icon, i.mode, i.ios, i.md);\r\n    if (url) {\r\n        return getNamedUrl(url);\r\n    }\r\n    if (i.icon) {\r\n        url = getSrc(i.icon);\r\n        if (url) {\r\n            return url;\r\n        }\r\n        url = getSrc(i.icon[i.mode]);\r\n        if (url) {\r\n            return url;\r\n        }\r\n    }\r\n    return null;\r\n};\r\nconst getNamedUrl = (name) => {\r\n    const url = getIconMap().get(name);\r\n    if (url) {\r\n        return url;\r\n    }\r\n    return getAssetPath(`svg/${name}.svg`);\r\n};\r\nconst getName = (name, icon, mode, ios, md) => {\r\n    // default to \"md\" if somehow the mode wasn't set\r\n    mode = (mode && mode.toLowerCase()) === 'ios' ? 'ios' : 'md';\r\n    // if an icon was passed in using the ios or md attributes\r\n    // set the iconName to whatever was passed in\r\n    if (ios && mode === 'ios') {\r\n        name = ios.toLowerCase();\r\n    }\r\n    else if (md && mode === 'md') {\r\n        name = md.toLowerCase();\r\n    }\r\n    else {\r\n        if (!name && icon && !isSrc(icon)) {\r\n            name = icon;\r\n        }\r\n        if (isStr(name)) {\r\n            name = name.toLowerCase();\r\n            if (!/^md-|^ios-|^logo-/.test(name)) {\r\n                // this does not have one of the defaults\r\n                // so lets auto add in the mode prefix for them\r\n                name = mode + '-' + name;\r\n            }\r\n        }\r\n    }\r\n    if (!isStr(name) || name.trim() === '') {\r\n        return null;\r\n    }\r\n    // only allow alpha characters and dash\r\n    const invalidChars = name.replace(/[a-z]|-|\\d/gi, '');\r\n    if (invalidChars !== '') {\r\n        return null;\r\n    }\r\n    return name;\r\n};\r\nconst getSrc = (src) => {\r\n    if (isStr(src)) {\r\n        src = src.trim();\r\n        if (isSrc(src)) {\r\n            return src;\r\n        }\r\n    }\r\n    return null;\r\n};\r\nconst isSrc = (str) => {\r\n    return str.length > 0 && /(\\/|\\.)/.test(str);\r\n};\r\nconst isStr = (val) => typeof val === 'string';\n\nconst validateContent = (svgContent) => {\r\n    if (svgContent) {\r\n        const div = document.createElement('div');\r\n        div.innerHTML = svgContent;\r\n        // setup this way to ensure it works on our buddy IE\r\n        for (let i = div.childNodes.length - 1; i >= 0; i--) {\r\n            if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\r\n                div.removeChild(div.childNodes[i]);\r\n            }\r\n        }\r\n        // must only have 1 root element\r\n        const svgElm = div.firstElementChild;\r\n        if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\r\n            svgElm.setAttribute('class', 's-ion-icon');\r\n            // root element must be an svg\r\n            // lets double check we've got valid elements\r\n            // do not allow scripts\r\n            if (isValid(svgElm)) {\r\n                return div.innerHTML;\r\n            }\r\n        }\r\n    }\r\n    return '';\r\n};\r\nconst isValid = (elm) => {\r\n    if (elm.nodeType === 1) {\r\n        if (elm.nodeName.toLowerCase() === 'script') {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < elm.attributes.length; i++) {\r\n            const val = elm.attributes[i].value;\r\n            if (isStr(val) && val.toLowerCase().indexOf('on') === 0) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let i = 0; i < elm.childNodes.length; i++) {\r\n            if (!isValid(elm.childNodes[i])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\nconst requests = new Map();\r\nconst getSvgContent = (url) => {\r\n    // see if we already have a request for this url\r\n    let req = requests.get(url);\r\n    if (!req) {\r\n        // we don't already have a request\r\n        req = fetch(url).then(rsp => {\r\n            if (rsp.status <= 299) {\r\n                return rsp.text();\r\n            }\r\n            return Promise.resolve(null);\r\n        }).then(svgContent => validateContent(svgContent));\r\n        // cache for the same requests\r\n        requests.set(url, req);\r\n    }\r\n    return req;\r\n};\n\nconst Icon = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.mode = getIonMode(this);\n        this.isVisible = false;\n        /**\n         * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n         * Default, `false`.\n         */\n        this.lazy = false;\n    }\n    connectedCallback() {\n        // purposely do not return the promise here because loading\n        // the svg file should not hold up loading the app\n        // only load the svg if it's visible\n        this.waitUntilVisible(this.el, '50px', () => {\n            this.isVisible = true;\n            this.loadIcon();\n        });\n    }\n    disconnectedCallback() {\n        if (this.io) {\n            this.io.disconnect();\n            this.io = undefined;\n        }\n    }\n    waitUntilVisible(el, rootMargin, cb) {\n        if ( this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n            const io = this.io = new window.IntersectionObserver((data) => {\n                if (data[0].isIntersecting) {\n                    io.disconnect();\n                    this.io = undefined;\n                    cb();\n                }\n            }, { rootMargin });\n            io.observe(el);\n        }\n        else {\n            // browser doesn't support IntersectionObserver\n            // so just fallback to always show it\n            cb();\n        }\n    }\n    loadIcon() {\n        if ( this.isVisible) {\n            const url = getUrl(this);\n            if (url) {\n                getSvgContent(url)\n                    .then(svgContent => this.svgContent = svgContent);\n            }\n        }\n        if (!this.ariaLabel) {\n            const label = getName(this.name, this.icon, this.mode, this.ios, this.md);\n            // user did not provide a label\n            // come up with the label based on the icon name\n            if (label) {\n                this.ariaLabel = label\n                    .replace('ios-', '')\n                    .replace('md-', '')\n                    .replace(/\\-/g, ' ');\n            }\n        }\n    }\n    render() {\n        const mode = this.mode || 'md';\n        const flipRtl = this.flipRtl || (this.ariaLabel && this.ariaLabel.indexOf('arrow') > -1 && this.flipRtl !== false);\n        return (h(Host, { role: \"img\", class: Object.assign({ [mode]: true }, createColorClasses(this.color), { [`icon-${this.size}`]: !!this.size, 'flip-rtl': !!flipRtl && this.el.ownerDocument.dir === 'rtl' }) }, (( this.svgContent)\n            ? h(\"div\", { class: \"icon-inner\", innerHTML: this.svgContent })\n            : h(\"div\", { class: \"icon-inner\" }))));\n    }\n    static get assetsDirs() { return [\"svg\"]; }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"name\": [\"loadIcon\"],\n        \"src\": [\"loadIcon\"],\n        \"icon\": [\"loadIcon\"]\n    }; }\n    static get style() { return \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;-webkit-box-sizing:content-box!important;box-sizing:content-box!important}.icon-inner,svg{display:block;height:100%;width:100%}:host(.flip-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}:host(.icon-small){font-size:18px!important}:host(.icon-large){font-size:32px!important}:host(.ion-color){color:var(--ion-color-base)!important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary,#3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary,#0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary,#f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success,#10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning,#ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger,#f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light,#f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium,#989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark,#222428)}\"; }\n};\nconst getIonMode = (ref) => {\n    return getMode(ref) || document.documentElement.getAttribute('mode') || 'md';\n};\nconst createColorClasses = (color) => {\n    return (color) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : null;\n};\n\nexport { Button as ion_button, Icon as ion_icon };\n"],"sourceRoot":"webpack:///","file":"13-es5.js"}