{"version":3,"sources":["webpack:///src/app/pages/profile/change-email/change-email/change-email.page.html","webpack:///src/app/pages/profile/change-email/change-email/change-email-routing.module.ts","webpack:///src/app/pages/profile/change-email/change-email/change-email.module.ts","webpack:///src/app/pages/profile/change-email/change-email/change-email.page.scss","webpack:///src/app/pages/profile/change-email/change-email/change-email.page.ts"],"names":["routes","path","component","loadChildren","then","m","ConfirmPageModule","ChangeEmailPageRoutingModule","imports","forChild","exports","ChangeEmailPageModule","declarations","ChangeEmailPage","formBuilder","router","auth","toast","alertController","profile","activeEmail","validationMessasges","email","type","message","password","getValue","console","log","changeEmail","group","required","compose","minLength","pattern","valueChanges","subscribe","_","setTimeout","valid","formValid","navigate","create","duration","cssClass","keyboardClose","position","present","header","buttons","text","alert","newEmail","presentAlert","selector","template"],"mappings":"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","file":"change-email-change-email-change-email-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Change Email</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!-- Desktop Header -->\\n    <ion-grid fixed class=\\\"ion-text-center\\\">\\n      <ion-row class=\\\"ion-hide-md-down\\\" style=\\\"margin: 5% 0% 3% 0%;\\\">\\n        <ion-col offset=\\\"2.5\\\" size=\\\"2.5\\\">\\n          <h1>Change Email</h1>\\n        </ion-col>\\n        <ion-col push=\\\"2.5\\\" size=\\\"2\\\">\\n          <ion-button class=\\\"blue-button\\\" (click)=\\\"back()\\\">\\n             Back\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n      <!-- Horizontal Line for Desktop Header -->\\n      <ion-row class=\\\"ion-justify-content-center ion-hide-md-down\\\">\\n        <ion-col size=\\\"10\\\">\\n          <hr style=\\\"background-color: #00000044;\\\" />\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"8\\\" size-lg=\\\"6\\\">\\n            <h6 class=\\\"text-header\\\" style=\\\"width: unset;\\\">{{activeEmail}}</h6>\\n            <form (ngSubmit)=\\\"confirmChangedEmail(this.changeEmail.controls.email.value, this.changeEmail.controls.password.value)\\\" [formGroup]=\\\"changeEmail\\\">\\n\\n\\n            <ion-list class=\\\"line-input\\\">\\n\\n                <!-- Email -->\\n                <ion-item>\\n                  <ion-input\\n                    required\\n                    placeholder=\\\"new email\\\"\\n                    formControlName=\\\"email\\\"\\n                    type=\\\"email\\\"\\n                    (keyup.enter)=\\\"formValid ? confirmChangedEmail(this.changeEmail.controls.email.value, this.changeEmail.controls.password.value) : null\\\">\\n                  </ion-input>\\n                </ion-item>\\n\\n                <!-- Email Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                  <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                    <div class=\\\"error-message\\\"\\n                    *ngIf=\\\"changeEmail\\n                      .get('email')\\n                      .hasError(validation.type) && (changeEmail.get('email')\\n                      .dirty || changeEmail.get('email').touched)\\\">\\n                      {{ validation.message }}\\n                    </div>\\n                  </ng-container>\\n                </div>\\n\\n                <ion-item>\\n                    <ion-input\\n                      required\\n                      placeholder=\\\"password\\\"\\n                      formControlName=\\\"password\\\"\\n                      minlength=\\\"8\\\"\\n                      type=\\\"password\\\"\\n                      (keyup.enter)=\\\"formValid ? confirmChangedEmail(this.changeEmail.controls.email.value, this.changeEmail.controls.password.value) : null\\\">\\n                    </ion-input>\\n                </ion-item>\\n          </ion-list>\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!formValid\\\" class=\\\"orange-button\\\" style=\\\"width: unset;\\\">CHANGE EMAIL</ion-button>\\n              </form>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-content>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChangeEmailPage } from './change-email.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChangeEmailPage\n  },\n  {\n    path: 'confirm',\n    loadChildren: () => import('../confirm/confirm.module').then( m => m.ConfirmPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChangeEmailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChangeEmailPageRoutingModule } from './change-email-routing.module';\n\nimport { ChangeEmailPage } from './change-email.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ChangeEmailPageRoutingModule\n  ],\n  declarations: [ChangeEmailPage]\n})\nexport class ChangeEmailPageModule {}\n","export default \"ion-title {\\n  margin: 0;\\n}\\n\\n.blue-button {\\n  -webkit-animation: none;\\n          animation: none;\\n  opacity: unset;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mZXJyby9EZXNrdG9wL1VuaXRlZC1XYXkvTW9iaWxlL3NyYy9hcHAvcGFnZXMvcHJvZmlsZS9jaGFuZ2UtZW1haWwvY2hhbmdlLWVtYWlsL2NoYW5nZS1lbWFpbC5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvY2hhbmdlLWVtYWlsL2NoYW5nZS1lbWFpbC9jaGFuZ2UtZW1haWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksU0FBQTtBQ0NKOztBREVBO0VBQ0ksdUJBQUE7VUFBQSxlQUFBO0VBQ0EsY0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcHJvZmlsZS9jaGFuZ2UtZW1haWwvY2hhbmdlLWVtYWlsL2NoYW5nZS1lbWFpbC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tdGl0bGUge1xuICAgIG1hcmdpbjogMDtcbn1cblxuLmJsdWUtYnV0dG9uIHtcbiAgICBhbmltYXRpb246IG5vbmU7XG4gICAgb3BhY2l0eTogdW5zZXQ7XG59IiwiaW9uLXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uYmx1ZS1idXR0b24ge1xuICBhbmltYXRpb246IG5vbmU7XG4gIG9wYWNpdHk6IHVuc2V0O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../../services/auth.service';\nimport { ProfileService } from '../../../../services/profile.service';\n\nimport { ToastController, AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-change-email',\n  templateUrl: './change-email.page.html',\n  styleUrls: ['./change-email.page.scss'],\n})\nexport class ChangeEmailPage implements OnInit {\n  changeEmail: FormGroup;\n  activeEmail = '';\n\n  formValid: Boolean;\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Must be a valid email address'}\n    ],\n    password: [\n      // tslint:disable-next-line: max-line-length\n      { type: 'pattern', message: 'Password must be at least 6 characters with at least one lowercase character, one uppercase character, and one number.'}\n    ]\n  };\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private auth: AuthService,\n    private toast: ToastController,\n    private alertController: AlertController,\n    private profile: ProfileService\n    ) {\n      this.activeEmail = this.profile.email.getValue();\n      console.log('Active Email: ' + this.activeEmail);\n     }\n\n  ngOnInit() {\n\n    this.changeEmail =  this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.compose([\n        Validators.minLength(8),\n        Validators.required,\n        // this is for the letters (both uppercase and lowercase) and numbers validation\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n     ])]\n    });\n\n    this.changeEmail.valueChanges.subscribe( _ => {\n      setTimeout(() => {\n        if (this.changeEmail.valid) {\n          this.formValid = true;\n        } else {\n          this.formValid = false;\n        }\n      }, 100);\n    });\n  }\n\n  back() {\n    this.router.navigate(['/home/profile/edit-profile-page']);\n  }\n\n  async presentToast() {\n    const toast = await this.toast.create({\n      message: 'There was an error with your password or email. Please try again.',\n      duration: 5000,\n      cssClass: 'wrong-password-toast',\n      keyboardClose: true,\n      position: 'top',\n\n    });\n    toast.present();\n  }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'danger-alert',\n      header: 'Invalid Email',\n      message: 'New Email cannot be the same as the current one.',\n      buttons: [{\n        text: 'OK'\n      }]\n    });\n\n    await alert.present();\n  }\n\n  confirmChangedEmail(newEmail, password) {\n    if (newEmail == this.activeEmail) {\n      // Show an alert telling the user that they can't use the same email\n      this.presentAlert();\n    }\n    else {\n      this.profile.changeEmail('eddie@gmail.com', newEmail, password);\n    }\n  }\n\n}\n"]}