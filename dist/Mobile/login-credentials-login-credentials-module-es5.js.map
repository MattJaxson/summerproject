{"version":3,"sources":["webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials.page.scss","webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials-routing.module.ts","webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials.page.html","webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials.module.ts","webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials.page.ts"],"names":["routes","path","component","loadChildren","then","m","EnterCodePageModule","LoginCredentialsPageRoutingModule","imports","forChild","exports","LoginCredentialsPageModule","declarations","LoginCredentialsPage","router","formBuilder","auth","alert","passwordsMatch","code","validationMessasges","email","type","message","password","credentialsForm","group","required","compose","minLength","pattern","reTypePassword","formOnChanges","setTimeout","inputElement","setFocus","console","log","valueChanges","subscribe","data","statusChanges","status","controls","value","touched","valid","doesUserExists","pipe","e","error","msg","userAlreadyExistAlert","exists","getLoginCredentials","navigate","create","cssClass","buttons","present","selector","template"],"mappings":"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","file":"login-credentials-login-credentials-module-es5.js","sourcesContent":["export default \"ion-title {\\n  margin: 0;\\n}\\n\\n.header {\\n  background: #edf3f8;\\n  height: auto;\\n}\\n\\n.text-header {\\n  font-size: 1em;\\n  line-height: 1.9em;\\n  color: #666;\\n  z-index: 999;\\n  text-align: justify;\\n}\\n\\n.cancel-button {\\n  margin: 0 10px;\\n}\\n\\n.orange-button {\\n  width: unset;\\n  display: block;\\n  margin: 100px auto 100px auto;\\n  width: 200px;\\n  -webkit-animation: none;\\n          animation: none;\\n  opacity: 1;\\n}\\n\\nspan {\\n  font-weight: 900;\\n  font-size: 1em;\\n  color: #005191;\\n}\\n\\n.badPassword {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in 0.5s forwards;\\n          animation: password-icons 1s ease-in 0.5s forwards;\\n}\\n\\n.badPassword:nth-child(2) {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in forwards;\\n          animation: password-icons 1s ease-in forwards;\\n}\\n\\n.goodPassword {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in 0.5s forwards;\\n          animation: password-icons 1s ease-in 0.5s forwards;\\n}\\n\\n.goodPassword:nth-child(2) {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in forwards;\\n          animation: password-icons 1s ease-in forwards;\\n}\\n\\n@-webkit-keyframes password-icons {\\n  0% {\\n    transform: translateX(50px);\\n  }\\n  100% {\\n    transform: translateX(0px);\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes password-icons {\\n  0% {\\n    transform: translateX(50px);\\n  }\\n  100% {\\n    transform: translateX(0px);\\n    opacity: 1;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYXV0aC9zaWduLXVwL2xvZ2luLWNyZWRlbnRpYWxzL2xvZ2luLWNyZWRlbnRpYWxzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFNBQUE7QUFDRjs7QUFFQTtFQUNFLG1CQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0UsY0FBQTtFQUNBLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsY0FBQTtBQUNGOztBQUVBO0VBQ0UsWUFBQTtFQUNBLGNBQUE7RUFDQSw2QkFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtVQUFBLGVBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBR0E7RUFDRSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxjQUFBO0FBQUY7O0FBR0E7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSwwREFBQTtVQUFBLGtEQUFBO0FBQUY7O0FBR0E7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxxREFBQTtVQUFBLDZDQUFBO0FBQUY7O0FBR0E7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSwwREFBQTtVQUFBLGtEQUFBO0FBQUY7O0FBR0E7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxxREFBQTtVQUFBLDZDQUFBO0FBQUY7O0FBR0E7RUFDRTtJQUNFLDJCQUFBO0VBQUY7RUFHQTtJQUNFLDBCQUFBO0lBQ0EsVUFBQTtFQURGO0FBQ0Y7O0FBUEE7RUFDRTtJQUNFLDJCQUFBO0VBQUY7RUFHQTtJQUNFLDBCQUFBO0lBQ0EsVUFBQTtFQURGO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hdXRoL3NpZ24tdXAvbG9naW4tY3JlZGVudGlhbHMvbG9naW4tY3JlZGVudGlhbHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uaGVhZGVyIHtcbiAgYmFja2dyb3VuZDogI2VkZjNmODtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4udGV4dC1oZWFkZXIge1xuICBmb250LXNpemU6IDFlbTtcbiAgbGluZS1oZWlnaHQ6IDEuOWVtO1xuICBjb2xvcjogIzY2NjtcbiAgei1pbmRleDogOTk5O1xuICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xufVxuXG4uY2FuY2VsLWJ1dHRvbiB7XG4gIG1hcmdpbjogMCAxMHB4O1xufVxuXG4ub3JhbmdlLWJ1dHRvbiB7XG4gIHdpZHRoOiB1bnNldDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMTAwcHggYXV0byAxMDBweCBhdXRvO1xuICB3aWR0aDogMjAwcHg7XG4gIGFuaW1hdGlvbjogbm9uZTtcbiAgb3BhY2l0eTogMTtcbn1cblxuXG5zcGFuIHtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgZm9udC1zaXplOiAxZW07XG4gIGNvbG9yOiAjMDA1MTkxO1xufVxuXG4uYmFkUGFzc3dvcmQge1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogcGFzc3dvcmQtaWNvbnMgMXMgZWFzZS1pbiAwLjVzIGZvcndhcmRzO1xufVxuXG4uYmFkUGFzc3dvcmQ6bnRoLWNoaWxkKDIpIHtcbiAgLS1iYWNrZ3JvdW5kOiBub25lO1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IHBhc3N3b3JkLWljb25zIDFzIGVhc2UtaW4gZm9yd2FyZHM7XG59XG5cbi5nb29kUGFzc3dvcmQge1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogcGFzc3dvcmQtaWNvbnMgMXMgZWFzZS1pbiAwLjVzIGZvcndhcmRzO1xufVxuXG4uZ29vZFBhc3N3b3JkOm50aC1jaGlsZCgyKSB7XG4gIC0tYmFja2dyb3VuZDogbm9uZTtcbiAgb3BhY2l0eTogMDtcbiAgYW5pbWF0aW9uOiBwYXNzd29yZC1pY29ucyAxcyBlYXNlLWluIGZvcndhcmRzO1xufVxuXG5Aa2V5ZnJhbWVzIHBhc3N3b3JkLWljb25zIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1MHB4KTtcbiAgfVxuXG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwcHgpO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn0iXX0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginCredentialsPage } from './login-credentials.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginCredentialsPage\n  },\n  {\n    path: 'enter-code/:email',\n    loadChildren: () => import('../enter-code/enter-code.module').then(m => m.EnterCodePageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginCredentialsPageRoutingModule {}\n","export default \"<ion-header style=\\\"display: none;\\\"></ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n\\n    <!-- Header -->\\n    <ion-row class=\\\"ion-justify-content-center header\\\">\\n      <ion-col size-lg=\\\"6\\\" size-md=\\\"7\\\" size-xs=\\\"11\\\">\\n        <h6 class=\\\"text-header\\\">Please create your login credentials. This is the information you will use to login with - an <span>email</span> and a <span>password</span>. Your password needs to be <span>at least 8 characters long, with at least 1 uppercase letter and one number.</span></h6>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col size-lg=\\\"5\\\" size-md=\\\"7\\\" size-xs=\\\"11\\\">\\n\\n          <form (ngSubmit)=\\\"enterCodePage(this.credentialsForm.value.email, this.credentialsForm.value.password)\\\" [formGroup]=\\\"credentialsForm\\\">\\n\\n              <ion-list class=\\\"line-input\\\">\\n\\n                <ion-item>\\n                  <ion-input\\n                  #autoFucousInput\\n                  formControlName=\\\"email\\\"\\n                  type=\\\"email\\\"\\n                  placeholder=\\\"email\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Email Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                    <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                      <div class=\\\"error-message\\\"\\n                        *ngIf=\\\"credentialsForm\\n                          .get('email')\\n                          .hasError(validation.type) && (credentialsForm.get('email')\\n                          .dirty || credentialsForm.get('email').touched)\\\">\\n                        {{ validation.message }}\\n                      </div>\\n                    </ng-container>\\n                  </div>\\n                <br>\\n                <ion-item>\\n                  <ion-input\\n                  required\\n                  inputmode=\\\"text\\\"\\n                  formControlName=\\\"password\\\"\\n                  type=\\\"password\\\"\\n                  placeholder=\\\"enter password\\\"></ion-input>\\n\\n                  <ion-button *ngIf=\\\"!passwordsMatch\\\" class=\\\"badPassword\\\" item-right>\\n                     <ion-icon style=\\\"color: #FF443B;\\\" name=\\\"close\\\"> </ion-icon>\\n                  </ion-button>\\n\\n                  <ion-button *ngIf=\\\"passwordsMatch\\\" class=\\\"goodPassword\\\" item-right>\\n                      <ion-icon style=\\\"color: #21df82;\\\" size=\\\"large\\\"  name=\\\"checkmark\\\"> </ion-icon>\\n                   </ion-button>\\n\\n                </ion-item>\\n\\n                <!-- Password Validation-->\\n             <div class=\\\"validation-errors\\\">\\n                 <ng-container *ngFor=\\\"let validation of validationMessasges.password\\\">\\n                   <div class=\\\"error-message\\\"\\n                     *ngIf=\\\"credentialsForm\\n                       .get('password')\\n                       .hasError('pattern') && (credentialsForm.get('password')\\n                       .dirty || credentialsForm.get('password').touched)\\\">\\n                     {{ validation.message }}\\n                   </div>\\n                 </ng-container>\\n               </div>\\n\\n                <br>\\n                <ion-item>\\n                  <ion-input\\n                  formControlName=\\\"reTypePassword\\\"\\n                  type=\\\"password\\\"\\n                  placeholder=\\\"re-type password\\\"></ion-input>\\n\\n                    <ion-button *ngIf=\\\"!passwordsMatch\\\" class=\\\"badPassword\\\" item-right>\\n                        <ion-icon style=\\\"color: #FF443B;\\\" name=\\\"close\\\"> </ion-icon>\\n                    </ion-button>\\n\\n                     <ion-button *ngIf=\\\"passwordsMatch\\\" class=\\\"goodPassword\\\" item-right>\\n                         <ion-icon style=\\\"color: #21df82;\\\" size=\\\"large\\\" name=\\\"checkmark\\\"> </ion-icon>\\n                    </ion-button>\\n\\n                </ion-item>\\n\\n                <!-- Password Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                    <ng-container *ngFor=\\\"let validation of validationMessasges.password\\\">\\n                      <div class=\\\"error-message\\\"\\n                        *ngIf=\\\"credentialsForm\\n                          .get('reTypePassword')\\n                          .hasError('pattern') && (credentialsForm.get('reTypePassword')\\n                          .dirty || credentialsForm.get('reTypePassword').touched)\\\">\\n                        {{ validation.message }}\\n                      </div>\\n                    </ng-container>\\n                  </div>\\n                <ion-button type=\\\"submit\\\" class=\\\"orange-button\\\" [disabled]=\\\"!passwordsMatch\\\">NEXT</ion-button>\\n              </ion-list>\\n          </form>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginCredentialsPageRoutingModule } from './login-credentials-routing.module';\n\nimport { LoginCredentialsPage } from './login-credentials.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    LoginCredentialsPageRoutingModule\n  ],\n  declarations: [LoginCredentialsPage]\n})\nexport class LoginCredentialsPageModule {}\n","import { Component, OnInit, AfterViewInit, ViewChild, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IonInput, AlertController } from '@ionic/angular';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login-credentials',\n  templateUrl: './login-credentials.page.html',\n  styleUrls: ['./login-credentials.page.scss'],\n})\nexport class LoginCredentialsPage implements OnInit, AfterViewInit, OnDestroy {\n\n  @ViewChild('autoFucousInput', {static: false})  inputElement: IonInput;\n\n  credentialsForm: FormGroup;\n\n  passwordsMatch = false;\n  code = '';\n  email;\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Please enter a valid email address'}\n    ],\n    password: [\n      { type: 'password', message: 'Please enter a valid password.'}\n    ]\n  };\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private alert: AlertController\n    ) { }\n\n  ngOnInit() {\n    this.credentialsForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.compose([\n        Validators.minLength(8),\n        Validators.required,\n        // at least 1 number, 1 uppercase letter, and one lowercase letter\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n     ])],\n     reTypePassword: ['', Validators.compose([\n      Validators.minLength(8),\n      Validators.required,\n      // at least 1 number, 1 uppercase letter, and one lowercase letter\n      Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n   ])]\n  });\n\n    this.formOnChanges();\n}\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n       this.inputElement.setFocus();\n  }, 1000);\n}\n\nngOnDestroy() {\n  console.log('Being Destroyed');\n}\n\nformOnChanges(): void {\n  console.log(this.credentialsForm);\n  this.credentialsForm.valueChanges\n  .subscribe(\n    data => {\n      console.log(data);\n\n      this.credentialsForm.statusChanges.subscribe(status => {\n        console.log(status);\n        if ( status === 'VALID') {\n          console.log('you did it bruh');\n          this.passwordsMatch = true;\n        }\n      });\n\n      if (this.credentialsForm.controls.password.value === this.credentialsForm.controls.reTypePassword.value &&\n        this.credentialsForm.controls.password.touched &&\n        this.credentialsForm.controls.email.valid) {\n        console.log('Passwords Match');\n    }\n\n      if (this.credentialsForm.controls.password.value !== this.credentialsForm.controls.reTypePassword.value) {\n      console.log('Passwords dont match');\n      this.passwordsMatch = false;\n  }\n    }\n  );\n}\n\n\n  enterCodePage(email, password) {\n    this.email = this.credentialsForm.controls.email.value;\n    this.auth.doesUserExists(email, password)\n    .pipe(\n      catchError(e => {\n        console.error(e);\n        if (e.error.msg === 'User already registered with that email address.') {\n          return this.userAlreadyExistAlert();\n        }\n      }))\n    .subscribe(value  => {\n      console.log(value);\n      const exists = value['exists'];\n      if ( exists === false) {\n        this.auth.getLoginCredentials(email, password);\n        console.log('Going to Enter Code Page');\n        this.router.navigate(['/personal-info/profile-picture/upload-resume/login-credentials/enter-code/', this.email]);\n\n      }\n    });\n  }\n\n  async userAlreadyExistAlert() {\n    const alert = await this.alert.create({\n      cssClass: 'danger-alert',\n      message: 'This user already exists.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n\n\n  cancel() {\n    console.log('Sign up cancelled');\n    this.router.navigate(['']);\n  }\n\n}\n"]}