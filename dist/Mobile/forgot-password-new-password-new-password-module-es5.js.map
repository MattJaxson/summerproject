{"version":3,"sources":["webpack:///src/app/pages/auth/forgot-password/new-password/new-password.page.scss","webpack:///src/app/pages/auth/forgot-password/new-password/new-password-routing.module.ts","webpack:///src/app/pages/auth/forgot-password/new-password/new-password.module.ts","webpack:///src/app/pages/auth/forgot-password/new-password/new-password.page.html","webpack:///src/app/pages/auth/forgot-password/new-password/new-password.page.ts"],"names":["routes","path","component","loadChildren","then","m","ConfirmPageModule","NewPasswordPageRoutingModule","imports","forChild","exports","NewPasswordPageModule","declarations","NewPasswordPage","formBuilder","router","auth","activatedRoute","toast","BACKEND_URL","url","passwordsMatch","validationMessasges","password","type","message","newPasswordForm","group","newPassword","required","reTypeNewPassword","userEmail","snapshot","paramMap","get","console","log","formOnChanges","valueChanges","subscribe","data","statusChanges","status","controls","value","reTypePassword","touched","email","presentToast","forgotPassword","navigate","create","duration","present","selector","template"],"mappings":"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","file":"forgot-password-new-password-new-password-module-es5.js","sourcesContent":["export default \"span {\\n  font-weight: 900;\\n  font-size: 1.2em;\\n  color: #005191;\\n}\\n\\n.badPassword {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in 0.5s forwards;\\n          animation: password-icons 1s ease-in 0.5s forwards;\\n}\\n\\n.badPassword:nth-child(2) {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in forwards;\\n          animation: password-icons 1s ease-in forwards;\\n}\\n\\n.goodPassword {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in 0.5s forwards;\\n          animation: password-icons 1s ease-in 0.5s forwards;\\n}\\n\\n.goodPassword:nth-child(2) {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in forwards;\\n          animation: password-icons 1s ease-in forwards;\\n}\\n\\n@-webkit-keyframes password-icons {\\n  0% {\\n    transform: translateX(50px);\\n  }\\n  100% {\\n    transform: translateX(0px);\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes password-icons {\\n  0% {\\n    transform: translateX(50px);\\n  }\\n  100% {\\n    transform: translateX(0px);\\n    opacity: 1;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYXV0aC9mb3Jnb3QtcGFzc3dvcmQvbmV3LXBhc3N3b3JkL25ldy1wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxVQUFBO0VBQ0EsMERBQUE7VUFBQSxrREFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxVQUFBO0VBQ0EscURBQUE7VUFBQSw2Q0FBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxVQUFBO0VBQ0EsMERBQUE7VUFBQSxrREFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxVQUFBO0VBQ0EscURBQUE7VUFBQSw2Q0FBQTtBQUNGOztBQUVBO0VBQ0U7SUFDRSwyQkFBQTtFQUNGO0VBRUE7SUFDRSwwQkFBQTtJQUNBLFVBQUE7RUFBRjtBQUNGOztBQVJBO0VBQ0U7SUFDRSwyQkFBQTtFQUNGO0VBRUE7SUFDRSwwQkFBQTtJQUNBLFVBQUE7RUFBRjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYXV0aC9mb3Jnb3QtcGFzc3dvcmQvbmV3LXBhc3N3b3JkL25ldy1wYXNzd29yZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJzcGFuIHtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgZm9udC1zaXplOiAxLjJlbTtcbiAgY29sb3I6ICMwMDUxOTE7XG59XG5cbi5iYWRQYXNzd29yZCB7XG4gIC0tYmFja2dyb3VuZDogbm9uZTtcbiAgb3BhY2l0eTogMDtcbiAgYW5pbWF0aW9uOiBwYXNzd29yZC1pY29ucyAxcyBlYXNlLWluIDAuNXMgZm9yd2FyZHM7XG59XG5cbi5iYWRQYXNzd29yZDpudGgtY2hpbGQoMikge1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogcGFzc3dvcmQtaWNvbnMgMXMgZWFzZS1pbiBmb3J3YXJkcztcbn1cblxuLmdvb2RQYXNzd29yZCB7XG4gIC0tYmFja2dyb3VuZDogbm9uZTtcbiAgb3BhY2l0eTogMDtcbiAgYW5pbWF0aW9uOiBwYXNzd29yZC1pY29ucyAxcyBlYXNlLWluIDAuNXMgZm9yd2FyZHM7XG59XG5cbi5nb29kUGFzc3dvcmQ6bnRoLWNoaWxkKDIpIHtcbiAgLS1iYWNrZ3JvdW5kOiBub25lO1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IHBhc3N3b3JkLWljb25zIDFzIGVhc2UtaW4gZm9yd2FyZHM7XG59XG5cbkBrZXlmcmFtZXMgcGFzc3dvcmQtaWNvbnMge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwcHgpO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDBweCk7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufSJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewPasswordPage } from './new-password.page';\n\nconst routes: Routes = [\n  // 2nd of 3 forgot password pages\n  {\n    path: '',\n    component: NewPasswordPage\n  },\n\n  // to the last page of forgot password route, \"confirm\"\n  {\n    path: 'confirm',\n    loadChildren: () => import('../confirm/confirm.module').then(m => m.ConfirmPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewPasswordPageRoutingModule } from './new-password-routing.module';\n\nimport { NewPasswordPage } from './new-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    NewPasswordPageRoutingModule\n  ],\n  declarations: [NewPasswordPage]\n})\nexport class NewPasswordPageModule {}\n","export default \"<ion-header style=\\\"display: none;\\\">\\n</ion-header>\\n\\n<ion-content>\\n    <ion-grid class=\\\"ion-text-center\\\" style=\\\"margin-top: 10%;\\\">\\n      <ion-row>\\n        <ion-col size-lg=\\\"6\\\" offset-lg=\\\"3\\\">\\n          <h6 class=\\\"text-header\\\">Please enter your new password.</h6>\\n          <form [formGroup]=\\\"newPasswordForm\\\" (ngSubmit)=\\\"goToConfirmPage()\\\" >\\n            <ion-list class=\\\"line-input\\\">\\n\\n            <ion-item>\\n              <ion-input placeholder=\\\"Password\\\" formControlName=\\\"newPassword\\\" type=\\\"password\\\"></ion-input>\\n\\n                  <ion-button *ngIf=\\\"!passwordsMatch\\\" class=\\\"badPassword\\\" item-right>\\n                     <ion-icon style=\\\"color: #FF443B;\\\" name=\\\"close\\\"> </ion-icon>\\n                  </ion-button>\\n\\n                  <ion-button *ngIf=\\\"passwordsMatch\\\" class=\\\"goodPassword\\\" item-right>\\n                      <ion-icon style=\\\"color: #21df82;\\\" name=\\\"checkmark\\\"> </ion-icon>\\n                   </ion-button>\\n            </ion-item>\\n\\n\\n            <ion-item>\\n              <ion-input placeholder=\\\"Re-type Password\\\" formControlName=\\\"reTypeNewPassword\\\" type=\\\"password\\\"></ion-input>\\n\\n                  <ion-button *ngIf=\\\"!passwordsMatch\\\" class=\\\"badPassword\\\" item-right>\\n                     <ion-icon style=\\\"color: #FF443B;\\\" name=\\\"close\\\"> </ion-icon>\\n                  </ion-button>\\n\\n                  <ion-button *ngIf=\\\"passwordsMatch\\\" class=\\\"goodPassword\\\" item-right>\\n                      <ion-icon style=\\\"color: #21df82;\\\" name=\\\"checkmark\\\"> </ion-icon>\\n                   </ion-button>\\n            </ion-item>\\n\\n\\n            <ion-button type=\\\"submit\\\" class=\\\"orange-button\\\" >NEXT</ion-button><br>\\n            <ion-button (click)=\\\"cancel()\\\" class=\\\"cancel-button\\\" slot=\\\"end\\\">\\n                cancel\\n            </ion-button>\\n          </ion-list>\\n          </form>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-content>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastController } from '@ionic/angular';\n\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../../environments/environment';\n\n\n@Component({\n  selector: 'app-new-password',\n  templateUrl: './new-password.page.html',\n  styleUrls: ['./new-password.page.scss'],\n})\nexport class NewPasswordPage implements OnInit {\n\n  BACKEND_URL = environment.url;\n  newPasswordForm: FormGroup;\n\n  passwordsMatch = false;\n  code: string;\n  userEmail: string;\n\n  validationMessasges = {\n    password: [\n      { type: 'password', message: 'Please enter a valid password.'}\n    ]\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private auth: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private toast: ToastController) { }\n\n  ngOnInit() {\n    this.newPasswordForm =  this.formBuilder.group({\n      newPassword: ['', Validators.required],\n      reTypeNewPassword: ['', Validators.required],\n    });\n\n    this.userEmail = this.activatedRoute.snapshot.paramMap.get('email');\n\n    console.log('Email: ' + this.userEmail);\n\n    this.formOnChanges();\n  }\n\n  formOnChanges(): void {\n    console.log(this.newPasswordForm);\n    this.newPasswordForm.valueChanges\n    .subscribe(\n      data => {\n        console.log(data);\n        this.newPasswordForm.statusChanges.subscribe(status => {\n          console.log(status);\n          if ( status === 'VALID') {\n            console.log('you did it bruh');\n            this.passwordsMatch = true;\n          }\n        });\n\n        if (this.newPasswordForm.controls.newPassword.value === this.newPasswordForm.controls.reTypePassword.value &&\n          this.newPasswordForm.controls.newPassword.touched) {\n          console.log('Passwords Match');\n      }\n\n        if (this.newPasswordForm.controls.newPassword.value !== this.newPasswordForm.controls.reTypePassword.value) {\n        console.log('Passwords Match');\n        this.passwordsMatch = false;\n    }\n      }\n    );\n  }\n\n\n\n  async goToConfirmPage() {\n    const email = this.userEmail;\n    let newPassword = this.newPasswordForm.value.newPassword;\n    let reTypeNewPassword = this.newPasswordForm.value.reTypeNewPassword;\n\n    if (newPassword !== reTypeNewPassword) {\n      this.presentToast();\n      return console.log('passwords do not match');\n    }\n\n    await this.auth.forgotPassword(email, newPassword);\n\n    await console.log('Going to Confirm Password Change Page');\n    await this.router.navigate(['/enter-email/enter-code/:email/new-password/:email/confirm']);\n    }\n\n    async presentToast() {\n      const toast = await this.toast.create({\n        message: 'The two passwords you entered do not match. Please try again.',\n        duration: 2000\n      });\n      toast.present();\n    }\n\ncancel() {\n    console.log('Forgotten password cancelled');\n    this.router.navigate(['']);\n  }\n\n}\n"]}