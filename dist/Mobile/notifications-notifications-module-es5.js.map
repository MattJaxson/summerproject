{"version":3,"sources":["webpack:///src/app/pages/posts/notifications/notifications.page.html","webpack:///src/app/pages/posts/notifications/notifications-routing.module.ts","webpack:///src/app/pages/posts/notifications/notifications.module.ts","webpack:///src/app/pages/posts/notifications/notifications.page.scss","webpack:///src/app/pages/posts/notifications/notifications.page.ts"],"names":["routes","path","component","NotificationsPageRoutingModule","imports","forChild","exports","NotificationsPageModule","declarations","NotificationsPage","notifications","profile","console","log","notificationsSub","unsubscribe","initSub","getUserDetails","subscribe","userDetails","userEmail","getNotifications","notifications$","next","Object","values","data","allNotifications","n","date","Date","includeSeconds","addSuffix","clearNotifications","notification","selector","template"],"mappings":"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","file":"notifications-notifications-module-es5.js","sourcesContent":["export default \" <!-- Mobile Toolbar -->\\n <ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n      <ion-title>Notifications</ion-title>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button style=\\\"--background: linear-gradient(rgba(6, 114, 196, 0.3), rgba(0, 81, 145, 0.2)); --color: #005191; margin-right: 20px; width: 80px;\\\" (click)=\\\"clear()\\\">\\n        Clear\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n\\n  <!-- No Messages -->\\n  <ion-row *ngIf=\\\"this.allNotifications == 0\\\" class=\\\"ion-justify-content-center\\\">\\n    <ion-col class=\\\"margin-top ion-text-center\\\" size-xs=\\\"10\\\">\\n      <h3 id=\\\"no-notifications\\\">You have no notifications</h3>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row *ngIf=\\\"this.allNotifications == 0\\\" class=\\\"ion-justify-content-center\\\">\\n    <ion-col size=\\\"4\\\">\\n      <img id=\\\"icon\\\" src=\\\"../../../../assets/icons/no-notifications-icon.svg\\\" alt=\\\"\\\">\\n    </ion-col>\\n  </ion-row>\\n\\n\\n<!-- List of Sliding Items -->\\n<ion-list>\\n  <ion-item-sliding (click)=\\\"goTo()\\\" *ngFor=\\\"let n of allNotifications\\\">\\n    <ion-item>\\n      <ion-avatar>\\n        <img [src]=\\\"n.instigatingUserProfilePicture\\\" />\\n      </ion-avatar>\\n      <p id=\\\"message\\\">{{n.message}}</p>\\n      <p id=\\\"date\\\">{{n.date}}</p>\\n    </ion-item>\\n    <ion-item-options side=\\\"end\\\">\\n      <ion-item-option (click)=\\\"delete(n)\\\">Delete</ion-item-option>\\n    </ion-item-options>\\n  </ion-item-sliding>\\n</ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotificationsPage } from './notifications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationsPageRoutingModule } from './notifications-routing.module';\n\nimport { NotificationsPage } from './notifications.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificationsPageRoutingModule\n  ],\n  declarations: [NotificationsPage]\n})\nexport class NotificationsPageModule {}\n","export default \"p {\\n  font-size: 0.7em;\\n  margin-left: 10px;\\n}\\n\\n#date {\\n  opacity: 0.5;\\n  display: inline-block;\\n}\\n\\n#icon {\\n  opacity: 0.2;\\n}\\n\\n#no-notifications {\\n  opacity: 0.3;\\n}\\n\\n.margin-top {\\n  margin-top: 15%;\\n}\\n\\n.blue-button {\\n  width: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mZXJyby9EZXNrdG9wL1VuaXRlZC1XYXkvTW9iaWxlL3NyYy9hcHAvcGFnZXMvcG9zdHMvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvcG9zdHMvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBO0VBQ0EsaUJBQUE7QUNDRjs7QURLQTtFQUNFLFlBQUE7RUFDQSxxQkFBQTtBQ0ZGOztBREtBO0VBQ0UsWUFBQTtBQ0ZGOztBREtBO0VBQ0UsWUFBQTtBQ0ZGOztBREtBO0VBQ0UsZUFBQTtBQ0ZGOztBREtBO0VBQ0UsWUFBQTtBQ0ZGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcG9zdHMvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInAge1xuICBmb250LXNpemU6IDAuN2VtO1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuI21lc3NhZ2Uge1xufVxuXG4jZGF0ZSB7XG4gIG9wYWNpdHk6IDAuNTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4jaWNvbiB7XG4gIG9wYWNpdHk6IDAuMjtcbn1cblxuI25vLW5vdGlmaWNhdGlvbnMge1xuICBvcGFjaXR5OiAwLjM7XG59XG5cbi5tYXJnaW4tdG9wIHtcbiAgbWFyZ2luLXRvcDogMTUlO1xufVxuXG4uYmx1ZS1idXR0b24ge1xuICB3aWR0aDogMTAwcHg7XG59IiwicCB7XG4gIGZvbnQtc2l6ZTogMC43ZW07XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG4jZGF0ZSB7XG4gIG9wYWNpdHk6IDAuNTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4jaWNvbiB7XG4gIG9wYWNpdHk6IDAuMjtcbn1cblxuI25vLW5vdGlmaWNhdGlvbnMge1xuICBvcGFjaXR5OiAwLjM7XG59XG5cbi5tYXJnaW4tdG9wIHtcbiAgbWFyZ2luLXRvcDogMTUlO1xufVxuXG4uYmx1ZS1idXR0b24ge1xuICB3aWR0aDogMTAwcHg7XG59Il19 */\";","import { Component, OnInit, AfterContentChecked, OnDestroy} from '@angular/core';\nimport { NotificationsService } from 'src/app/services/notifications.service';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Subscription } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: ['./notifications.page.scss'],\n})\nexport class NotificationsPage implements OnInit, AfterContentChecked, OnDestroy {\n  userEmail;\n  allNotifications;\n  initSub: Subscription;\n  notificationsSub: Subscription;\n\n  constructor(\n    private notifications: NotificationsService,\n    private profile: ProfileService\n  ) { }\n\n  ngAfterContentChecked() {\n    console.log('Notification Added on backend');\n  }\n\n  ngOnDestroy() {\n    this.notificationsSub.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.initSub = this.profile.getUserDetails()\n      .subscribe(\n        userDetails => {\n          this.userEmail = userDetails['email'];\n          console.log(this.userEmail);\n\n          this.notificationsSub = this.notifications.getNotifications(this.userEmail)\n            .subscribe(\n              notifications => {\n                  console.log(notifications);\n                  this.notifications.notifications$.next(Object.values(notifications));\n                  this.notifications.notifications$.subscribe( data => {\n                    this.allNotifications = Object.values(data);\n                    for (let n of this.allNotifications) {\n                    n.date = formatDistanceToNow( new Date(n.date), {\n                      includeSeconds: true,\n                      addSuffix: false\n                    });\n\n                  }\n                });\n\n                  // TODO: replaces 'minutes' with M\n                  // let minutes = ;\n                }\n            );\n        }\n      );\n  }\n\n  clear() {\n    this.notifications.clearNotifications(this.userEmail)\n    .subscribe(\n      data => {\n\n        this.notificationsSub = this.notifications.getNotifications(this.userEmail)\n          .subscribe(\n            notifications => {\n                console.log(notifications);\n                this.notifications.notifications$.next(Object.values(notifications));\n                this.notifications.notifications$.subscribe( data => {\n                  this.allNotifications = Object.values(data);\n                  for (let n of this.allNotifications) {\n                  n.date = formatDistanceToNow( new Date(n.date), {\n                    includeSeconds: true,\n                    addSuffix: false\n                  });\n\n                }\n              });\n\n                // TODO: replaces 'minutes' with M\n                // let minutes = ;\n              }\n          );\n      }\n    );\n  }\n\n  goTo() {\n    console.log('Going to page from notification');\n  }\n\n  delete(notification) {\n    console.log('Deleting notification');\n  }\n\n\n}\n"]}