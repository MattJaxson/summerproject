{"version":3,"sources":["webpack:///src/app/pages/profile/change-password/change-password/change-password-routing.module.ts","webpack:///src/app/pages/profile/change-password/change-password/change-password.module.ts","webpack:///src/app/pages/profile/change-password/change-password/change-password.page.scss","webpack:///src/app/pages/profile/change-password/change-password/change-password.page.ts","webpack:///src/app/pages/profile/change-password/change-password/change-password.page.html"],"names":["routes","path","component","loadChildren","then","m","ConfirmPageModule","ChangePasswordPageRoutingModule","imports","forChild","exports","ChangePasswordPageModule","declarations","ChangePasswordPage","formBuilder","router","auth","alertController","profile","activeEmail","passwordsMatch","validationMessasges","password","type","message","user","email","changePassword","group","required","newPassword","compose","minLength","pattern","reTypeNewPassword","formOnChanges","navigate","console","log","valueChanges","subscribe","data","statusChanges","status","controls","value","touched","create","cssClass","header","buttons","text","alert","present","oldPassword","presentAlert","selector","template"],"mappings":"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","file":"change-password-change-password-change-password-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChangePasswordPage } from './change-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChangePasswordPage\n  },\n  {\n    path: 'confirm',\n    loadChildren: () => import('../confirm/confirm.module').then( m => m.ConfirmPageModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChangePasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChangePasswordPageRoutingModule } from './change-password-routing.module';\n\nimport { ChangePasswordPage } from './change-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChangePasswordPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ChangePasswordPage]\n})\nexport class ChangePasswordPageModule {}\n","export default \"ion-title {\\n  margin: 0;\\n}\\n\\n.blue-button {\\n  -webkit-animation: none;\\n          animation: none;\\n  opacity: unset;\\n}\\n\\n.badPassword {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in 0.5s forwards;\\n          animation: password-icons 1s ease-in 0.5s forwards;\\n}\\n\\n.badPassword:nth-child(2) {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in forwards;\\n          animation: password-icons 1s ease-in forwards;\\n}\\n\\n.goodPassword {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in 0.5s forwards;\\n          animation: password-icons 1s ease-in 0.5s forwards;\\n}\\n\\n.goodPassword:nth-child(2) {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in forwards;\\n          animation: password-icons 1s ease-in forwards;\\n}\\n\\n@-webkit-keyframes password-icons {\\n  0% {\\n    transform: translateX(50px);\\n  }\\n  100% {\\n    transform: translateX(0px);\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes password-icons {\\n  0% {\\n    transform: translateX(50px);\\n  }\\n  100% {\\n    transform: translateX(0px);\\n    opacity: 1;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2NoYW5nZS1wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxTQUFBO0FBQ0Y7O0FBRUE7RUFDRSx1QkFBQTtVQUFBLGVBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSwwREFBQTtVQUFBLGtEQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxxREFBQTtVQUFBLDZDQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSwwREFBQTtVQUFBLGtEQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxxREFBQTtVQUFBLDZDQUFBO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLDJCQUFBO0VBQ0Y7RUFFQTtJQUNFLDBCQUFBO0lBQ0EsVUFBQTtFQUFGO0FBQ0Y7O0FBUkE7RUFDRTtJQUNFLDJCQUFBO0VBQ0Y7RUFFQTtJQUNFLDBCQUFBO0lBQ0EsVUFBQTtFQUFGO0FBQ0YiLCJmaWxlIjoiY2hhbmdlLXBhc3N3b3JkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi10aXRsZSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmJsdWUtYnV0dG9uIHtcbiAgYW5pbWF0aW9uOiBub25lO1xuICBvcGFjaXR5OiB1bnNldDtcbn1cblxuLmJhZFBhc3N3b3JkIHtcbiAgLS1iYWNrZ3JvdW5kOiBub25lO1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IHBhc3N3b3JkLWljb25zIDFzIGVhc2UtaW4gMC41cyBmb3J3YXJkcztcbn1cblxuLmJhZFBhc3N3b3JkOm50aC1jaGlsZCgyKSB7XG4gIC0tYmFja2dyb3VuZDogbm9uZTtcbiAgb3BhY2l0eTogMDtcbiAgYW5pbWF0aW9uOiBwYXNzd29yZC1pY29ucyAxcyBlYXNlLWluIGZvcndhcmRzO1xufVxuXG4uZ29vZFBhc3N3b3JkIHtcbiAgLS1iYWNrZ3JvdW5kOiBub25lO1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IHBhc3N3b3JkLWljb25zIDFzIGVhc2UtaW4gMC41cyBmb3J3YXJkcztcbn1cblxuLmdvb2RQYXNzd29yZDpudGgtY2hpbGQoMikge1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogcGFzc3dvcmQtaWNvbnMgMXMgZWFzZS1pbiBmb3J3YXJkcztcbn1cblxuQGtleWZyYW1lcyBwYXNzd29yZC1pY29ucyB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTBweCk7XG4gIH1cblxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHB4KTtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../../services/auth.service';\nimport { ProfileService } from '../../../../services/profile.service';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n})\nexport class ChangePasswordPage implements OnInit {\n  changePassword: FormGroup;\n  activeEmail = '';\n  passwordsMatch = false;\n\n  validationMessasges = {\n    password: [\n      { type: 'password', message: 'Please enter a valid password.'}\n    ]\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private auth: AuthService,\n    private alertController: AlertController,\n    private profile: ProfileService\n    ) {\n      this.activeEmail = this.auth.user.email;\n     }\n\n  ngOnInit() {\n    this.changePassword =  this.formBuilder.group({\n      password: ['', Validators.required],\n      newPassword: ['', Validators.compose([\n        Validators.minLength(8),\n        Validators.required,\n        // at least 1 number, 1 uppercase letter, and one lowercase letter\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n     ])],\n     reTypeNewPassword: ['', Validators.compose([\n      Validators.minLength(8),\n      Validators.required,\n      // at least 1 number, 1 uppercase letter, and one lowercase letter\n      Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n   ])]\n    });\n\n    this.formOnChanges();\n  }\n\n  back() {\n    this.router.navigate(['/home/profile/edit-profile-page']);\n  }\n\n  formOnChanges(): void {\n    console.log(this.changePassword);\n    this.changePassword.valueChanges\n    .subscribe(\n      data => {\n        console.log(data);\n\n        this.changePassword.statusChanges.subscribe(status => {\n          console.log(status);\n          if ( status === 'VALID') {\n            this.passwordsMatch = true;\n          }\n        });\n\n        if (this.changePassword.controls.newPassword.value === this.changePassword.controls.reTypeNewPassword.value &&\n          this.changePassword.controls.newPassword.touched ) {\n          console.log('Passwords Match');\n      }\n\n        if (this.changePassword.controls.newPassword.value !== this.changePassword.controls.reTypeNewPassword.value) {\n        console.log('Passwords dont match');\n        this.passwordsMatch = false;\n    }\n      }\n    );\n  }\n  \n  async presentAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'danger-alert',\n      header: 'Invalid Password',\n      message: 'New password cannot be the same as the current one.',\n      buttons: [{\n        text: 'OK'\n      }]\n    });\n\n    await alert.present();\n  }\n\n  confirmChangedPassword(oldPassword, newPassword, reTypeNewPassword) {\n    if (oldPassword == newPassword) {\n      // Show an alert telling the user that they can't use the same email\n      this.presentAlert();\n    }\n    else {\n      this.profile.changePassword(this.activeEmail, oldPassword, newPassword, reTypeNewPassword);\n    }\n  }\n  \n}\n","export default \"<ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Change Password</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-grid fixed class=\\\"ion-text-center\\\">\\n      <ion-row class=\\\"ion-hide-md-down\\\" style=\\\"margin: 5% 0% 3% 0%;\\\">\\n        <ion-col offset=\\\"2.4\\\" size=\\\"3\\\">\\n          <h1>Change Password</h1>\\n        </ion-col>\\n        <ion-col push=\\\"2.5\\\" size=\\\"2\\\">\\n          <ion-button class=\\\"blue-button\\\" (click)=\\\"back()\\\">\\n             Back\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"ion-justify-content-center ion-hide-md-down\\\">\\n        <ion-col size=\\\"10\\\">\\n          <hr style=\\\"background-color: #00000044;\\\" />\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"8\\\" size-lg=\\\"6\\\">\\n            <h6 class=\\\"text-header\\\" style=\\\"width: unset;\\\">Change your password below.</h6>\\n            <form \\n             (ngSubmit)=\\\"confirmChangedPassword(\\n              this.changePassword.controls.password.value,\\n              this.changePassword.controls.newPassword.value,\\n              this.changePassword.controls.reTypeNewPassword.value)\\\"\\n            [formGroup]=\\\"changePassword\\\">\\n\\n\\n            <ion-list class=\\\"line-input\\\">\\n                <!-- Email -->\\n                <ion-item>\\n                  <ion-input\\n                    required\\n                    placeholder=\\\"Current password\\\"\\n                    formControlName=\\\"password\\\"\\n                    type=\\\"password\\\"\\n                    (keyup.enter)=\\\"passwordsMatch ? confirmChangedPassword(this.changePassword.controls.password.value, this.changePassword.controls.newPassword.value, this.changePassword.controls.reTypeNewPassword.value) : null\\\">\\n                  </ion-input>\\n                </ion-item>\\n\\n                <ion-item>\\n                    <ion-input\\n                      required\\n                      placeholder=\\\"New Password\\\"\\n                      formControlName=\\\"newPassword\\\"\\n                      type=\\\"password\\\"\\n                      (keyup.enter)=\\\"passwordsMatch ? confirmChangedPassword(this.changePassword.controls.password.value, this.changePassword.controls.newPassword.value, this.changePassword.controls.reTypeNewPassword.value) : null\\\">\\n                    </ion-input>\\n\\n                    <ion-button *ngIf=\\\"!passwordsMatch\\\" class=\\\"badPassword\\\" item-right>\\n                        <ion-icon style=\\\"color: #FF443B;\\\" name=\\\"close\\\"> </ion-icon>\\n                    </ion-button>\\n\\n                     <ion-button *ngIf=\\\"passwordsMatch\\\" class=\\\"goodPassword\\\" item-right>\\n                         <ion-icon style=\\\"color: #21df82;\\\" name=\\\"checkmark\\\"> </ion-icon>\\n                    </ion-button>\\n                </ion-item>\\n                \\n                <!-- Password Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                    <ng-container *ngFor=\\\"let validation of validationMessasges.password\\\">\\n                      <div class=\\\"error-message\\\"\\n                        *ngIf=\\\"changePassword\\n                          .get('newPassword')\\n                          .hasError('pattern') && (changePassword.get('newPassword')\\n                          .dirty || changePassword.get('newPassword').touched)\\\">\\n                        {{ validation.message }}\\n                      </div>\\n                    </ng-container>\\n                  </div>\\n\\n  \\n                <ion-item>\\n                    <ion-input\\n                      required\\n                      placeholder=\\\"Re-Type New Password\\\"\\n                      formControlName=\\\"reTypeNewPassword\\\"\\n                      type=\\\"password\\\"\\n                      (keyup.enter)=\\\"passwordsMatch ? confirmChangedPassword(this.changePassword.controls.password.value, this.changePassword.controls.newPassword.value, this.changePassword.controls.reTypeNewPassword.value) : null\\\">\\n                    </ion-input>\\n\\n                    <ion-button *ngIf=\\\"!passwordsMatch\\\" class=\\\"badPassword\\\" item-right>\\n                        <ion-icon style=\\\"color: #FF443B;\\\" name=\\\"close\\\"> </ion-icon>\\n                    </ion-button>\\n\\n                     <ion-button *ngIf=\\\"passwordsMatch\\\" class=\\\"goodPassword\\\" item-right>\\n                         <ion-icon style=\\\"color: #21df82;\\\" name=\\\"checkmark\\\"> </ion-icon>\\n                    </ion-button>\\n                </ion-item>\\n              </ion-list>\\n\\n              <!-- Password Validation-->\\n              <div class=\\\"validation-errors\\\">\\n                  <ng-container *ngFor=\\\"let validation of validationMessasges.password\\\">\\n                    <div class=\\\"error-message\\\"\\n                      *ngIf=\\\"changePassword\\n                        .get('reTypeNewPassword')\\n                        .hasError('pattern') && (changePassword.get('reTypeNewPassword')\\n                        .dirty || changePassword.get('reTypeNewPassword').touched)\\\">\\n                      {{ validation.message }}\\n                    </div>\\n                  </ng-container>\\n                </div>\\n\\n                <ion-button \\n                [disabled]=\\\"!passwordsMatch\\\" \\n                type=\\\"submit\\\" class=\\\"orange-button\\\" style=\\\"width: unset;\\\">CHANGE PASSWORD</ion-button>\\n\\n              </form>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-content>\\n\";"]}