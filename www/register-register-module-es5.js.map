{"version":3,"sources":["src/app/pages/fairs/fair-page/chaperones/register/register.page.html","src/app/pages/fairs/fair-page/partners/register/register.page.html","src/app/pages/fairs/fair-page/students/register/register.page.html","src/app/pages/fairs/fair-page/volunteers/register/register.page.html","src/app/pages/fairs/fair-page/chaperones/register/register-routing.module.ts","src/app/pages/fairs/fair-page/chaperones/register/register.module.ts","src/app/pages/fairs/fair-page/chaperones/register/register.page.scss","src/app/pages/fairs/fair-page/chaperones/register/register.page.ts","src/app/pages/fairs/fair-page/partners/register/register-routing.module.ts","src/app/pages/fairs/fair-page/partners/register/register.module.ts","src/app/pages/fairs/fair-page/partners/register/register.page.scss","src/app/pages/fairs/fair-page/partners/register/register.page.ts","src/app/pages/fairs/fair-page/students/register/register-routing.module.ts","src/app/pages/fairs/fair-page/students/register/register.module.ts","src/app/pages/fairs/fair-page/students/register/register.page.scss","src/app/pages/fairs/fair-page/students/register/register.page.ts","src/app/pages/fairs/fair-page/volunteers/register/register-routing.module.ts","src/app/pages/fairs/fair-page/volunteers/register/register.module.ts","src/app/pages/fairs/fair-page/volunteers/register/register.page.scss","src/app/pages/fairs/fair-page/volunteers/register/register.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar class=\\\"ion-hide-md-up\\\">\\n      <ion-title>Register as Chaperone</ion-title>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n\\n    <!-- Dekstop Toolbar -->\\n    <ion-toolbar class=\\\"ion-hide-sm-down fair-page-toolbar-lg\\\">\\n        <ion-title color=\\\"primary\\\">Register for {{title}} as Chaperone</ion-title>\\n        <ion-button (click)=\\\"goBack()\\\" class=\\\"orange-button\\\" style=\\\"width: 100px; --background: #005191; --color: white;\\\" slot=\\\"end\\\">Go Back\\n        </ion-button>\\n      </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-content>\\n\\n    <!-- Mobile & Tablet -->\\n    <ion-grid class=\\\"ion-text-center ion-hide-md-up\\\">\\n\\n     <ion-row class=\\\"ion-justify-content-center register-wrapper\\\">\\n        <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\n          <p class=\\\"text-header\\\">After you have successfully registered, you will be sent a confirmation email. You will need to go to that email and click     on the link to confirm your Registration.\\n          </p>\\n        </ion-col>\\n\\n        <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\n         <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\n           <ion-list class=\\\"line-input\\\">\\n              <ion-item>\\n                <ion-input\\n                 #autoFucousInput\\n                 required\\n                 inputmode=\\\"text\\\"\\n                 formControlName=\\\"name\\\"\\n                 type=\\\"text\\\"\\n                 placeholder=\\\"First & Last Name\\\"></ion-input>\\n              </ion-item>\\n             <ion-item>\\n               <ion-input\\n                #autoFucousInput\\n                required\\n                inputmode=\\\"email\\\"\\n                formControlName=\\\"email\\\"\\n                type=\\\"text\\\"\\n                placeholder=\\\"Email\\\"></ion-input>\\n             </ion-item>\\n\\n                  <!-- Email Validation-->\\n                  <div class=\\\"validation-errors\\\">\\n                      <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                        <div class=\\\"error-message\\\"\\n                        *ngIf=\\\"registerForm\\n                          .get('email')\\n                          .hasError(validation.type) && (registerForm.get('email')\\n                          .dirty || registerForm.get('email').touched)\\\">\\n                          {{ validation.message }}\\n                        </div>\\n                      </ng-container>\\n                    </div>\\n\\n             <ion-item>\\n                <ion-select\\n                  interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\n                  placeholder=\\\"School\\\"\\n                  formControlName=\\\"school\\\">\\n                  <ion-select-option\\n                    *ngFor=\\\"let school of schoolList\\\"\\n                    value=\\\"{{school}}\\\">{{school}}</ion-select-option>\\n                </ion-select>\\n             </ion-item>\\n             <ion-item>\\n               <ion-input\\n                required\\n                inputmode=\\\"phone\\\"\\n                formControlName=\\\"phone\\\"\\n                type=\\\"text\\\"\\n                maxlength='10'\\n                minlength='10'\\n                placeholder=\\\"Phone (xxx) xxx - xxxxx\\\"></ion-input>\\n             </ion-item>\\n             <ion-item>\\n                <ion-select\\n                  interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\n                  placeholder=\\\"Gender\\\"\\n                  formControlName=\\\"gender\\\">\\n                  <ion-select-option\\n                    value=\\\"Male\\\">Male</ion-select-option>\\n                    <ion-select-option\\n                    value=\\\"Female\\\">Female</ion-select-option>\\n                </ion-select>\\n             </ion-item>\\n             <ion-item>\\n                <ion-radio-group\\n                required\\n                formControlName=\\\"lunch\\\">\\n                    <ion-list-header>\\n                      <ion-label>Lunch</ion-label>\\n                    </ion-list-header>\\n                    <ion-item>\\n                      <ion-label>Apple</ion-label>\\n                      <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                      <ion-label>Grape</ion-label>\\n                      <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                      <ion-label>Cherry</ion-label>\\n                      <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-radio-group>\\n             </ion-item>\\n           </ion-list>\\n\\n           <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n            <ion-button [disabled]=\\\"disabled\\\" class=\\\"orange-button\\\" type=\\\"submit\\\">Register</ion-button>\\n           </ion-col>\\n\\n         </form>\\n        </ion-col>\\n        <ion-col size=\\\"11\\\" offset=\\\"0.5\\\">\\n          <!-- <ion-button (click)=\\\"register()\\\">\\n            Register\\n          </ion-button> -->\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <!-- Desktop -->\\n    <ion-grid class=\\\"ion-text-center ion-hide-sm-down\\\">\\n\\n      <ion-row style=\\\"margin-top: 100px\\\">\\n        <ion-col push=\\\"2\\\" size=\\\"5\\\">\\n          <p class=\\\"text-header\\\">After you have successfully registered, you will be sent a confirmation email.\\n          </p>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col push=\\\"2\\\" size=\\\"5\\\">\\n         <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\n           <ion-list class=\\\"line-input\\\">\\n              <ion-item>\\n                <ion-input\\n                 #autoFucousInput\\n                 required\\n                 inputmode=\\\"text\\\"\\n                 formControlName=\\\"name\\\"\\n                 type=\\\"text\\\"\\n                 placeholder=\\\"First & Last Name\\\"></ion-input>\\n              </ion-item>\\n             <ion-item>\\n               <ion-input\\n                #autoFucousInput\\n                required\\n                inputmode=\\\"email\\\"\\n                formControlName=\\\"email\\\"\\n                type=\\\"text\\\"\\n                placeholder=\\\"Email\\\"></ion-input>\\n             </ion-item>\\n\\n                  <!-- Email Validation-->\\n                  <div class=\\\"validation-errors\\\">\\n                      <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                        <div class=\\\"error-message\\\"\\n                        *ngIf=\\\"registerForm\\n                          .get('email')\\n                          .hasError(validation.type) && (registerForm.get('email')\\n                          .dirty || registerForm.get('email').touched)\\\">\\n                          {{ validation.message }}\\n                        </div>\\n                      </ng-container>\\n                    </div>\\n\\n             <ion-item>\\n                <ion-select\\n                  interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\n                  placeholder=\\\"School\\\"\\n                  formControlName=\\\"school\\\">\\n                  <ion-select-option\\n                    *ngFor=\\\"let school of schoolList\\\"\\n                    value=\\\"{{school}}\\\">{{school}}</ion-select-option>\\n                </ion-select>\\n             </ion-item>\\n             <ion-item>\\n               <ion-input\\n                required\\n                inputmode=\\\"phone\\\"\\n                formControlName=\\\"phone\\\"\\n                type=\\\"text\\\"\\n                maxlength='10'\\n                placeholder=\\\"Phone (xxx) xxx - xxxxx\\\"></ion-input>\\n             </ion-item>\\n             <ion-item>\\n                <ion-radio-group\\n                required\\n                formControlName=\\\"lunch\\\">\\n                    <ion-list-header>\\n                      <ion-label>Lunch</ion-label>\\n                    </ion-list-header>\\n                    <ion-item>\\n                      <ion-label>Turkey</ion-label>\\n                      <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"Turkey\\\"></ion-radio>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                      <ion-label>Ham</ion-label>\\n                      <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"Ham\\\" checked></ion-radio>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                      <ion-label>Veggie</ion-label>\\n                      <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"Veggie\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-radio-group>\\n             </ion-item>\\n           </ion-list>\\n\\n           <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n            <ion-button class=\\\"orange-button\\\" type=\\\"submit\\\">Register</ion-button>\\n           </ion-col>\\n\\n         </form>\\n        </ion-col>\\n        <ion-col size=\\\"11\\\" offset=\\\"0.5\\\">\\n          <!-- <ion-button (click)=\\\"register()\\\">\\n            Register\\n          </ion-button> -->\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-content>\"","export default \"<ion-header>\\n    <ion-toolbar class=\\\"ion-hide-md-up\\\">\\n      <ion-title>Register for {{title}} as Partner</ion-title>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n\\n\\n    <ion-toolbar class=\\\"ion-hide-sm-down fair-page-toolbar-lg\\\">\\n        <ion-title color=\\\"primary\\\">Register for {{title}} as Partner</ion-title>\\n        <ion-button (click)=\\\"goBack()\\\" class=\\\"orange-button\\\" style=\\\"width: 100px; --background: #005191; --color: white;\\\" slot=\\\"end\\\">Go Back\\n        </ion-button>\\n      </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-content>\\n\\n    <ion-grid  class=\\\"ion-text-center ion-hide-md-up\\\">\\n\\n      <!-- Mobile & Tablet -->\\n        <ion-row class=\\\"ion-justify-content-center register-wrapper\\\">\\n            <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\n\\n            <p class=\\\"text-header\\\">After you have successfully registered, you will be sent a confirmation email. If your school has more than 30 students r    registered, you will be notified and waitlisted.\\n            </p>\\n            </ion-col>\\n\\n            <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\n              <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\n                <ion-list class=\\\"line-input\\\">\\n                  <ion-item>\\n                     <ion-input\\n                     #autoFucousInput\\n                     required\\n                     inputmode=\\\"text\\\"\\n                     formControlName=\\\"name\\\"\\n                      type=\\\"text\\\"\\n                      placeholder=\\\"Contact First & Last Name\\\"></ion-input>\\n                  </ion-item>\\n                  <ion-item>\\n                     <ion-input\\n                      #autoFucousInput\\n                      required\\n                      inputmode=\\\"email\\\"\\n                      formControlName=\\\"email\\\"\\n                      type=\\\"text\\\"\\n                      placeholder=\\\"Contact Email\\\"></ion-input>\\n                  </ion-item>\\n\\n                    <!-- Email Validation-->\\n                    <div class=\\\"validation-errors\\\">\\n                        <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                          <div class=\\\"error-message\\\"\\n                          *ngIf=\\\"registerForm\\n                            .get('email')\\n                            .hasError(validation.type) && (registerForm.get('email')\\n                            .dirty || registerForm.get('email').touched)\\\">\\n                            {{ validation.message }}\\n                          </div>\\n                        </ng-container>\\n                      </div>\\n\\n               <ion-item>\\n                 <ion-input\\n                  required\\n                  inputmode=\\\"phone\\\"\\n                  formControlName=\\\"phone\\\"\\n                  type=\\\"text\\\"\\n                  maxlength='10'\\n                  placeholder=\\\"Phone (xxx) xxx - xxxxx\\\"></ion-input>\\n               </ion-item>\\n\\n                  <ion-item>\\n                    <ion-input\\n                     required\\n                     formControlName=\\\"logo\\\"\\n                     type=\\\"file\\\"\\n                     placeholder=\\\"Logo\\\"></ion-input>\\n                  </ion-item>\\n\\n                      <ion-item>\\n                        <ion-input\\n                         required\\n                         formControlName=\\\"company\\\"\\n                         type=\\\"text\\\"\\n                         placeholder=\\\"Company/Organization\\\"></ion-input>\\n                      </ion-item>\\n\\n               <ion-item>\\n                  <ion-radio-group\\n                  required\\n                  formControlName=\\\"lunch\\\">\\n                      <ion-list-header>\\n                        <ion-label>Lunch</ion-label>\\n                      </ion-list-header>\\n                      <ion-item>\\n                        <ion-label>Apple</ion-label>\\n                        <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\n                      </ion-item>\\n\\n                      <ion-item>\\n                        <ion-label>Grape</ion-label>\\n                        <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\n                      </ion-item>\\n\\n                      <ion-item>\\n                        <ion-label>Cherry</ion-label>\\n                        <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\n                      </ion-item>\\n                    </ion-radio-group>\\n               </ion-item>\\n\\n               <ion-item>\\n                  <ion-textarea\\n                  formControlName=\\\"colleagues\\\" rows=\\\"6\\\" cols=\\\"20\\\" placeholder=\\\"Enter any of your colleagues names here, each seperated by a comma ( , )\\\"></ion-textarea>\\n                </ion-item>\\n             </ion-list>\\n\\n             <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n              <ion-button class=\\\"orange-button\\\" type=\\\"submit\\\">Register</ion-button>\\n             </ion-col>\\n\\n           </form>\\n          </ion-col>\\n\\n        </ion-row>\\n\\n    </ion-grid>\\n\\n\\n\\n    <!-- Desktop -->\\n\\n    <ion-grid class=\\\"ion-text-center ion-hide-sm-down\\\">\\n\\n      <ion-row style=\\\"margin-top: 100px\\\">\\n          <ion-col push=\\\"2\\\" size=\\\"5\\\">\\n            <p class=\\\"text-header\\\">After you have successfully registered, you will be sent a confirmation email.\\n            </p>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row class=\\\"ion-justify-content-right register-wrapper\\\">\\n\\n          <ion-col size=\\\"5\\\" offset=\\\"2\\\">\\n           <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\n             <ion-list class=\\\"line-input\\\">\\n               <ion-item>\\n                 <ion-input\\n                  #autoFucousInput\\n                  required\\n                  inputmode=\\\"text\\\"\\n                  formControlName=\\\"name\\\"\\n                  type=\\\"text\\\"\\n                  placeholder=\\\"Contact First & Last Name\\\"></ion-input>\\n               </ion-item>\\n               <ion-item>\\n                 <ion-input\\n                  #autoFucousInput\\n                  required\\n                  inputmode=\\\"email\\\"\\n                  formControlName=\\\"email\\\"\\n                  type=\\\"text\\\"\\n                  placeholder=\\\"Contact Email\\\"></ion-input>\\n               </ion-item>\\n\\n                    <!-- Email Validation-->\\n                    <div class=\\\"validation-errors\\\">\\n                        <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                          <div class=\\\"error-message\\\"\\n                          *ngIf=\\\"registerForm\\n                            .get('email')\\n                            .hasError(validation.type) && (registerForm.get('email')\\n                            .dirty || registerForm.get('email').touched)\\\">\\n                            {{ validation.message }}\\n                          </div>\\n                        </ng-container>\\n                      </div>\\n\\n               <ion-item>\\n                 <ion-input\\n                  required\\n                  inputmode=\\\"phone\\\"\\n                  formControlName=\\\"phone\\\"\\n                  type=\\\"text\\\"\\n                  maxlength='10'\\n                  placeholder=\\\"Phone (xxx) xxx - xxxxx\\\"></ion-input>\\n               </ion-item>\\n\\n                  <ion-item>\\n                    <ion-input\\n                     required\\n                     formControlName=\\\"logo\\\"\\n                     type=\\\"file\\\"\\n                     placeholder=\\\"Logo\\\"></ion-input>\\n                  </ion-item>\\n\\n                      <ion-item>\\n                        <ion-input\\n                         required\\n                         formControlName=\\\"company\\\"\\n                         type=\\\"text\\\"\\n                         placeholder=\\\"Company/Organization\\\"></ion-input>\\n                      </ion-item>\\n\\n               <ion-item>\\n                  <ion-radio-group\\n                  required\\n                  formControlName=\\\"lunch\\\">\\n                      <ion-list-header>\\n                        <ion-label>Lunch</ion-label>\\n                      </ion-list-header>\\n                      <ion-item>\\n                        <ion-label>Turkey</ion-label>\\n                        <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"Turkey\\\"></ion-radio>\\n                      </ion-item>\\n\\n                      <ion-item>\\n                        <ion-label>Ham</ion-label>\\n                        <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"Ham\\\" checked></ion-radio>\\n                      </ion-item>\\n\\n                      <ion-item>\\n                        <ion-label>Veggie</ion-label>\\n                        <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"Veggie\\\"></ion-radio>\\n                      </ion-item>\\n                    </ion-radio-group>\\n               </ion-item>\\n\\n               <ion-item>\\n                  <ion-textarea\\n                  formControlName=\\\"colleagues\\\" rows=\\\"6\\\" cols=\\\"20\\\" placeholder=\\\"Enter any of your colleagues names here, each seperated by a comma ( , )\\\"></ion-textarea>\\n                </ion-item>\\n             </ion-list>\\n\\n             <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n              <ion-button class=\\\"orange-button\\\" type=\\\"submit\\\">Register</ion-button>\\n             </ion-col>\\n\\n           </form>\\n          </ion-col>\\n\\n        </ion-row>\\n\\n    </ion-grid>\\n  </ion-content>\"","export default \"<ion-header>\\n  <ion-toolbar class=\\\"ion-hide-md-up\\\">\\n    <ion-title>Register for {{title}} as Student</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n  <!-- Desktop Toolbar -->\\n  <ion-toolbar class=\\\"ion-hide-sm-down fair-page-toolbar-lg\\\">\\n      <ion-title color=\\\"primary\\\">Register for {{title}} as Student</ion-title>\\n      <ion-button (click)=\\\"goBack()\\\" class=\\\"orange-button\\\" style=\\\"width: 100px; --background: #005191; --color: white;\\\" slot=\\\"end\\\">Go Back\\n      </ion-button>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <!-- Mobile and Tablet -->\\n  <ion-grid class=\\\"ion-text-center ion-hide-md-up\\\">\\n\\n    <ion-row class=\\\"ion-justify-content-center register-wrapper ion-hide-md-up\\\">\\n\\n      <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\n\\n            <p class=\\\"text-header\\\">After you have successfully registered, you will be sent a confirmation email. If your school has more than 30 students registered, you will be notified and waitlisted.\\n            </p>\\n\\n      </ion-col>\\n      <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\n\\n       <form  [formGroup]=\\\"registerForm\\\"\\n       (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\n         <ion-list class=\\\"line-input\\\">\\n            <ion-item>\\n              <ion-input\\n               #autoFucousInput\\n               required\\n               inputmode=\\\"text\\\"\\n               formControlName=\\\"name\\\"\\n               type=\\\"text\\\"\\n               placeholder=\\\"First & Last Name\\\"></ion-input>\\n            </ion-item>\\n\\n           <ion-item>\\n             <ion-input\\n              required\\n              inputmode=\\\"email\\\"\\n              formControlName=\\\"email\\\"\\n              type=\\\"text\\\"\\n              placeholder=\\\"Email\\\"></ion-input>\\n           </ion-item>\\n\\n\\n                <!-- Email Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                    <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                      <div class=\\\"error-message\\\"\\n                      *ngIf=\\\"registerForm\\n                        .get('email')\\n                        .hasError(validation.type) && (registerForm.get('email')\\n                        .dirty || registerForm.get('email').touched)\\\">\\n                        {{ validation.message }}\\n                      </div>\\n                    </ng-container>\\n                  </div>\\n\\n\\n           <ion-item>\\n              <ion-select\\n                interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\n                placeholder=\\\"School\\\"\\n                formControlName=\\\"school\\\">\\n                <ion-select-option\\n                  *ngFor=\\\"let school of schoolList\\\"\\n                  value=\\\"{{school}}\\\">{{school}}</ion-select-option>\\n              </ion-select>\\n           </ion-item>\\n\\n           <ion-item>\\n              <ion-select\\n                interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\n                placeholder=\\\"Grade\\\"\\n                formControlName=\\\"grade\\\">\\n                <ion-select-option\\n                  *ngFor=\\\"let grade of gradeList\\\"\\n                  value=\\\"{{grade}}\\\">{{grade}}</ion-select-option>\\n              </ion-select>\\n           </ion-item>\\n\\n           <ion-item>\\n             <ion-input\\n              required\\n              inputmode=\\\"phone\\\"\\n              formControlName=\\\"phone\\\"\\n              type=\\\"text\\\"\\n              maxlength='10'\\n              placeholder=\\\"Phone (xxx) xxx - xxxxx\\\"></ion-input>\\n           </ion-item>\\n           <ion-item>\\n              <ion-select\\n                interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\n                placeholder=\\\"Gender\\\"\\n                formControlName=\\\"gender\\\">\\n                <ion-select-option\\n                  value=\\\"Male\\\">Male</ion-select-option>\\n                  <ion-select-option\\n                  value=\\\"Female\\\">Female</ion-select-option>\\n              </ion-select>\\n           </ion-item>\\n           <ion-item>\\n              <ion-radio-group\\n              required>\\n                  <ion-list-header>\\n                    <ion-label>Lunch</ion-label>\\n                  </ion-list-header>\\n                  <ion-item>\\n                    <ion-label>Turkey BLT & provolone (Turkey, Smokehouse Bacon, Lettuce, Tomato, Provolone, Pesto Mayo)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"Turkey\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Southwest Chicken Wrap (Crispy Chicken Tenders, Smoked Pepper Aioli, Roasted Corn & Peppers, Pico de Gallo)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"Chicken\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Grilled Vegetable & Goat Cheese (Seasonal Marinated Grilled Vegetables, Balsamic Syrup, Local Goat Cheese)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"Veggie\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n           </ion-item>\\n\\n\\n\\n\\n\\n           <ion-item>\\n              <ion-radio-group\\n              required\\n              formControlName=\\\"questionOne\\\">\\n                  <ion-list-header>\\n                    <ion-label>Pre Survey Question</ion-label>\\n                  </ion-list-header>\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n           </ion-item>\\n           <ion-item>\\n              <ion-radio-group\\n              required\\n              formControlName=\\\"questionTwo\\\">\\n                  <ion-list-header>\\n                    <ion-label>Pre Survey Question</ion-label>\\n                  </ion-list-header>\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n           </ion-item>\\n           <ion-item>\\n              <ion-radio-group\\n              required\\n              formControlName=\\\"questionThree\\\">\\n                  <ion-list-header>\\n                    <ion-label>Pre Survey Question</ion-label>\\n                  </ion-list-header>\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n           </ion-item>\\n           <ion-item>\\n              <ion-radio-group\\n              required\\n              formControlName=\\\"questionFour\\\">\\n                  <ion-list-header>\\n                    <ion-label>Pre Survey Question</ion-label>\\n                  </ion-list-header>\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n           </ion-item>\\n           <ion-item>\\n              <ion-radio-group\\n                required\\n                formControlName=\\\"questionFive\\\">\\n                  <ion-list-header>\\n                    <ion-label>Pre Survey Question </ion-label>\\n                  </ion-list-header>\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n           </ion-item>\\n         </ion-list>\\n\\n         <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n          <ion-button class=\\\"orange-button\\\" type=\\\"submit\\\">Register</ion-button>\\n         </ion-col>\\n\\n       </form>\\n      </ion-col>\\n    </ion-row>\\n\\n  </ion-grid>\\n\\n  <!-- Desktop -->\\n  <ion-grid class=\\\"ion-hide-sm-down\\\">\\n\\n      <ion-row class=\\\"ion-justify-content-center\\\" style=\\\"margin-top: 100px\\\">\\n        <ion-col size=\\\"4\\\">\\n          <p class=\\\"text-header\\\">After you have successfully registered, you will be sent a confirmation email. If your school has more than 30 students registered, you will be notified and waitlisted.\\n          </p>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col size=\\\"4\\\">\\n       <form  [formGroup]=\\\"registerForm\\\"\\n       (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\n         <ion-list class=\\\"line-input\\\">\\n\\n            <!-- Name -->\\n            <ion-item>\\n              <ion-input\\n               #autoFucousInput\\n               required\\n               inputmode=\\\"text\\\"\\n               formControlName=\\\"name\\\"\\n               type=\\\"text\\\"\\n               placeholder=\\\"First & Last Name\\\"></ion-input>\\n            </ion-item>\\n\\n            <!-- Email -->\\n           <ion-item>\\n             <ion-input\\n              required\\n              inputmode=\\\"email\\\"\\n              formControlName=\\\"email\\\"\\n              type=\\\"text\\\"\\n              placeholder=\\\"Email\\\"></ion-input>\\n           </ion-item>\\n\\n\\n                <!-- Email Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                    <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                      <div class=\\\"error-message\\\"\\n                      *ngIf=\\\"registerForm\\n                        .get('email')\\n                        .hasError(validation.type) && (registerForm.get('email')\\n                        .dirty || registerForm.get('email').touched)\\\">\\n                        {{ validation.message }}\\n                      </div>\\n                    </ng-container>\\n                  </div>\\n\\n            <!-- School -->\\n           <ion-item>\\n              <ion-select\\n                placeholder=\\\"School\\\"\\n                formControlName=\\\"school\\\">\\n                <ion-select-option\\n                  *ngFor=\\\"let school of schoolList\\\"\\n                  value=\\\"school\\\">{{school}}</ion-select-option>\\n              </ion-select>\\n           </ion-item>\\n\\n           <!-- Grade -->\\n           <ion-item>\\n              <ion-select\\n                interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\n                placeholder=\\\"Grade\\\"\\n                formControlName=\\\"grade\\\">\\n                <ion-select-option\\n                  *ngFor=\\\"let grade of gradeList\\\"\\n                  value=\\\"grade\\\">{{grade}}</ion-select-option>\\n              </ion-select>\\n           </ion-item>\\n\\n           <!-- Phone -->\\n           <ion-item>\\n             <ion-input\\n              required\\n              inputmode=\\\"phone\\\"\\n              formControlName=\\\"phone\\\"\\n              type=\\\"text\\\"\\n              maxlength='10'\\n              placeholder=\\\"Phone (xxx) xxx - xxxxx\\\"></ion-input>\\n           </ion-item>\\n\\n           <!-- Gender -->\\n           <ion-item>\\n              <ion-select\\n                interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\n                placeholder=\\\"Gender\\\"\\n                formControlName=\\\"gender\\\">\\n                <ion-select-option\\n                  value=\\\"Male\\\">Male</ion-select-option>\\n                  <ion-select-option\\n                  value=\\\"Female\\\">Female</ion-select-option>\\n              </ion-select>\\n           </ion-item>\\n\\n           <!-- Lunch -->\\n           <ion-item>\\n              <ion-radio-group\\n              required\\n              formControlName=\\\"lunch\\\">\\n                  <ion-list-header>\\n                    <ion-label>Lunch</ion-label>\\n                  </ion-list-header>\\n                  <ion-item class=\\\"ion-text-wrap\\\">\\n                    <ion-label>Turkey BLT & provolone (Turkey, Smokehouse Bacon, Lettuce, Tomato, Provolone, Pesto Mayo)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"Turkey\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Southwest Chicken Wrap (Crispy Chicken Tenders, Smoked Pepper Aioli, Roasted Corn & Peppers, Pico de Gallo)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"Chicken\\\" ></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Grilled Vegetable & Goat Cheese (Seasonal Marinated Grilled Vegetables, Balsamic Syrup, Local Goat Cheese)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"Veggie\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n           </ion-item>\\n\\n\\n          <!-- Interests -->\\n          <ion-item *ngFor=\\\"let interest of studentInterests\\\">\\n              <ion-label>{{interest.name}}</ion-label>\\n              <ion-checkbox\\n              formControlName=\\\"interests\\\" slot=\\\"end\\\" [(ngModel)]=\\\"interest.isChecked\\\"\\n              ></ion-checkbox>\\n            </ion-item>\\n\\n          <!-- Survey Questions -->\\n           <ion-item>\\n              <ion-radio-group\\n              required\\n              formControlName=\\\"questionOne\\\">\\n                  <ion-list-header>\\n                    <ion-label>Pre Survey Question</ion-label>\\n                  </ion-list-header>\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n           </ion-item>\\n\\n           <ion-item>\\n              <ion-radio-group\\n              required\\n              formControlName=\\\"questionTwo\\\">\\n                  <ion-list-header>\\n                    <ion-label>Pre Survey Question</ion-label>\\n                  </ion-list-header>\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n           </ion-item>\\n\\n           <ion-item>\\n              <ion-radio-group\\n              required\\n              formControlName=\\\"questionThree\\\">\\n                  <ion-list-header>\\n                    <ion-label>Pre Survey Question</ion-label>\\n                  </ion-list-header>\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n           </ion-item>\\n\\n           <ion-item>\\n              <ion-radio-group\\n              required\\n              formControlName=\\\"questionFour\\\">\\n                  <ion-list-header>\\n                    <ion-label>Pre Survey Question</ion-label>\\n                  </ion-list-header>\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n           </ion-item>\\n\\n           <ion-item>\\n              <ion-radio-group\\n                required\\n                formControlName=\\\"questionFive\\\">\\n                  <ion-list-header>\\n                    <ion-label>Pre Survey Question </ion-label>\\n                  </ion-list-header>\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\n                  </ion-item>\\n\\n                  <ion-item>\\n                    <ion-label>Answer</ion-label>\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n           </ion-item>\\n         </ion-list>\\n\\n         <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n          <ion-button class=\\\"orange-button\\\" type=\\\"submit\\\">Register</ion-button>\\n         </ion-col>\\n\\n       </form>\\n      </ion-col>\\n\\n    </ion-row>\\n\\n  </ion-grid>\\n</ion-content>\\n\"","export default \"<ion-header>\\n  <ion-toolbar class=\\\"ion-hide-md-up\\\">\\n    <ion-title>Register for {{title}} as Volunteer</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n\\n  <ion-toolbar class=\\\"ion-hide-sm-down fair-page-toolbar-lg\\\">\\n      <ion-title color=\\\"primary\\\">Register for {{title}} as Volunteer</ion-title>\\n      <ion-button (click)=\\\"goBack()\\\" class=\\\"orange-button\\\" style=\\\"width: 100px; --background: #005191; --color: white;\\\" slot=\\\"end\\\">Go Back\\n      </ion-button>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-grid class=\\\"ion-text-center ion-hide-md-up\\\">\\n      <ion-row class=\\\"ion-justify-content-center\\\" style=\\\"margin-top: 75px\\\">\\n          <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\n            <p class=\\\"text-header\\\">\\n              Information goes here about letting the user know they are being redirected to another page to sign up as a volunteer.\\n            </p>\\n          </ion-col>\\n          <form  [formGroup]=\\\"registerForm\\\"\\n          (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\n            <ion-list class=\\\"line-input\\\">\\n                <ion-item>\\n                  <ion-input\\n                   #autoFucousInput\\n                   required\\n                   inputmode=\\\"text\\\"\\n                   formControlName=\\\"name\\\"\\n                   type=\\\"text\\\"\\n                   placeholder=\\\"First & Last Name\\\"></ion-input>\\n                </ion-item>\\n    \\n               <ion-item>\\n                 <ion-input\\n                  required\\n                  inputmode=\\\"email\\\"\\n                  formControlName=\\\"email\\\"\\n                  type=\\\"text\\\"\\n                  placeholder=\\\"Email\\\"></ion-input>\\n               </ion-item>\\n            </ion-list>\\n          </form>\\n      </ion-row>\\n    </ion-grid>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    <!-- Desktop -->\\n\\n    <ion-grid class=\\\"ion-text-center ion-hide-sm-down\\\">\\n\\n        <ion-row class=\\\"ion-justify-content-center\\\" style=\\\"margin-top: 100px;\\\">\\n            <ion-col size=\\\"4\\\">\\n              <p class=\\\"text-header\\\">\\n                Please enter your name and email address. You will be sent an email with further registration instructions.\\n              </p>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\n          <ion-col size=\\\"4\\\">\\n              <form  [formGroup]=\\\"registerForm\\\"\\n              (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\n                <ion-list class=\\\"line-input\\\">\\n                    <ion-item>\\n                      <ion-input\\n                       #autoFucousInput\\n                       required\\n                       inputmode=\\\"text\\\"\\n                       formControlName=\\\"name\\\"\\n                       type=\\\"text\\\"\\n                       placeholder=\\\"First & Last Name\\\"></ion-input>\\n                    </ion-item>\\n\\n                   <ion-item>\\n                     <ion-input\\n                      required\\n                      inputmode=\\\"email\\\"\\n                      formControlName=\\\"email\\\"\\n                      type=\\\"text\\\"\\n                      placeholder=\\\"Email\\\"></ion-input>\\n                   </ion-item>\\n\\n\\n                   <!-- Email Validation-->\\n                   <div class=\\\"validation-errors\\\">\\n                       <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                         <div class=\\\"error-message\\\"\\n                         *ngIf=\\\"registerForm\\n                           .get('email')\\n                           .hasError(validation.type) && (registerForm.get('email')\\n                           .dirty || registerForm.get('email').touched)\\\">\\n                           {{ validation.message }}\\n                         </div>\\n                       </ng-container>\\n                     </div>\\n                </ion-list>\\n\\n                <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n                 <ion-button class=\\\"orange-button\\\" type=\\\"submit\\\">Continue</ion-button>\\n                </ion-col>\\n\\n              </form>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \".fair-page-toolbar-lg {\\n  --background: #f9fafc;\\n  --padding-end: 25%;\\n}\\n.fair-page-toolbar-lg ion-title {\\n  padding-left: 100px;\\n  font-size: 1.4em;\\n  font-weight: 900;\\n}\\nion-item {\\n  margin: 30px 0 30px 0;\\n}\\n.register-wrapper {\\n  margin-top: 75px;\\n}\\n.register-info {\\n  position: fixed;\\n}\\nion-radio-group {\\n  padding: 10px;\\n}\\nion-radio-group ion-item {\\n  border: none;\\n}\\nion-list-header ion-label {\\n  font-size: 1.4em;\\n  font-weight: 800;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mZXJyby9EZXNrdG9wL1VuaXRlZC1XYXkvTW9iaWxlL3NyYy9hcHAvcGFnZXMvZmFpcnMvZmFpci1wYWdlL2NoYXBlcm9uZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9mYWlycy9mYWlyLXBhZ2UvY2hhcGVyb25lcy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtFQUNBLGtCQUFBO0FDQ0Y7QURFRTtFQUNFLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQ0FKO0FESUE7RUFDRSxxQkFBQTtBQ0RGO0FESUE7RUFDRSxnQkFBQTtBQ0RGO0FESUE7RUFDRSxlQUFBO0FDREY7QURJQTtFQUNFLGFBQUE7QUNERjtBREVFO0VBQ0UsWUFBQTtBQ0FKO0FES0U7RUFDRSxnQkFBQTtFQUNBLGdCQUFBO0FDRkoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9mYWlycy9mYWlyLXBhZ2UvY2hhcGVyb25lcy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmFpci1wYWdlLXRvb2xiYXItbGcge1xuICAtLWJhY2tncm91bmQ6ICNmOWZhZmM7XG4gIC0tcGFkZGluZy1lbmQ6IDI1JTtcblxuXG4gIGlvbi10aXRsZSB7XG4gICAgcGFkZGluZy1sZWZ0OiAxMDBweDtcbiAgICBmb250LXNpemU6IDEuNGVtO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIH1cbn1cblxuaW9uLWl0ZW0ge1xuICBtYXJnaW46IDMwcHggMCAzMHB4IDA7XG59XG5cbi5yZWdpc3Rlci13cmFwcGVye1xuICBtYXJnaW4tdG9wOiA3NXB4O1xufVxuXG4ucmVnaXN0ZXItaW5mbyB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuaW9uLXJhZGlvLWdyb3VwIHtcbiAgcGFkZGluZzogMTBweDtcbiAgaW9uLWl0ZW0ge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgfVxufVxuXG5pb24tbGlzdC1oZWFkZXIge1xuICBpb24tbGFiZWwge1xuICAgIGZvbnQtc2l6ZTogMS40ZW07XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgfVxufVxuIiwiLmZhaXItcGFnZS10b29sYmFyLWxnIHtcbiAgLS1iYWNrZ3JvdW5kOiAjZjlmYWZjO1xuICAtLXBhZGRpbmctZW5kOiAyNSU7XG59XG4uZmFpci1wYWdlLXRvb2xiYXItbGcgaW9uLXRpdGxlIHtcbiAgcGFkZGluZy1sZWZ0OiAxMDBweDtcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cblxuaW9uLWl0ZW0ge1xuICBtYXJnaW46IDMwcHggMCAzMHB4IDA7XG59XG5cbi5yZWdpc3Rlci13cmFwcGVyIHtcbiAgbWFyZ2luLXRvcDogNzVweDtcbn1cblxuLnJlZ2lzdGVyLWluZm8ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG59XG5cbmlvbi1yYWRpby1ncm91cCB7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG5pb24tcmFkaW8tZ3JvdXAgaW9uLWl0ZW0ge1xuICBib3JkZXI6IG5vbmU7XG59XG5cbmlvbi1saXN0LWhlYWRlciBpb24tbGFiZWwge1xuICBmb250LXNpemU6IDEuNGVtO1xuICBmb250LXdlaWdodDogODAwO1xufSJdfQ== */\"","// Chaperones\n\nimport { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastController, LoadingController, IonInput, NavController, AlertController } from '@ionic/angular';\nimport { FairsService } from '../../../../../services/fairs.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit, AfterViewInit {\n\n  registerForm: FormGroup;\n  @ViewChild('autoFucousInput', {static: false})  inputElement: IonInput;\n  id;\n  title;\n  disabled = true;\n\n  schoolList =  ['School 1', 'School 2', 'School 3'];\n  gradeList =  ['7th Grade', '8th Grade', '9th Grade', '10th Grade', '11th Grade', '12th Grade'];\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Must be a valid email address'}\n    ],\n    password: [\n      // tslint:disable-next-line: max-line-length\n      { type: 'pattern', message: 'Password must be at least 6 characters with at least one lowercase character, one uppcase character, and one number.'}\n    ]\n  };\n\n  customAlertOptions: any = {\n    header: 'Pizza Toppings',\n    subHeader: 'Select your toppings',\n    message: '$1.00 per topping',\n    translucent: true\n  };\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private fairs: FairsService,\n    private navCtrl: NavController,\n    private loading: LoadingController,\n    private toast: ToastController,\n    private alert: AlertController) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      school: ['', [Validators.required, Validators.required]],\n      phone: ['', [Validators.required, Validators.required]],\n      gender: ['', [Validators.required, Validators.required]],\n      lunch: ['', [Validators.required, Validators.required]]\n    });\n\n    this.formOnChanges();\n\n\n    // tslint:disable-next-line: radix\n    const id  = this.activatedRoute.snapshot.paramMap.get('id');\n\n    this.id = id;\n\n    this.fairs.getFair(this.id).subscribe(\n      fair => {\n        console.log('Fair ID: ' + this.id);\n        console.log(fair);\n        this.title = fair['title'];\n      }\n    );\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n       this.inputElement.setFocus();\n    }, 1000);\n  }\n\n  register(chaperone) {\n    chaperone.id = this.id;\n    console.log('Registering');\n    this.fairs.registerChaperone(chaperone);\n  }\n\n  goBack() {\n    console.log('going back');\n    this.navCtrl.back();\n  }\n\n  formOnChanges(): void {\n    this.registerForm.statusChanges.subscribe(\n      status => {\n        console.log(status);\n\n        if (status === 'VALID') {\n          this.disabled = false;\n        }\n      }\n    );\n  }\n\n  // Alerts\n  async presentAlert() {\n    const alert = await this.alert.create({\n      header: 'Registered!',\n      cssClass: 'registered',\n      message: `You have been Registered. Please check your email (email) for details. `,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n\n  // Send Email to Student\n  // SMS to phones\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \".fair-page-toolbar-lg {\\n  --background: #f9fafc;\\n  --padding-end: 25%;\\n}\\n.fair-page-toolbar-lg ion-title {\\n  padding-left: 100px;\\n  font-size: 1.4em;\\n  font-weight: 900;\\n}\\nion-item {\\n  margin: 30px 0 30px 0;\\n}\\n.register-wrapper {\\n  margin-top: 75px;\\n}\\n.register-info {\\n  position: fixed;\\n}\\nion-radio-group {\\n  padding: 10px;\\n}\\nion-radio-group ion-item {\\n  border: none;\\n}\\nion-list-header ion-label {\\n  font-size: 1.4em;\\n  font-weight: 800;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mZXJyby9EZXNrdG9wL1VuaXRlZC1XYXkvTW9iaWxlL3NyYy9hcHAvcGFnZXMvZmFpcnMvZmFpci1wYWdlL3BhcnRuZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvZmFpcnMvZmFpci1wYWdlL3BhcnRuZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFBO0VBQ0Esa0JBQUE7QUNDRjtBREVFO0VBQ0UsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDQUo7QURJQTtFQUNFLHFCQUFBO0FDREY7QURJQTtFQUNFLGdCQUFBO0FDREY7QURJQTtFQUNFLGVBQUE7QUNERjtBRElBO0VBQ0UsYUFBQTtBQ0RGO0FERUU7RUFDRSxZQUFBO0FDQUo7QURLRTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7QUNGSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ZhaXJzL2ZhaXItcGFnZS9wYXJ0bmVycy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmFpci1wYWdlLXRvb2xiYXItbGcge1xuICAtLWJhY2tncm91bmQ6ICNmOWZhZmM7XG4gIC0tcGFkZGluZy1lbmQ6IDI1JTtcblxuXG4gIGlvbi10aXRsZSB7XG4gICAgcGFkZGluZy1sZWZ0OiAxMDBweDtcbiAgICBmb250LXNpemU6IDEuNGVtO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIH1cbn1cblxuaW9uLWl0ZW0ge1xuICBtYXJnaW46IDMwcHggMCAzMHB4IDA7XG59XG5cbi5yZWdpc3Rlci13cmFwcGVye1xuICBtYXJnaW4tdG9wOiA3NXB4O1xufVxuXG4ucmVnaXN0ZXItaW5mbyB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuaW9uLXJhZGlvLWdyb3VwIHtcbiAgcGFkZGluZzogMTBweDtcbiAgaW9uLWl0ZW0ge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgfVxufVxuXG5pb24tbGlzdC1oZWFkZXIge1xuICBpb24tbGFiZWwge1xuICAgIGZvbnQtc2l6ZTogMS40ZW07XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgfVxufVxuIiwiLmZhaXItcGFnZS10b29sYmFyLWxnIHtcbiAgLS1iYWNrZ3JvdW5kOiAjZjlmYWZjO1xuICAtLXBhZGRpbmctZW5kOiAyNSU7XG59XG4uZmFpci1wYWdlLXRvb2xiYXItbGcgaW9uLXRpdGxlIHtcbiAgcGFkZGluZy1sZWZ0OiAxMDBweDtcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cblxuaW9uLWl0ZW0ge1xuICBtYXJnaW46IDMwcHggMCAzMHB4IDA7XG59XG5cbi5yZWdpc3Rlci13cmFwcGVyIHtcbiAgbWFyZ2luLXRvcDogNzVweDtcbn1cblxuLnJlZ2lzdGVyLWluZm8ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG59XG5cbmlvbi1yYWRpby1ncm91cCB7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG5pb24tcmFkaW8tZ3JvdXAgaW9uLWl0ZW0ge1xuICBib3JkZXI6IG5vbmU7XG59XG5cbmlvbi1saXN0LWhlYWRlciBpb24tbGFiZWwge1xuICBmb250LXNpemU6IDEuNGVtO1xuICBmb250LXdlaWdodDogODAwO1xufSJdfQ== */\"","// Partners\n\nimport { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastController, LoadingController, IonInput, NavController } from '@ionic/angular';\nimport { FairsService } from '../../../../../services/fairs.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit, AfterViewInit {\n\n  // Partner Register Class\n\n  registerForm: FormGroup;\n  @ViewChild('autoFucousInput', {static: false})  inputElement: IonInput;\n  id;\n  title;\n\n  schoolList =  ['School 1', 'School 2', 'School 3'];\n  gradeList =  ['7th Grade', '8th Grade', '9th Grade', '10th Grade', '11th Grade', '12th Grade'];\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Must be a valid email address'}\n    ],\n    password: [\n      // tslint:disable-next-line: max-line-length\n      { type: 'pattern', message: 'Password must be at least 6 characters with at least one lowercase character, one uppcase character, and one number.'}\n    ]\n  };\n\n  customAlertOptions: any = {\n    header: 'Pizza Toppings',\n    subHeader: 'Select your toppings',\n    message: '$1.00 per topping',\n    translucent: true\n  };\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private fairs: FairsService,\n    private navCtrl: NavController,\n    private loading: LoadingController,\n    private toast: ToastController) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.email]],\n      email: ['', [Validators.required, Validators.email]],\n      company: ['', [Validators.required, Validators.required]],\n      logo: ['', [Validators.required, Validators.required]],\n      phone: ['', [Validators.required, Validators.required]],\n      lunch: ['', [Validators.required, Validators.required]],\n      colleagues: ['', [Validators.required, Validators.required]],\n    });\n\n\n    // tslint:disable-next-line: radix\n    const id  = this.activatedRoute.snapshot.paramMap.get('id');\n\n    this.id = id;\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n       this.inputElement.setFocus();\n    }, 1000);\n  }\n\n  goBack() {\n    console.log('going back');\n    this.navCtrl.back();\n  }\n\n  register(partner) {\n    partner.id = this.id;\n    console.log('Registering');\n    this.fairs.registerPartner(partner);\n  }\n\n  // Send Email to Student\n  // SMS to phones\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \".fair-page-toolbar-lg {\\n  --background: #f9fafc;\\n  --padding-end: 25%;\\n}\\n.fair-page-toolbar-lg ion-title {\\n  padding-left: 100px;\\n  font-size: 1.4em;\\n  font-weight: 900;\\n}\\nion-item {\\n  margin: 30px 0 30px 0;\\n}\\n.register-wrapper {\\n  margin-top: 75px;\\n}\\n.register-info {\\n  position: fixed;\\n}\\nion-radio-group {\\n  padding: 10px;\\n}\\nion-radio-group ion-item {\\n  border: none;\\n}\\nion-list-header ion-label {\\n  font-size: 1.4em;\\n  font-weight: 800;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mZXJyby9EZXNrdG9wL1VuaXRlZC1XYXkvTW9iaWxlL3NyYy9hcHAvcGFnZXMvZmFpcnMvZmFpci1wYWdlL3N0dWRlbnRzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvZmFpcnMvZmFpci1wYWdlL3N0dWRlbnRzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFBO0VBQ0Esa0JBQUE7QUNDRjtBREVFO0VBQ0UsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDQUo7QURJQTtFQUNFLHFCQUFBO0FDREY7QURJQTtFQUNFLGdCQUFBO0FDREY7QURJQTtFQUNFLGVBQUE7QUNERjtBRElBO0VBQ0UsYUFBQTtBQ0RGO0FERUU7RUFDRSxZQUFBO0FDQUo7QURLRTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7QUNGSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ZhaXJzL2ZhaXItcGFnZS9zdHVkZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmFpci1wYWdlLXRvb2xiYXItbGcge1xuICAtLWJhY2tncm91bmQ6ICNmOWZhZmM7XG4gIC0tcGFkZGluZy1lbmQ6IDI1JTtcblxuXG4gIGlvbi10aXRsZSB7XG4gICAgcGFkZGluZy1sZWZ0OiAxMDBweDtcbiAgICBmb250LXNpemU6IDEuNGVtO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIH1cbn1cblxuaW9uLWl0ZW0ge1xuICBtYXJnaW46IDMwcHggMCAzMHB4IDA7XG59XG5cbi5yZWdpc3Rlci13cmFwcGVye1xuICBtYXJnaW4tdG9wOiA3NXB4O1xufVxuXG4ucmVnaXN0ZXItaW5mbyB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuaW9uLXJhZGlvLWdyb3VwIHtcbiAgcGFkZGluZzogMTBweDtcbiAgaW9uLWl0ZW0ge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgfVxufVxuXG5pb24tbGlzdC1oZWFkZXIge1xuICBpb24tbGFiZWwge1xuICAgIGZvbnQtc2l6ZTogMS40ZW07XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgfVxufVxuIiwiLmZhaXItcGFnZS10b29sYmFyLWxnIHtcbiAgLS1iYWNrZ3JvdW5kOiAjZjlmYWZjO1xuICAtLXBhZGRpbmctZW5kOiAyNSU7XG59XG4uZmFpci1wYWdlLXRvb2xiYXItbGcgaW9uLXRpdGxlIHtcbiAgcGFkZGluZy1sZWZ0OiAxMDBweDtcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cblxuaW9uLWl0ZW0ge1xuICBtYXJnaW46IDMwcHggMCAzMHB4IDA7XG59XG5cbi5yZWdpc3Rlci13cmFwcGVyIHtcbiAgbWFyZ2luLXRvcDogNzVweDtcbn1cblxuLnJlZ2lzdGVyLWluZm8ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG59XG5cbmlvbi1yYWRpby1ncm91cCB7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG5pb24tcmFkaW8tZ3JvdXAgaW9uLWl0ZW0ge1xuICBib3JkZXI6IG5vbmU7XG59XG5cbmlvbi1saXN0LWhlYWRlciBpb24tbGFiZWwge1xuICBmb250LXNpemU6IDEuNGVtO1xuICBmb250LXdlaWdodDogODAwO1xufSJdfQ== */\"","// Students\n\nimport { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastController, LoadingController, IonInput, NavController } from '@ionic/angular';\nimport { FairsService } from '../../../../../services/fairs.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit, AfterViewInit {\n\n  @ViewChild('autoFucousInput', {static: false})  inputElement: IonInput;\n\n  registerForm: FormGroup;\n  id: string;\n  title: string;\n  time: string;\n  date: string;\n\n  // For Checkbox\n  interests = [];\n\n  // tslint:disable-next-line: max-line-length\n  schoolList =  ['Central High School', 'Communications Media Arts High School', 'Davis Aerospace Technical High School', 'Henry Ford High School', 'Martin Luther King Jr. Senior High School', 'Mumford High School', 'Pershing High School', 'Western International High School', 'West Side Academy of Technology and Cyber Security', 'University High School Academy', 'Southfield Regional Academic Campus', 'Southfield High School For The Arts And Technology', 'Hazel Park High School', 'Pontiac High', 'Pontiac International Technology Academy' ];\n\n  gradeList =  ['10th Grade', '11th Grade', '12th Grade'];\n\n  studentInterests = [\n    { name: 'Automotive Mobility', isChecked: false },\n    { name: 'Artificial Intelligence', isChecked: false },\n    { name: 'Coding', isChecked: false },\n    { name: 'Computer Science', isChecked: false },\n    { name: 'Cyber Security', isChecked: false },\n    { name: 'Digital Media', isChecked: false },\n    { name: 'Engineering', isChecked: false },\n    { name: 'Graphic Design', isChecked: false },\n    { name: 'Robotics', isChecked: false },\n    { name: 'Software Development', isChecked: false },\n    { name: 'Video Game Design', isChecked: false },\n  ]\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Must be a valid email address'}\n    ],\n    password: [\n      // tslint:disable-next-line: max-line-length\n      { type: 'pattern', message: 'Password must be at least 6 characters with at least one lowercase character, one uppcase character, and one number.'}\n    ]\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private fairs: FairsService,\n    private navCtrl: NavController,\n    private loading: LoadingController,\n    private toast: ToastController,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.schoolList.sort();\n\n    this.registerForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      email: ['eddielacrosse2@gmail.com', [Validators.required, Validators.email]],\n      school: ['', [Validators.required]],\n      grade: ['', [Validators.required]],\n      phone: ['', [Validators.required, Validators.required]],\n      gender: ['', [Validators.required, Validators.required]],\n      lunch: ['', [Validators.required, Validators.required]],\n      interests: ['', [Validators.required, Validators.required]],\n      questionOne: ['', [Validators.required, Validators.required]],\n      questionTwo: ['', [Validators.required, Validators.required]],\n      questionThree: ['', [Validators.required, Validators.required]],\n      questionFour: ['', [Validators.required, Validators.required]],\n      questionFive: ['', [Validators.required, Validators.required]],\n    });\n\n    // tslint:disable-next-line: radix\n    const id  = this.activatedRoute.snapshot.paramMap.get('id');\n\n    this.id = id;\n\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n       this.inputElement.setFocus();\n    }, 1000);\n  }\n\n  goBack() {\n    console.log('going back');\n    this.navCtrl.back();\n  }\n\n  register(student) {\n    student.id = this.id;\n    console.log('Registering');\n    this.fairs.registerStudent(student);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \".fair-page-toolbar-lg {\\n  --background: #f9fafc;\\n  --padding-end: 25%;\\n}\\n.fair-page-toolbar-lg ion-title {\\n  padding-left: 100px;\\n  font-size: 1.4em;\\n  font-weight: 900;\\n}\\nion-item {\\n  margin: 30px 0 30px 0;\\n}\\n.register-wrapper {\\n  margin-top: 75px;\\n}\\n.register-info {\\n  position: fixed;\\n}\\nion-radio-group {\\n  padding: 10px;\\n}\\nion-radio-group ion-item {\\n  border: none;\\n}\\nion-list-header ion-label {\\n  font-size: 1.4em;\\n  font-weight: 800;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mZXJyby9EZXNrdG9wL1VuaXRlZC1XYXkvTW9iaWxlL3NyYy9hcHAvcGFnZXMvZmFpcnMvZmFpci1wYWdlL3ZvbHVudGVlcnMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9mYWlycy9mYWlyLXBhZ2Uvdm9sdW50ZWVycy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtFQUNBLGtCQUFBO0FDQ0Y7QURFRTtFQUNFLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQ0FKO0FESUE7RUFDRSxxQkFBQTtBQ0RGO0FESUE7RUFDRSxnQkFBQTtBQ0RGO0FESUE7RUFDRSxlQUFBO0FDREY7QURJQTtFQUNFLGFBQUE7QUNERjtBREVFO0VBQ0UsWUFBQTtBQ0FKO0FES0U7RUFDRSxnQkFBQTtFQUNBLGdCQUFBO0FDRkoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9mYWlycy9mYWlyLXBhZ2Uvdm9sdW50ZWVycy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmFpci1wYWdlLXRvb2xiYXItbGcge1xuICAtLWJhY2tncm91bmQ6ICNmOWZhZmM7XG4gIC0tcGFkZGluZy1lbmQ6IDI1JTtcblxuXG4gIGlvbi10aXRsZSB7XG4gICAgcGFkZGluZy1sZWZ0OiAxMDBweDtcbiAgICBmb250LXNpemU6IDEuNGVtO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIH1cbn1cblxuaW9uLWl0ZW0ge1xuICBtYXJnaW46IDMwcHggMCAzMHB4IDA7XG59XG5cbi5yZWdpc3Rlci13cmFwcGVye1xuICBtYXJnaW4tdG9wOiA3NXB4O1xufVxuXG4ucmVnaXN0ZXItaW5mbyB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuaW9uLXJhZGlvLWdyb3VwIHtcbiAgcGFkZGluZzogMTBweDtcbiAgaW9uLWl0ZW0ge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgfVxufVxuXG5pb24tbGlzdC1oZWFkZXIge1xuICBpb24tbGFiZWwge1xuICAgIGZvbnQtc2l6ZTogMS40ZW07XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgfVxufVxuIiwiLmZhaXItcGFnZS10b29sYmFyLWxnIHtcbiAgLS1iYWNrZ3JvdW5kOiAjZjlmYWZjO1xuICAtLXBhZGRpbmctZW5kOiAyNSU7XG59XG4uZmFpci1wYWdlLXRvb2xiYXItbGcgaW9uLXRpdGxlIHtcbiAgcGFkZGluZy1sZWZ0OiAxMDBweDtcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cblxuaW9uLWl0ZW0ge1xuICBtYXJnaW46IDMwcHggMCAzMHB4IDA7XG59XG5cbi5yZWdpc3Rlci13cmFwcGVyIHtcbiAgbWFyZ2luLXRvcDogNzVweDtcbn1cblxuLnJlZ2lzdGVyLWluZm8ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG59XG5cbmlvbi1yYWRpby1ncm91cCB7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG5pb24tcmFkaW8tZ3JvdXAgaW9uLWl0ZW0ge1xuICBib3JkZXI6IG5vbmU7XG59XG5cbmlvbi1saXN0LWhlYWRlciBpb24tbGFiZWwge1xuICBmb250LXNpemU6IDEuNGVtO1xuICBmb250LXdlaWdodDogODAwO1xufSJdfQ== */\"","// Volunteers\n\nimport { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastController, LoadingController, IonInput, NavController } from '@ionic/angular';\nimport { FairsService } from '../../../../../services/fairs.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  @ViewChild('autoFucousInput', {static: false})  inputElement: IonInput;\n\n  registerForm: FormGroup;\n\n  id;\n  title;\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Must be a valid email address'}\n    ],\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private fairs: FairsService,\n    private navCtrl: NavController,\n    private loading: LoadingController,\n    private toast: ToastController) { }\n\n  ngOnInit() {\n    // tslint:disable-next-line: radix\n    const id  = this.activatedRoute.snapshot.paramMap.get('id');\n\n    this.id = id;\n\n    this.registerForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required]]\n    });\n\n    this.fairs.getFair(this.id).subscribe(\n      fair => {\n        console.log('Fair ID: ' + this.id);\n        console.log(fair);\n        this.title = fair['title'];\n      }\n    );\n  }\n\n  goBack() {\n    console.log('going back');\n    this.navCtrl.back();\n  }\n\n  register(volunteer) {\n    volunteer.id = this.id;\n    console.log('Registering Volunteer');\n    this.fairs.registerVolunteer(volunteer);\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"register-register-module-es5.js"}