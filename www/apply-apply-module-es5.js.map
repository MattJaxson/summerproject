{"version":3,"sources":["src/app/pages/jobs/apply/apply.page.html","src/app/pages/jobs/apply/apply-routing.module.ts","src/app/pages/jobs/apply/apply.module.ts","src/app/pages/jobs/apply/apply.page.scss","src/app/pages/jobs/apply/apply.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,g6DAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,wCAAA,CAAA,WAAA;AAFb,KADqB,EAKrB;AACE,MAAA,IAAI,EAAE,iDADR;AAEE,MAAA,YAAY,EAAE,MAAM,mBAAA,CAAA,CAAA;AAAA;AAAA,0CAAA,EAAA,IAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,IAAA;AAAA;AAAA,kEAAA,CAAA,EAAgD,IAAhD,CAAsD,CAAC,IAAI,CAAC,CAAC,sBAA7D;AAFtB,KALqB,CAAvB;AAeA,QAAa,sBAAsB,GAAnC,MAAa,sBAAb,CAAmC,EAAnC;AAAa,IAAA,sBAAsB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJlC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIkC,CAAA,EAAtB,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAa,eAAe,GAA5B,MAAa,eAAb,CAA4B,EAA5B;AAAa,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAT3B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,kDAAA,CAAA,wBAAA,CAJO,CADD;AAOR,MAAA,YAAY,EAAE,CAAC,wCAAA,CAAA,WAAA,CAAD;AAPN,KAAT,CAS2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;ACnBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iMAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAa,SAAS,GAAtB,MAAa,SAAb,CAAsB;AAQpB,MAAA,WAAA,CACU,MADV,EAEU,cAFV,EAGU,IAHV,EAIU,OAJV,EAIiC;AAHvB,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,cAAA,GAAA,cAAA;AACA,aAAA,IAAA,GAAA,IAAA;AACA,aAAA,OAAA,GAAA,OAAA;AANV,aAAA,IAAA,GAAO,IAAP;AAOK;;AAEL,MAAA,UAAU,GAAA;AACR,QAAA,OAAO,CAAC,GAAR,CAAY,gBAAZ;AACD;;AAED,MAAA,YAAY,GAAA;AACV,QAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ;AAED;;AAED,MAAA,qBAAqB,GAAA;AACnB,QAAA,OAAO,CAAC,GAAR,CAAY,mDAAZ;AAED;;AAED,MAAA,iBAAiB,GAAA;AACf,aAAK,IAAL,CAAU,oBAAV,CAA+B,KAAK,IAApC,EAA0C,SAA1C,GADe,CAEf;;AACA,aAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,0JAAD,EAA6J,KAAK,QAAlK,EAA4K,KAAK,cAAjL,EAAiM,KAAK,eAAtM,CAArB;AACD;;AAED,MAAA,QAAQ,GAAA;AACL;AACA,cAAM,KAAK,GAAI,KAAK,cAAL,CAAoB,QAApB,CAA6B,QAA7B,CAAsC,GAAtC,CAA0C,OAA1C,CAAf;AACA,cAAM,WAAW,GAAI,KAAK,cAAL,CAAoB,QAApB,CAA6B,QAA7B,CAAsC,GAAtC,CAA0C,aAA1C,CAArB;AACA,cAAM,YAAY,GAAI,KAAK,cAAL,CAAoB,QAApB,CAA6B,QAA7B,CAAsC,GAAtC,CAA0C,cAA1C,CAAtB;AAEA,aAAK,QAAL,GAAgB,KAAhB;AACA,aAAK,cAAL,GAAsB,WAAtB;AACA,aAAK,eAAL,GAAuB,YAAvB;AAEA,aAAK,OAAL,CAAa,cAAb,GAA8B,SAA9B,CAAwC,IAAI,IAAG;AAC7C,eAAK,IAAL,GAAY,IAAZ;AACA,eAAK,IAAL,CAAU,QAAV,GAAqB,KAAK,QAA1B;AACA,eAAK,IAAL,CAAU,cAAV,GAA2B,KAAK,cAAhC;AACA,eAAK,IAAL,CAAU,eAAV,GAA4B,KAAK,eAAjC;AACD,SALD;AAOF;;AApDmB,KAAtB;;;YASoB,4CAAA,CAAA,QAAA;;YACQ,4CAAA,CAAA,gBAAA;;YACV,mDAAA,CAAA,aAAA;;YACG,sDAAA,CAAA,gBAAA;;;AAZR,IAAA,SAAS,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALrB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,WADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKqB,E,uEASF,4CAAA,CAAA,QAAA,C,EACQ,4CAAA,CAAA,gBAAA,C,EACV,mDAAA,CAAA,aAAA,C,EACG,sDAAA,CAAA,gBAAA,C,EAZC,CAAA,EAAT,SAAS,CAAT","sourcesContent":["export default \"<ion-header class=\\\"ion-hide-md-up\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n  <ion-title style=\\\"color: white;\\\">Job Page</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col size-xs=\\\"10\\\" size-sm=\\\"8\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n\\n        <h1 style=\\\"font-size: 2em; font-weight: 900; color: #005191;\\\">{{jobTitle}}</h1>\\n\\n        <h2>{{jobCompanyName}}</h2>\\n\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n        <ion-col size=\\\"12\\\"></ion-col>\\n    </ion-row>\\n    <ion-row>\\n        <ion-col size=\\\"12\\\">Please go over your Resume and information before you apply. </ion-col>\\n    </ion-row>\\n    <ion-row>\\n        <ion-col size=\\\"12\\\">\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Phone Number</ion-label>\\n                <ion-input></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                  <ion-label position=\\\"stacked\\\"> Go over your Resume</ion-label>\\n                  <ion-button (click)=\\\"viewResume()\\\">\\n                    View Resume\\n                  </ion-button>\\n                </ion-item>\\n                <p>or</p>\\n                <ion-item>\\n                    <ion-button (click)=\\\"viewResume()\\\">\\n                      Upload Resume\\n                    </ion-button>\\n                  </ion-item>\\n                <p>resume_2019.pdf</p>\\n                <ion-item>\\n                        <ion-textarea\\n                        rows=\\\"10\\\" placeholder=\\\"Why are you a great candidate for the position of {{jobTitle}}?\\\"></ion-textarea>\\n                  </ion-item>\\n                  <p>optional - ??? characters max</p>\\n        </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n<button (click)=\\\"finishApplication()\\\" id=\\\"next-button\\\">Submit Application</button>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ApplyPage } from './apply.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ApplyPage\n  },\n  {\n    path: 'apply-confirm/:title/:companyName/:companyEmail',\n    loadChildren: () => import('../apply-confirm/apply-confirm.module').then( m => m.ApplyConfirmPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ApplyPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ApplyPageRoutingModule } from './apply-routing.module';\n\nimport { ApplyPage } from './apply.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ApplyPageRoutingModule\n  ],\n  declarations: [ApplyPage]\n})\nexport class ApplyPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2pvYnMvYXBwbHkvYXBwbHkucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { JobsService } from '../../../services/jobs.service';\nimport { ProfileService } from '../../../services/profile.service';\n\n@Component({\n  selector: 'app-apply',\n  templateUrl: './apply.page.html',\n  styleUrls: ['./apply.page.scss'],\n})\nexport class ApplyPage implements OnInit {\n\n  public jobTitle;\n  public jobCompanyName;\n  public jobCompanyEmail;\n\n  user = null;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private jobs: JobsService,\n    private profile: ProfileService\n  ) { }\n\n  viewResume() {\n    console.log('Viewing Resume');\n  }\n\n  uploadResume() {\n    console.log('Uploading Resume');\n\n  }\n\n  sendConfirmationEmail() {\n    console.log('Sending confirmation email to Users email address');\n\n  }\n\n  finishApplication() {\n    this.jobs.sendEmailApplication(this.user).subscribe();\n    // tslint:disable-next-line: max-line-length\n    this.router.navigate(['/home/jobs/job-page/:id/:title/:companyName/:companyEmail/:summary/:fullJobDescription/:rateOfPay/apply/:title/:companyEmail/:companyName/apply-confirm/', this.jobTitle, this.jobCompanyName, this.jobCompanyEmail ]);\n  }\n\n  ngOnInit() {\n     // tslint:disable-next-line: radix\n     const title  = this.activatedRoute.snapshot.paramMap.get('title');\n     const companyName  = this.activatedRoute.snapshot.paramMap.get('companyName');\n     const companyEmail  = this.activatedRoute.snapshot.paramMap.get('companyEmail');\n\n     this.jobTitle = title;\n     this.jobCompanyName = companyName;\n     this.jobCompanyEmail = companyEmail;\n\n     this.profile.getUserDetails().subscribe(data => {\n       this.user = data;\n       this.user.jobTitle = this.jobTitle;\n       this.user.jobCompanyName = this.jobCompanyName;\n       this.user.jobCompanyEmail = this.jobCompanyEmail;\n     });\n\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"apply-apply-module-es5.js"}