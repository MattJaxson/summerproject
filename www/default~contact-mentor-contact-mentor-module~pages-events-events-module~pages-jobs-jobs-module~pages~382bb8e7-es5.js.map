{"version":3,"sources":["src/app/services/profile.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, OnInit } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Platform, AlertController } from '@ionic/angular';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n  BACKEND_URL = environment.url;\r\n  activeEmail = '';\r\n  user = {};\r\n\r\n  fullName = new BehaviorSubject('');\r\n  addressOne = new BehaviorSubject('');\r\n  addressTwo = new BehaviorSubject('');\r\n  phone = new BehaviorSubject('');\r\n  city = new BehaviorSubject('');\r\n  state = new BehaviorSubject('');\r\n  zip = new BehaviorSubject('');\r\n  gender = new BehaviorSubject('');\r\n  dob = new BehaviorSubject('');\r\n  school = new BehaviorSubject('');\r\n  grade = new BehaviorSubject('');\r\n  profilePicture = new BehaviorSubject('');\r\n  resume = new BehaviorSubject('');\r\n  email = new BehaviorSubject('');\r\n\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private storage: Storage,\r\n    private alertController: AlertController,\r\n    private helper: JwtHelperService,\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastController: ToastController) {\r\n\r\n      // Needs the User's email address from the JSON Web Token stored on device.\r\n      this.activeEmail = this.auth.user.email;\r\n     }\r\n\r\n    //  Gets User Details from Server to populate the Profile tab with User information.\r\n   getUserDetails() {\r\n      return this.http.post(`${this.BACKEND_URL}/api/home/user`, {email: this.activeEmail});\r\n  }\r\n\r\n    changeEmail(activeEmail, newEmail, password) {\r\n      // tslint:disable-next-line: max-line-length\r\n      return this.http.post(`${this.BACKEND_URL}/api/home/user/change-email`, {\r\n        oldEmail: this.activeEmail,\r\n        email: newEmail,\r\n        password: password})\r\n          .pipe(\r\n            catchError(e => {\r\n              this.presentFailToast(this.activeEmail);\r\n              throw new Error(e);\r\n            }))\r\n          .subscribe( data => {\r\n            if ( data === true ) {\r\n              this.email.next(newEmail);\r\n              this.activeEmail = newEmail;\r\n              this.router.navigate(['/home/profile']);\r\n              this.presentSuccessToast();\r\n\r\n             } else {\r\n              this.presentFailToast(this.activeEmail);\r\n              return console.log('Passwords dont match');\r\n            }\r\n      });\r\n    }\r\n\r\n    // Toast for Successful Change\r\n    presentSuccessToast() {\r\n      const successToast = this.toastController.create({\r\n        message: `You have changed your email address to ${this.activeEmail}.`,\r\n        duration: 3000,\r\n        cssClass: 'success-toast',\r\n        keyboardClose: true,\r\n        position: 'top',\r\n      });\r\n      successToast.then(t => t.present());\r\n    }\r\n\r\n    presentFailToast(email) {\r\n      // Toast for Successful Change\r\n      const failToast = this.toastController.create({\r\n        // tslint:disable-next-line: max-line-length\r\n        message: `Password and Email combination do not work. Make sure that your password is correct, and that your new email is different from your current email address of ${email}`,\r\n         duration: 9000,\r\n        cssClass: 'wrong-password-toast',\r\n        keyboardClose: true,\r\n        position: 'top'\r\n      });\r\n      failToast.then(t => t.present());\r\n    }\r\n\r\n    async changePassword(activeEmail, oldPassword, newPassword, reTypeNewPassword ) {\r\n      return await this.http.post(`${this.BACKEND_URL}/api/home/user/change-password`, {\r\n        oldPassword,\r\n        email: activeEmail,\r\n        newPassword,\r\n        reTypeNewPassword\r\n      })\r\n        .subscribe( data => {\r\n          // if the passwords match, navigate back to landing page\r\n          if ( data === true ) {\r\n            console.log('TRUE');\r\n            this.router.navigate(['']);\r\n            let toast = this.toastController.create({\r\n              message: 'Please login with your new Password',\r\n              duration: 3000\r\n            });\r\n            toast.then(t => t.present());\r\n           } else {\r\n             console.log('Passwords dont match!');\r\n           }\r\n        });\r\n    }\r\n\r\n    async changePhone(email, newNumber, password) {\r\n      return await this.http.post(`${this.BACKEND_URL}/api/home/user/change-phone`, {\r\n        newNumber,\r\n        password,\r\n        email\r\n      })\r\n      .subscribe(data => {\r\n        if ( data === true ) {\r\n          console.log('Changing phone number...');\r\n          this.phone.next(newNumber);\r\n          this.router.navigate(['/home/profile']);\r\n    \r\n          const successToast = this.toastController.create({\r\n            message: `Phone Number changed to ${newNumber}`,\r\n            duration: 3000,\r\n            cssClass: 'success-toast',\r\n            keyboardClose: true,\r\n            position: 'top'\r\n          });\r\n          successToast.then(t => t.present());\r\n         } else {\r\n           console.log('Passwords dont match!');\r\n    \r\n           const failToast = this.toastController.create({\r\n             message: 'Password was incorrect',\r\n             duration: 3000,\r\n             cssClass: 'wrong-password-toast',\r\n             keyboardClose: true,\r\n             position: 'top'\r\n           });\r\n           failToast.then(t => t.present());\r\n         }\r\n      });\r\n    }\r\n\r\n    async changeAddress(email, addressOne, addressTwo, city, state, zip, password) {\r\n      return await this.http.post(`${this.BACKEND_URL}/api/home/user/change-address`, {\r\n        email,\r\n        addressOne,\r\n        addressTwo,\r\n        city,\r\n        state,\r\n        zip,\r\n        password\r\n      })\r\n      .pipe(\r\n        tap( res => {\r\n\r\n          if (!res) {\r\n            console.log('There was no response. There might be a bad password');\r\n          }\r\n        }),\r\n        catchError(e => {\r\n          throw new Error(e);\r\n        })\r\n      )\r\n      .subscribe(data => {\r\n        if ( data === true ) {\r\n\r\n          this.addressOne.next(addressOne);\r\n          this.addressTwo.next(addressTwo);\r\n          this.city.next(city);\r\n          this.state.next(state);\r\n          this.zip.next(zip);\r\n          this.router.navigate(['/home/profile']);\r\n\r\n          let successToast = this.toastController.create({\r\n            // tslint:disable-next-line: max-line-length\r\n            message: `You have changed your address to ${addressOne} ${addressTwo} ,${city}, ${state}, ${zip}.`,\r\n            duration: 3000,\r\n            cssClass: 'success-toast',\r\n            keyboardClose: true,\r\n            position: 'top'\r\n          });\r\n\r\n          successToast.then(t => t.present());\r\n         } else {\r\n\r\n          let failToast = this.toastController.create({\r\n            // tslint:disable-next-line: max-line-length\r\n            message: 'Please make sure your password is correct',\r\n            duration: 3000,\r\n            cssClass: 'wrong-password-toast',\r\n            keyboardClose: true,\r\n            position: 'top',\r\n          });\r\n          failToast.then(t => t.present());\r\n          return console.log('Passwords dont match');\r\n        }\r\n  });\r\n    }\r\n\r\n    async changeSchool(email, newSchool, newGrade, password) {\r\n      return await this.http.post(`${this.BACKEND_URL}/api/home/user/change-school`, {\r\n        email,\r\n        newSchool,\r\n        newGrade,\r\n        password\r\n      }).subscribe(data => {\r\n        if ( data === true ) {\r\n          this.school.next(newSchool);\r\n          this.grade.next(newGrade);\r\n          this.router.navigate(['/home/profile']);\r\n\r\n          let successToast = this.toastController.create({\r\n            // tslint:disable-next-line: max-line-length\r\n            message: `Your school and grade has been updated to ${newGrade}, ${newSchool}`,\r\n            duration: 5000,\r\n            cssClass: 'success-toast',\r\n            keyboardClose: true,\r\n            position: 'top'\r\n          });\r\n\r\n          successToast.then(t => t.present());\r\n         } else {\r\n\r\n          let failToast = this.toastController.create({\r\n            // tslint:disable-next-line: max-line-length\r\n            message: 'Please make sure your password is correct',\r\n            duration: 3000,\r\n            cssClass: 'wrong-password-toast',\r\n            keyboardClose: true,\r\n            position: 'top',\r\n          });\r\n          failToast.then(t => t.present());\r\n          return console.log('Passwords dont match');\r\n        }\r\n      });\r\n    }\r\n\r\n    async changeProfilePicture(email, newPicture, password) {\r\n      return await this.http.post(`${this.BACKEND_URL}/api/home/user/change-school`, {\r\n        email,\r\n        newPicture,\r\n        password\r\n      }).subscribe(data => {\r\n        if ( data === true ) {\r\n          console.log('Changing Resume...');\r\n          this.profilePicture.next(newPicture);\r\n          this.router.navigate([`/home/user/change-school/:school/:grade/confirm`]);\r\n         } else {\r\n          return console.log('Passwords dont match');\r\n        }\r\n      });\r\n    }\r\n\r\n    async changeResume(email, newResume, password) {\r\n      return await this.http.post(`${this.BACKEND_URL}/api/home/user/change-school`, {\r\n        email,\r\n        newResume,\r\n        password\r\n      }).subscribe(data => {\r\n        if ( data === true ) {\r\n          console.log('Changing Resume...');\r\n          this.resume.next(newResume);\r\n          this.router.navigate(['/home/user/change-school/:school/:grade/confirm']);\r\n         } else {\r\n          return console.log('Passwords dont match');\r\n        }\r\n      });\r\n    }\r\n\r\n    // Delete User\r\n  delete() {\r\n    console.log('Deleted User');\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"default~contact-mentor-contact-mentor-module~pages-events-events-module~pages-jobs-jobs-module~pages~382bb8e7-es5.js"}