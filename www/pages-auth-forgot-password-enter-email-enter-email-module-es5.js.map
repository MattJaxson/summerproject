{"version":3,"sources":["src/app/pages/auth/forgot-password/enter-email/enter-email.page.html","src/app/pages/auth/forgot-password/enter-email/enter-email-routing.module.ts","src/app/pages/auth/forgot-password/enter-email/enter-email.module.ts","src/app/pages/auth/forgot-password/enter-email/enter-email.page.scss","src/app/pages/auth/forgot-password/enter-email/enter-email.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iwDAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAM,MAAM,GAAW,CACrB;AACA;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,8CAAA,CAAA,gBAAA;AAFb,KAFqB,EAOrB;AACA;AACE,MAAA,IAAI,EAAE,mBADR;AAEE,MAAA,YAAY,EAAE,MAAM,mBAAA,CAAA,CAAA;AAAA;AAAA,oDAAA,EAAA,IAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,IAAA;AAAA;AAAA,4EAAA,CAAA,EAA6D,IAA7D,CAAkE,CAAC,IAAI,CAAC,CAAC,mBAAzE;AAFtB,KARqB,CAAvB;AAkBA,QAAa,2BAA2B,GAAxC,MAAa,2BAAb,CAAwC,EAAxC;AAAa,IAAA,2BAA2B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJvC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIuC,CAAA,EAA3B,2BAA2B,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHb,QAAa,oBAAoB,GAAjC,MAAa,oBAAb,CAAiC,EAAjC;AAAa,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAVhC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,2CAAA,CAAA,qBAAA,CAJO,EAKP,wDAAA,CAAA,6BAAA,CALO,CADD;AAQR,MAAA,YAAY,EAAE,CAAC,8CAAA,CAAA,gBAAA,CAAD;AARN,KAAT,CAUgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACpBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,cAAc,GAA3B,MAAa,cAAb,CAA2B;AASzB,MAAA,WAAA,CACU,WADV,EAEU,MAFV,EAGU,IAHV,EAG2B;AAFjB,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,IAAA,GAAA,IAAA;AATV,aAAA,mBAAA,GAAsB;AACpB,UAAA,KAAK,EAAE,CACL;AAAE,YAAA,IAAI,EAAE,OAAR;AAAiB,YAAA,OAAO,EAAE;AAA1B,WADK;AADa,SAAtB;AASgC;;AAEhC,MAAA,QAAQ,GAAA;AACN,aAAK,kBAAL,GAA2B,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AAChD,UAAA,KAAK,EAAE,CAAC,EAAD,EAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,KAAZ,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAAL;AADyC,SAAvB,CAA3B;AAID;;AAEK,MAAA,iBAAiB,CAAC,KAAD,EAAM;;AAC3B,UAAA,OAAO,CAAC,GAAR,CAAY,0BAAZ,E,CACA;;AACA,gBAAM,KAAK,IAAL,CAAU,gBAAV,CAA2B,KAA3B,CAAN;AACA,gBAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,0BAAD,EAA6B,KAA7B,CAArB,CAAN;AACF,S;AAAA;;AAEA,MAAA,MAAM,GAAA;AACJ,QAAA,OAAO,CAAC,GAAR,CAAY,8BAAZ;AACA,aAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD;;AA/BwB,KAA3B;;;YAUyB,2CAAA,CAAA,aAAA;;YACL,4CAAA,CAAA,QAAA;;YACF,0DAAA,CAAA,aAAA;;;AAZL,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL1B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK0B,E,uEAUF,2CAAA,CAAA,aAAA,C,EACL,4CAAA,CAAA,QAAA,C,EACF,0DAAA,CAAA,aAAA,C,EAZS,CAAA,EAAd,cAAc,CAAd","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Forgot Password</ion-title>\\n    <ion-button (click)=\\\"cancel()\\\" class=\\\"cancel-button\\\" slot=\\\"end\\\">\\n        cancel\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-grid fixed class=\\\"ion-text-center\\\">\\n      <ion-row>\\n        <ion-col size=\\\"10\\\" offset=\\\"1\\\">\\n          <h6 class=\\\"text-header\\\">Please enter your email address. An email will be sent to you with a <span style=\\\"font-weight: 700;\\\">6 character code</span>. </h6>\\n          <form [formGroup]=\\\"forgotPasswordForm\\\" (ngSubmit)=\\\"goToEnterCodePage(this.forgotPasswordForm.value.email)\\\">\\n            <ion-list class=\\\"line-input\\\">\\n            <ion-item>\\n              <ion-input\\n                placeholder=\\\"Enter Email Address\\\"\\n                required\\n                formControlName=\\\"email\\\"\\n                inputmode=\\\"email\\\"\\n                type=\\\"email\\\">\\n              </ion-input>\\n            </ion-item>\\n\\n\\n              <!-- Password Validation-->\\n              <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                  <div class=\\\"error-message\\\"\\n                    *ngIf=\\\"forgotPasswordForm\\n                      .get('email')\\n                      .hasError(validation.type) && (forgotPasswordForm.get('email')\\n                      .dirty || forgotPasswordForm.get('email').touched)\\\">\\n                    {{ validation.message }}\\n                  </div>\\n                </ng-container>\\n              </div>\\n\\n          </ion-list>\\n\\n          <ion-button type=\\\"submit\\\" class=\\\"orange-button\\\">GET CODE</ion-button>\\n\\n          </form>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EnterEmailPage } from './enter-email.page';\n\nconst routes: Routes = [\n  // 1st of 3 forgot password pages\n  {\n    path: '',\n    component: EnterEmailPage\n  },\n\n  //  to new password page\n  {\n    path: 'enter-code/:email',\n    loadChildren: () => import('../../forgot-password/enter-code/enter-code.module').then(m => m.EnterCodePageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EnterEmailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EnterEmailPageRoutingModule } from './enter-email-routing.module';\n\nimport { EnterEmailPage } from './enter-email.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    EnterEmailPageRoutingModule\n  ],\n  declarations: [EnterEmailPage]\n})\nexport class EnterEmailPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvZm9yZ290LXBhc3N3b3JkL2VudGVyLWVtYWlsL2VudGVyLWVtYWlsLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n\n@Component({\n  selector: 'app-enter-email',\n  templateUrl: './enter-email.page.html',\n  styleUrls: ['./enter-email.page.scss'],\n})\nexport class EnterEmailPage implements OnInit {\n  forgotPasswordForm: FormGroup;\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Please enter a valid email address'}\n    ]\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private auth: AuthService) { }\n\n  ngOnInit() {\n    this.forgotPasswordForm =  this.formBuilder.group({\n      email: ['', [Validators.email, Validators.required]]\n    });\n\n  }\n\n  async goToEnterCodePage(email) {\n    console.log('Going to Enter Code Page');\n    // check if user exists, then navigate\n    await this.auth.checkIfUserExits(email);\n    await this.router.navigate(['/enter-email/enter-code/', email]);\n }\n\n  cancel() {\n    console.log('Forgotten password cancelled');\n    this.router.navigate(['']);\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"pages-auth-forgot-password-enter-email-enter-email-module-es5.js"}