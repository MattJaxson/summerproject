{"version":3,"sources":["./src/app/pages/profile/change-email/change-email/change-email.page.html","./src/app/pages/profile/change-email/change-email/change-email-routing.module.ts","./src/app/pages/profile/change-email/change-email/change-email.module.ts","./src/app/pages/profile/change-email/change-email/change-email.page.scss","./src/app/pages/profile/change-email/change-email/change-email.page.ts"],"names":[],"mappings":"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","file":"change-email-change-email-change-email-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Change Email</ion-title>\\n    <ion-button (click)=\\\"cancel()\\\" class=\\\"cancel-button\\\" slot=\\\"end\\\">\\n        cancel\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-grid fixed class=\\\"ion-text-center\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n            <h6 class=\\\"text-header\\\">{{activeEmail}}</h6>\\n            <form (ngSubmit)=\\\"confirmChangedEmail(this.changeEmail.controls.email.value, this.changeEmail.controls.password.value)\\\" [formGroup]=\\\"changeEmail\\\">\\n\\n\\n            <ion-list class=\\\"line-input\\\">\\n\\n                <!-- Email -->\\n                <ion-item>\\n                  <ion-input\\n                    required\\n                    placeholder=\\\"new email\\\"\\n                    formControlName=\\\"email\\\"\\n                    type=\\\"email\\\">\\n                  </ion-input>\\n                </ion-item>\\n\\n                <!-- Email Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                  <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                    <div class=\\\"error-message\\\"\\n                    *ngIf=\\\"changeEmail\\n                      .get('email')\\n                      .hasError(validation.type) && (changeEmail.get('email')\\n                      .dirty || changeEmail.get('email').touched)\\\">\\n                      {{ validation.message }}\\n                    </div>\\n                  </ng-container>\\n                </div>\\n\\n                <ion-item>\\n                    <ion-input\\n                      required\\n                      placeholder=\\\"password\\\"\\n                      formControlName=\\\"password\\\"\\n                      type=\\\"password\\\">\\n                    </ion-input>\\n                </ion-item>\\n          </ion-list>\\n                <ion-button\\n                type=\\\"submit\\\" \\n                class=\\\"orange-button\\\">CHANGE EMAIL</ion-button>\\n              </form>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-content>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChangeEmailPage } from './change-email.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChangeEmailPage\n  },\n  {\n    path: 'confirm',\n    loadChildren: () => import('../confirm/confirm.module').then( m => m.ConfirmPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChangeEmailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChangeEmailPageRoutingModule } from './change-email-routing.module';\n\nimport { ChangeEmailPage } from './change-email.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ChangeEmailPageRoutingModule\n  ],\n  declarations: [ChangeEmailPage]\n})\nexport class ChangeEmailPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvY2hhbmdlLWVtYWlsL2NoYW5nZS1lbWFpbC9jaGFuZ2UtZW1haWwucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../../services/auth.service';\nimport { ProfileService } from '../../../../services/profile.service';\n\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-change-email',\n  templateUrl: './change-email.page.html',\n  styleUrls: ['./change-email.page.scss'],\n})\nexport class ChangeEmailPage implements OnInit {\n  changeEmail: FormGroup;\n  activeEmail = '';\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Must be a valid email address'}\n    ],\n    password: [\n      // tslint:disable-next-line: max-line-length\n      { type: 'pattern', message: 'Password must be at least 6 characters with at least one lowercase character, one uppercase character, and one number.'}\n    ]\n  };\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private auth: AuthService,\n    private toast: ToastController,\n    private profile: ProfileService\n    ) {\n      this.activeEmail = this.profile.email.getValue();\n      console.log('Active Email: ' + this.activeEmail);\n     }\n\n  ngOnInit() {\n    this.changeEmail =  this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['Lacrosse2', Validators.compose([\n        Validators.minLength(6),\n        Validators.required,\n        // this is for the letters (both uppercase and lowercase) and numbers validation\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n     ])]\n    });\n\n  }\n\n  async presentToast() {\n    const toast = await this.toast.create({\n      message: 'There was an error with your password or email. Please try again.',\n      duration: 5000,\n      cssClass: 'wrong-password-toast',\n      keyboardClose: true,\n      position: 'top',\n\n    });\n    toast.present();\n  }\n\n  confirmChangedEmail(newEmail, password) {\n    this.profile.changeEmail('eddie@gmail.com', newEmail, password);\n  }\n\n  cancel() {\n    console.log('change email password cancelled');\n    this.router.navigate(['/home/profile/edit-profile-page']);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}