{"version":3,"sources":["./src/app/pages/fairs/fair-page/chaperones/register/register.page.html","./src/app/pages/fairs/fair-page/partners/register/register.page.html","./src/app/pages/fairs/fair-page/students/register/register.page.html","./src/app/pages/fairs/fair-page/volunteers/register/register.page.html","./src/app/pages/fairs/fair-page/chaperones/register/register-routing.module.ts","./src/app/pages/fairs/fair-page/chaperones/register/register.module.ts","./src/app/pages/fairs/fair-page/chaperones/register/register.page.scss","./src/app/pages/fairs/fair-page/chaperones/register/register.page.ts","./src/app/pages/fairs/fair-page/partners/register/register-routing.module.ts","./src/app/pages/fairs/fair-page/partners/register/register.module.ts","./src/app/pages/fairs/fair-page/partners/register/register.page.scss","./src/app/pages/fairs/fair-page/partners/register/register.page.ts","./src/app/pages/fairs/fair-page/students/register/register-routing.module.ts","./src/app/pages/fairs/fair-page/students/register/register.module.ts","./src/app/pages/fairs/fair-page/students/register/register.page.scss","./src/app/pages/fairs/fair-page/students/register/register.page.ts","./src/app/pages/fairs/fair-page/volunteers/register/register-routing.module.ts","./src/app/pages/fairs/fair-page/volunteers/register/register.module.ts","./src/app/pages/fairs/fair-page/volunteers/register/register.page.scss","./src/app/pages/fairs/fair-page/volunteers/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar class=\\\"ion-hide-md-up\\\">\\r\\n      <ion-title>Register as Chaperone</ion-title>\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-back-button></ion-back-button>\\r\\n      </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n\\r\\n    <!-- Dekstop Toolbar -->\\r\\n    <ion-toolbar class=\\\"ion-hide-sm-down fair-page-toolbar-lg\\\">\\r\\n        <ion-title color=\\\"primary\\\">Register for {{title}} as Chaperone</ion-title>\\r\\n        <ion-button (click)=\\\"goBack()\\\" class=\\\"orange-button\\\" style=\\\"width: 100px; --background: #005191; --color: white;\\\" slot=\\\"end\\\">Go Back\\r\\n        </ion-button>\\r\\n      </ion-toolbar>\\r\\n  </ion-header>\\r\\n\\r\\n  <ion-content>\\r\\n\\r\\n    <!-- Mobile & Tablet -->\\r\\n    <ion-grid class=\\\"ion-text-center ion-hide-md-up\\\">\\r\\n\\r\\n     <ion-row class=\\\"ion-justify-content-center register-wrapper\\\">\\r\\n        <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\r\\n          <p class=\\\"text-header\\\">After you have successfully registered, you will be sent a confirmation email. You will need to go to that email and click     on the link to confirm your Registration.\\r\\n          </p>\\r\\n        </ion-col>\\r\\n\\r\\n        <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\r\\n         <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\r\\n           <ion-list class=\\\"line-input\\\">\\r\\n              <ion-item>\\r\\n                <ion-input\\r\\n                 #autoFucousInput\\r\\n                 required\\r\\n                 inputmode=\\\"text\\\"\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 placeholder=\\\"First & Last Name\\\"></ion-input>\\r\\n              </ion-item>\\r\\n             <ion-item>\\r\\n               <ion-input\\r\\n                #autoFucousInput\\r\\n                required\\r\\n                inputmode=\\\"email\\\"\\r\\n                formControlName=\\\"email\\\"\\r\\n                type=\\\"text\\\"\\r\\n                placeholder=\\\"Email\\\"></ion-input>\\r\\n             </ion-item>\\r\\n\\r\\n                  <!-- Email Validation-->\\r\\n                  <div class=\\\"validation-errors\\\">\\r\\n                      <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\r\\n                        <div class=\\\"error-message\\\"\\r\\n                        *ngIf=\\\"registerForm\\r\\n                          .get('email')\\r\\n                          .hasError(validation.type) && (registerForm.get('email')\\r\\n                          .dirty || registerForm.get('email').touched)\\\">\\r\\n                          {{ validation.message }}\\r\\n                        </div>\\r\\n                      </ng-container>\\r\\n                    </div>\\r\\n\\r\\n             <ion-item>\\r\\n                <ion-select\\r\\n                  interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\r\\n                  placeholder=\\\"School\\\"\\r\\n                  formControlName=\\\"school\\\">\\r\\n                  <ion-select-option\\r\\n                    *ngFor=\\\"let school of schoolList\\\"\\r\\n                    value=\\\"{{school}}\\\">{{school}}</ion-select-option>\\r\\n                </ion-select>\\r\\n             </ion-item>\\r\\n             <ion-item>\\r\\n               <ion-input\\r\\n                required\\r\\n                inputmode=\\\"phone\\\"\\r\\n                formControlName=\\\"phone\\\"\\r\\n                type=\\\"text\\\"\\r\\n                maxlength='10'\\r\\n                minlength='10'\\r\\n                placeholder=\\\"Phone (xxx) xxx - xxxxx\\\"></ion-input>\\r\\n             </ion-item>\\r\\n             <ion-item>\\r\\n                <ion-select\\r\\n                  interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\r\\n                  placeholder=\\\"Gender\\\"\\r\\n                  formControlName=\\\"gender\\\">\\r\\n                  <ion-select-option\\r\\n                    value=\\\"Male\\\">Male</ion-select-option>\\r\\n                    <ion-select-option\\r\\n                    value=\\\"Female\\\">Female</ion-select-option>\\r\\n                </ion-select>\\r\\n             </ion-item>\\r\\n             <ion-item>\\r\\n                <ion-radio-group\\r\\n                required\\r\\n                formControlName=\\\"lunch\\\">\\r\\n                    <ion-list-header>\\r\\n                      <ion-label>Lunch</ion-label>\\r\\n                    </ion-list-header>\\r\\n                    <ion-item>\\r\\n                      <ion-label>Apple</ion-label>\\r\\n                      <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n\\r\\n                    <ion-item>\\r\\n                      <ion-label>Grape</ion-label>\\r\\n                      <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\r\\n                    </ion-item>\\r\\n\\r\\n                    <ion-item>\\r\\n                      <ion-label>Cherry</ion-label>\\r\\n                      <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                  </ion-radio-group>\\r\\n             </ion-item>\\r\\n           </ion-list>\\r\\n\\r\\n           <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\r\\n            <ion-button [disabled]=\\\"disabled\\\" class=\\\"orange-button\\\" type=\\\"submit\\\">Register</ion-button>\\r\\n           </ion-col>\\r\\n\\r\\n         </form>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"11\\\" offset=\\\"0.5\\\">\\r\\n          <!-- <ion-button (click)=\\\"register()\\\">\\r\\n            Register\\r\\n          </ion-button> -->\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n    <!-- Desktop -->\\r\\n    <ion-grid class=\\\"ion-text-center ion-hide-sm-down\\\">\\r\\n\\r\\n      <ion-row style=\\\"margin-top: 100px\\\">\\r\\n        <ion-col push=\\\"2\\\" size=\\\"5\\\">\\r\\n          <p class=\\\"text-header\\\">After you have successfully registered, you will be sent a confirmation email.\\r\\n          </p>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col push=\\\"2\\\" size=\\\"5\\\">\\r\\n         <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\r\\n           <ion-list class=\\\"line-input\\\">\\r\\n              <ion-item>\\r\\n                <ion-input\\r\\n                 #autoFucousInput\\r\\n                 required\\r\\n                 inputmode=\\\"text\\\"\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 placeholder=\\\"First & Last Name\\\"></ion-input>\\r\\n              </ion-item>\\r\\n             <ion-item>\\r\\n               <ion-input\\r\\n                #autoFucousInput\\r\\n                required\\r\\n                inputmode=\\\"email\\\"\\r\\n                formControlName=\\\"email\\\"\\r\\n                type=\\\"text\\\"\\r\\n                placeholder=\\\"Email\\\"></ion-input>\\r\\n             </ion-item>\\r\\n\\r\\n                  <!-- Email Validation-->\\r\\n                  <div class=\\\"validation-errors\\\">\\r\\n                      <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\r\\n                        <div class=\\\"error-message\\\"\\r\\n                        *ngIf=\\\"registerForm\\r\\n                          .get('email')\\r\\n                          .hasError(validation.type) && (registerForm.get('email')\\r\\n                          .dirty || registerForm.get('email').touched)\\\">\\r\\n                          {{ validation.message }}\\r\\n                        </div>\\r\\n                      </ng-container>\\r\\n                    </div>\\r\\n\\r\\n             <ion-item>\\r\\n                <ion-select\\r\\n                  interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\r\\n                  placeholder=\\\"School\\\"\\r\\n                  formControlName=\\\"school\\\">\\r\\n                  <ion-select-option\\r\\n                    *ngFor=\\\"let school of schoolList\\\"\\r\\n                    value=\\\"{{school}}\\\">{{school}}</ion-select-option>\\r\\n                </ion-select>\\r\\n             </ion-item>\\r\\n             <ion-item>\\r\\n               <ion-input\\r\\n                required\\r\\n                inputmode=\\\"phone\\\"\\r\\n                formControlName=\\\"phone\\\"\\r\\n                type=\\\"text\\\"\\r\\n                maxlength='10'\\r\\n                placeholder=\\\"Phone (xxx) xxx - xxxxx\\\"></ion-input>\\r\\n             </ion-item>\\r\\n             <ion-item>\\r\\n                <ion-radio-group\\r\\n                required\\r\\n                formControlName=\\\"lunch\\\">\\r\\n                    <ion-list-header>\\r\\n                      <ion-label>Lunch</ion-label>\\r\\n                    </ion-list-header>\\r\\n                    <ion-item>\\r\\n                      <ion-label>Turkey</ion-label>\\r\\n                      <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"Turkey\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n\\r\\n                    <ion-item>\\r\\n                      <ion-label>Ham</ion-label>\\r\\n                      <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"Ham\\\" checked></ion-radio>\\r\\n                    </ion-item>\\r\\n\\r\\n                    <ion-item>\\r\\n                      <ion-label>Veggie</ion-label>\\r\\n                      <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"Veggie\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                  </ion-radio-group>\\r\\n             </ion-item>\\r\\n           </ion-list>\\r\\n\\r\\n           <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\r\\n            <ion-button class=\\\"orange-button\\\" type=\\\"submit\\\">Register</ion-button>\\r\\n           </ion-col>\\r\\n\\r\\n         </form>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"11\\\" offset=\\\"0.5\\\">\\r\\n          <!-- <ion-button (click)=\\\"register()\\\">\\r\\n            Register\\r\\n          </ion-button> -->\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-content>\"","export default \"<ion-header>\\r\\n    <ion-toolbar class=\\\"ion-hide-md-up\\\">\\r\\n      <ion-title>Register for {{title}} as Partner</ion-title>\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-back-button></ion-back-button>\\r\\n      </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n\\r\\n\\r\\n    <ion-toolbar class=\\\"ion-hide-sm-down fair-page-toolbar-lg\\\">\\r\\n        <ion-title color=\\\"primary\\\">Register for {{title}} as Partner</ion-title>\\r\\n        <ion-button (click)=\\\"goBack()\\\" class=\\\"orange-button\\\" style=\\\"width: 100px; --background: #005191; --color: white;\\\" slot=\\\"end\\\">Go Back\\r\\n        </ion-button>\\r\\n      </ion-toolbar>\\r\\n  </ion-header>\\r\\n\\r\\n  <ion-content>\\r\\n\\r\\n    <ion-grid  class=\\\"ion-text-center ion-hide-md-up\\\">\\r\\n\\r\\n      <!-- Mobile & Tablet -->\\r\\n        <ion-row class=\\\"ion-justify-content-center register-wrapper\\\">\\r\\n            <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\r\\n\\r\\n            <p class=\\\"text-header\\\">After you have successfully registered, you will be sent a confirmation email. If your school has more than 30 students r    registered, you will be notified and waitlisted.\\r\\n            </p>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\r\\n              <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\r\\n                <ion-list class=\\\"line-input\\\">\\r\\n                  <ion-item>\\r\\n                     <ion-input\\r\\n                     #autoFucousInput\\r\\n                     required\\r\\n                     inputmode=\\\"text\\\"\\r\\n                     formControlName=\\\"name\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      placeholder=\\\"Contact First & Last Name\\\"></ion-input>\\r\\n                  </ion-item>\\r\\n                  <ion-item>\\r\\n                     <ion-input\\r\\n                      #autoFucousInput\\r\\n                      required\\r\\n                      inputmode=\\\"email\\\"\\r\\n                      formControlName=\\\"email\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      placeholder=\\\"Contact Email\\\"></ion-input>\\r\\n                  </ion-item>\\r\\n\\r\\n                    <!-- Email Validation-->\\r\\n                    <div class=\\\"validation-errors\\\">\\r\\n                        <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\r\\n                          <div class=\\\"error-message\\\"\\r\\n                          *ngIf=\\\"registerForm\\r\\n                            .get('email')\\r\\n                            .hasError(validation.type) && (registerForm.get('email')\\r\\n                            .dirty || registerForm.get('email').touched)\\\">\\r\\n                            {{ validation.message }}\\r\\n                          </div>\\r\\n                        </ng-container>\\r\\n                      </div>\\r\\n\\r\\n               <ion-item>\\r\\n                 <ion-input\\r\\n                  required\\r\\n                  inputmode=\\\"phone\\\"\\r\\n                  formControlName=\\\"phone\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  maxlength='10'\\r\\n                  placeholder=\\\"Phone (xxx) xxx - xxxxx\\\"></ion-input>\\r\\n               </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-input\\r\\n                     required\\r\\n                     formControlName=\\\"logo\\\"\\r\\n                     type=\\\"file\\\"\\r\\n                     placeholder=\\\"Logo\\\"></ion-input>\\r\\n                  </ion-item>\\r\\n\\r\\n                      <ion-item>\\r\\n                        <ion-input\\r\\n                         required\\r\\n                         formControlName=\\\"company\\\"\\r\\n                         type=\\\"text\\\"\\r\\n                         placeholder=\\\"Company/Organization\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n\\r\\n               <ion-item>\\r\\n                  <ion-radio-group\\r\\n                  required\\r\\n                  formControlName=\\\"lunch\\\">\\r\\n                      <ion-list-header>\\r\\n                        <ion-label>Lunch</ion-label>\\r\\n                      </ion-list-header>\\r\\n                      <ion-item>\\r\\n                        <ion-label>Apple</ion-label>\\r\\n                        <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\r\\n                      </ion-item>\\r\\n\\r\\n                      <ion-item>\\r\\n                        <ion-label>Grape</ion-label>\\r\\n                        <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\r\\n                      </ion-item>\\r\\n\\r\\n                      <ion-item>\\r\\n                        <ion-label>Cherry</ion-label>\\r\\n                        <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\r\\n                      </ion-item>\\r\\n                    </ion-radio-group>\\r\\n               </ion-item>\\r\\n\\r\\n               <ion-item>\\r\\n                  <ion-textarea\\r\\n                  formControlName=\\\"colleagues\\\" rows=\\\"6\\\" cols=\\\"20\\\" placeholder=\\\"Enter any of your colleagues names here, each seperated by a comma ( , )\\\"></ion-textarea>\\r\\n                </ion-item>\\r\\n             </ion-list>\\r\\n\\r\\n             <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\r\\n              <ion-button class=\\\"orange-button\\\" type=\\\"submit\\\">Register</ion-button>\\r\\n             </ion-col>\\r\\n\\r\\n           </form>\\r\\n          </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n    </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n    <!-- Desktop -->\\r\\n\\r\\n    <ion-grid class=\\\"ion-text-center ion-hide-sm-down\\\">\\r\\n\\r\\n      <ion-row style=\\\"margin-top: 100px\\\">\\r\\n          <ion-col push=\\\"2\\\" size=\\\"5\\\">\\r\\n            <p class=\\\"text-header\\\">After you have successfully registered, you will be sent a confirmation email.\\r\\n            </p>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-justify-content-right register-wrapper\\\">\\r\\n\\r\\n          <ion-col size=\\\"5\\\" offset=\\\"2\\\">\\r\\n           <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\r\\n             <ion-list class=\\\"line-input\\\">\\r\\n               <ion-item>\\r\\n                 <ion-input\\r\\n                  #autoFucousInput\\r\\n                  required\\r\\n                  inputmode=\\\"text\\\"\\r\\n                  formControlName=\\\"name\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  placeholder=\\\"Contact First & Last Name\\\"></ion-input>\\r\\n               </ion-item>\\r\\n               <ion-item>\\r\\n                 <ion-input\\r\\n                  #autoFucousInput\\r\\n                  required\\r\\n                  inputmode=\\\"email\\\"\\r\\n                  formControlName=\\\"email\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  placeholder=\\\"Contact Email\\\"></ion-input>\\r\\n               </ion-item>\\r\\n\\r\\n                    <!-- Email Validation-->\\r\\n                    <div class=\\\"validation-errors\\\">\\r\\n                        <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\r\\n                          <div class=\\\"error-message\\\"\\r\\n                          *ngIf=\\\"registerForm\\r\\n                            .get('email')\\r\\n                            .hasError(validation.type) && (registerForm.get('email')\\r\\n                            .dirty || registerForm.get('email').touched)\\\">\\r\\n                            {{ validation.message }}\\r\\n                          </div>\\r\\n                        </ng-container>\\r\\n                      </div>\\r\\n\\r\\n               <ion-item>\\r\\n                 <ion-input\\r\\n                  required\\r\\n                  inputmode=\\\"phone\\\"\\r\\n                  formControlName=\\\"phone\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  maxlength='10'\\r\\n                  placeholder=\\\"Phone (xxx) xxx - xxxxx\\\"></ion-input>\\r\\n               </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-input\\r\\n                     required\\r\\n                     formControlName=\\\"logo\\\"\\r\\n                     type=\\\"file\\\"\\r\\n                     placeholder=\\\"Logo\\\"></ion-input>\\r\\n                  </ion-item>\\r\\n\\r\\n                      <ion-item>\\r\\n                        <ion-input\\r\\n                         required\\r\\n                         formControlName=\\\"company\\\"\\r\\n                         type=\\\"text\\\"\\r\\n                         placeholder=\\\"Company/Organization\\\"></ion-input>\\r\\n                      </ion-item>\\r\\n\\r\\n               <ion-item>\\r\\n                  <ion-radio-group\\r\\n                  required\\r\\n                  formControlName=\\\"lunch\\\">\\r\\n                      <ion-list-header>\\r\\n                        <ion-label>Lunch</ion-label>\\r\\n                      </ion-list-header>\\r\\n                      <ion-item>\\r\\n                        <ion-label>Turkey</ion-label>\\r\\n                        <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"Turkey\\\"></ion-radio>\\r\\n                      </ion-item>\\r\\n\\r\\n                      <ion-item>\\r\\n                        <ion-label>Ham</ion-label>\\r\\n                        <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"Ham\\\" checked></ion-radio>\\r\\n                      </ion-item>\\r\\n\\r\\n                      <ion-item>\\r\\n                        <ion-label>Veggie</ion-label>\\r\\n                        <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"Veggie\\\"></ion-radio>\\r\\n                      </ion-item>\\r\\n                    </ion-radio-group>\\r\\n               </ion-item>\\r\\n\\r\\n               <ion-item>\\r\\n                  <ion-textarea\\r\\n                  formControlName=\\\"colleagues\\\" rows=\\\"6\\\" cols=\\\"20\\\" placeholder=\\\"Enter any of your colleagues names here, each seperated by a comma ( , )\\\"></ion-textarea>\\r\\n                </ion-item>\\r\\n             </ion-list>\\r\\n\\r\\n             <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\r\\n              <ion-button class=\\\"orange-button\\\" type=\\\"submit\\\">Register</ion-button>\\r\\n             </ion-col>\\r\\n\\r\\n           </form>\\r\\n          </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n    </ion-grid>\\r\\n  </ion-content>\"","export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"ion-hide-md-up\\\">\\r\\n    <ion-title>Register for {{title}} as Student</ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n\\r\\n  <!-- Desktop Toolbar -->\\r\\n  <ion-toolbar class=\\\"ion-hide-sm-down fair-page-toolbar-lg\\\">\\r\\n      <ion-title color=\\\"primary\\\">Register for {{title}} as Student</ion-title>\\r\\n      <ion-button (click)=\\\"goBack()\\\" class=\\\"orange-button\\\" style=\\\"width: 100px; --background: #005191; --color: white;\\\" slot=\\\"end\\\">Go Back\\r\\n      </ion-button>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n    <!-- Mobile and Tablet -->\\r\\n  <ion-grid class=\\\"ion-text-center ion-hide-md-up\\\">\\r\\n\\r\\n    <ion-row class=\\\"ion-justify-content-center register-wrapper ion-hide-md-up\\\">\\r\\n\\r\\n      <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\r\\n\\r\\n            <p class=\\\"text-header\\\">After you have successfully registered, you will be sent a confirmation email. If your school has more than 30 students registered, you will be notified and waitlisted.\\r\\n            </p>\\r\\n\\r\\n      </ion-col>\\r\\n      <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\r\\n\\r\\n       <form  [formGroup]=\\\"registerForm\\\"\\r\\n       (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\r\\n         <ion-list class=\\\"line-input\\\">\\r\\n            <ion-item>\\r\\n              <ion-input\\r\\n               #autoFucousInput\\r\\n               required\\r\\n               inputmode=\\\"text\\\"\\r\\n               formControlName=\\\"name\\\"\\r\\n               type=\\\"text\\\"\\r\\n               placeholder=\\\"First & Last Name\\\"></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n           <ion-item>\\r\\n             <ion-input\\r\\n              required\\r\\n              inputmode=\\\"email\\\"\\r\\n              formControlName=\\\"email\\\"\\r\\n              type=\\\"text\\\"\\r\\n              placeholder=\\\"Email\\\"></ion-input>\\r\\n           </ion-item>\\r\\n\\r\\n\\r\\n                <!-- Email Validation-->\\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                    <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\r\\n                      <div class=\\\"error-message\\\"\\r\\n                      *ngIf=\\\"registerForm\\r\\n                        .get('email')\\r\\n                        .hasError(validation.type) && (registerForm.get('email')\\r\\n                        .dirty || registerForm.get('email').touched)\\\">\\r\\n                        {{ validation.message }}\\r\\n                      </div>\\r\\n                    </ng-container>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n           <ion-item>\\r\\n              <ion-select\\r\\n                interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\r\\n                placeholder=\\\"School\\\"\\r\\n                formControlName=\\\"school\\\">\\r\\n                <ion-select-option\\r\\n                  *ngFor=\\\"let school of schoolList\\\"\\r\\n                  value=\\\"{{school}}\\\">{{school}}</ion-select-option>\\r\\n              </ion-select>\\r\\n           </ion-item>\\r\\n\\r\\n           <ion-item>\\r\\n              <ion-select\\r\\n                interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\r\\n                placeholder=\\\"Grade\\\"\\r\\n                formControlName=\\\"grade\\\">\\r\\n                <ion-select-option\\r\\n                  *ngFor=\\\"let grade of gradeList\\\"\\r\\n                  value=\\\"{{grade}}\\\">{{grade}}</ion-select-option>\\r\\n              </ion-select>\\r\\n           </ion-item>\\r\\n\\r\\n           <ion-item>\\r\\n             <ion-input\\r\\n              required\\r\\n              inputmode=\\\"phone\\\"\\r\\n              formControlName=\\\"phone\\\"\\r\\n              type=\\\"text\\\"\\r\\n              maxlength='10'\\r\\n              placeholder=\\\"Phone (xxx) xxx - xxxxx\\\"></ion-input>\\r\\n           </ion-item>\\r\\n           <ion-item>\\r\\n              <ion-select\\r\\n                interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\r\\n                placeholder=\\\"Gender\\\"\\r\\n                formControlName=\\\"gender\\\">\\r\\n                <ion-select-option\\r\\n                  value=\\\"Male\\\">Male</ion-select-option>\\r\\n                  <ion-select-option\\r\\n                  value=\\\"Female\\\">Female</ion-select-option>\\r\\n              </ion-select>\\r\\n           </ion-item>\\r\\n           <ion-item>\\r\\n              <ion-radio-group\\r\\n              required>\\r\\n                  <ion-list-header>\\r\\n                    <ion-label>Lunch</ion-label>\\r\\n                  </ion-list-header>\\r\\n                  <ion-item>\\r\\n                    <ion-label>Turkey BLT & provolone (Turkey, Smokehouse Bacon, Lettuce, Tomato, Provolone, Pesto Mayo)</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"Turkey\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Southwest Chicken Wrap (Crispy Chicken Tenders, Smoked Pepper Aioli, Roasted Corn & Peppers, Pico de Gallo)</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"Chicken\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Grilled Vegetable & Goat Cheese (Seasonal Marinated Grilled Vegetables, Balsamic Syrup, Local Goat Cheese)</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"Veggie\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n                </ion-radio-group>\\r\\n           </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n           <ion-item>\\r\\n              <ion-radio-group\\r\\n              required\\r\\n              formControlName=\\\"questionOne\\\">\\r\\n                  <ion-list-header>\\r\\n                    <ion-label>Pre Survey Question</ion-label>\\r\\n                  </ion-list-header>\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n                </ion-radio-group>\\r\\n           </ion-item>\\r\\n           <ion-item>\\r\\n              <ion-radio-group\\r\\n              required\\r\\n              formControlName=\\\"questionTwo\\\">\\r\\n                  <ion-list-header>\\r\\n                    <ion-label>Pre Survey Question</ion-label>\\r\\n                  </ion-list-header>\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n                </ion-radio-group>\\r\\n           </ion-item>\\r\\n           <ion-item>\\r\\n              <ion-radio-group\\r\\n              required\\r\\n              formControlName=\\\"questionThree\\\">\\r\\n                  <ion-list-header>\\r\\n                    <ion-label>Pre Survey Question</ion-label>\\r\\n                  </ion-list-header>\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n                </ion-radio-group>\\r\\n           </ion-item>\\r\\n           <ion-item>\\r\\n              <ion-radio-group\\r\\n              required\\r\\n              formControlName=\\\"questionFour\\\">\\r\\n                  <ion-list-header>\\r\\n                    <ion-label>Pre Survey Question</ion-label>\\r\\n                  </ion-list-header>\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n                </ion-radio-group>\\r\\n           </ion-item>\\r\\n           <ion-item>\\r\\n              <ion-radio-group\\r\\n                required\\r\\n                formControlName=\\\"questionFive\\\">\\r\\n                  <ion-list-header>\\r\\n                    <ion-label>Pre Survey Question </ion-label>\\r\\n                  </ion-list-header>\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n                </ion-radio-group>\\r\\n           </ion-item>\\r\\n         </ion-list>\\r\\n\\r\\n         <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\r\\n          <ion-button class=\\\"orange-button\\\" type=\\\"submit\\\">Register</ion-button>\\r\\n         </ion-col>\\r\\n\\r\\n       </form>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n  <!-- Desktop -->\\r\\n  <ion-grid class=\\\"ion-hide-sm-down\\\">\\r\\n\\r\\n      <ion-row class=\\\"ion-justify-content-center\\\" style=\\\"margin-top: 100px\\\">\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <p class=\\\"text-header\\\">After you have successfully registered, you will be sent a confirmation email. If your school has more than 30 students registered, you will be notified and waitlisted.\\r\\n          </p>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n      <ion-col size=\\\"4\\\">\\r\\n       <form  [formGroup]=\\\"registerForm\\\"\\r\\n       (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\r\\n         <ion-list class=\\\"line-input\\\">\\r\\n\\r\\n            <!-- Name -->\\r\\n            <ion-item>\\r\\n              <ion-input\\r\\n               #autoFucousInput\\r\\n               required\\r\\n               inputmode=\\\"text\\\"\\r\\n               formControlName=\\\"name\\\"\\r\\n               type=\\\"text\\\"\\r\\n               placeholder=\\\"First & Last Name\\\"></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Email -->\\r\\n           <ion-item>\\r\\n             <ion-input\\r\\n              required\\r\\n              inputmode=\\\"email\\\"\\r\\n              formControlName=\\\"email\\\"\\r\\n              type=\\\"text\\\"\\r\\n              placeholder=\\\"Email\\\"></ion-input>\\r\\n           </ion-item>\\r\\n\\r\\n\\r\\n                <!-- Email Validation-->\\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                    <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\r\\n                      <div class=\\\"error-message\\\"\\r\\n                      *ngIf=\\\"registerForm\\r\\n                        .get('email')\\r\\n                        .hasError(validation.type) && (registerForm.get('email')\\r\\n                        .dirty || registerForm.get('email').touched)\\\">\\r\\n                        {{ validation.message }}\\r\\n                      </div>\\r\\n                    </ng-container>\\r\\n                  </div>\\r\\n\\r\\n            <!-- School -->\\r\\n           <ion-item>\\r\\n              <ion-select\\r\\n                placeholder=\\\"School\\\"\\r\\n                formControlName=\\\"school\\\">\\r\\n                <ion-select-option\\r\\n                  *ngFor=\\\"let school of schoolList\\\"\\r\\n                  value=\\\"school\\\">{{school}}</ion-select-option>\\r\\n              </ion-select>\\r\\n           </ion-item>\\r\\n\\r\\n           <!-- Grade -->\\r\\n           <ion-item>\\r\\n              <ion-select\\r\\n                interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\r\\n                placeholder=\\\"Grade\\\"\\r\\n                formControlName=\\\"grade\\\">\\r\\n                <ion-select-option\\r\\n                  *ngFor=\\\"let grade of gradeList\\\"\\r\\n                  value=\\\"grade\\\">{{grade}}</ion-select-option>\\r\\n              </ion-select>\\r\\n           </ion-item>\\r\\n\\r\\n           <!-- Phone -->\\r\\n           <ion-item>\\r\\n             <ion-input\\r\\n              required\\r\\n              inputmode=\\\"phone\\\"\\r\\n              formControlName=\\\"phone\\\"\\r\\n              type=\\\"text\\\"\\r\\n              maxlength='10'\\r\\n              placeholder=\\\"Phone (xxx) xxx - xxxxx\\\"></ion-input>\\r\\n           </ion-item>\\r\\n\\r\\n           <!-- Gender -->\\r\\n           <ion-item>\\r\\n              <ion-select\\r\\n                interfaceOptions=\\\"customAlertOptions\\\"   interface=\\\"alert\\\"\\r\\n                placeholder=\\\"Gender\\\"\\r\\n                formControlName=\\\"gender\\\">\\r\\n                <ion-select-option\\r\\n                  value=\\\"Male\\\">Male</ion-select-option>\\r\\n                  <ion-select-option\\r\\n                  value=\\\"Female\\\">Female</ion-select-option>\\r\\n              </ion-select>\\r\\n           </ion-item>\\r\\n\\r\\n           <!-- Lunch -->\\r\\n           <ion-item>\\r\\n              <ion-radio-group\\r\\n              required\\r\\n              formControlName=\\\"lunch\\\">\\r\\n                  <ion-list-header>\\r\\n                    <ion-label>Lunch</ion-label>\\r\\n                  </ion-list-header>\\r\\n                  <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label>Turkey BLT & provolone (Turkey, Smokehouse Bacon, Lettuce, Tomato, Provolone, Pesto Mayo)</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"Turkey\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Southwest Chicken Wrap (Crispy Chicken Tenders, Smoked Pepper Aioli, Roasted Corn & Peppers, Pico de Gallo)</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"Chicken\\\" ></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Grilled Vegetable & Goat Cheese (Seasonal Marinated Grilled Vegetables, Balsamic Syrup, Local Goat Cheese)</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"Veggie\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n                </ion-radio-group>\\r\\n           </ion-item>\\r\\n\\r\\n\\r\\n          <!-- Interests -->\\r\\n          <!-- <ion-item *ngFor=\\\"let interest of studentInterests\\\">\\r\\n              <ion-label>{{interest.name}}</ion-label>\\r\\n              <ion-checkbox\\r\\n              formControlName=\\\"interests\\\" slot=\\\"end\\\" [(ngModel)]=\\\"interest.isChecked\\\"\\r\\n              (IonChange)=\\\"selectMember(interest.name)\\\">\\r\\n            </ion-checkbox>\\r\\n            </ion-item>\\r\\n\\r\\n          <!-- Survey Questions -->\\r\\n           <ion-item>\\r\\n              <ion-radio-group\\r\\n              required\\r\\n              formControlName=\\\"questionOne\\\">\\r\\n                  <ion-list-header>\\r\\n                    <ion-label>Pre Survey Question</ion-label>\\r\\n                  </ion-list-header>\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n                </ion-radio-group>\\r\\n           </ion-item>\\r\\n\\r\\n           <ion-item>\\r\\n              <ion-radio-group\\r\\n              required\\r\\n              formControlName=\\\"questionTwo\\\">\\r\\n                  <ion-list-header>\\r\\n                    <ion-label>Pre Survey Question</ion-label>\\r\\n                  </ion-list-header>\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n                </ion-radio-group>\\r\\n           </ion-item>\\r\\n\\r\\n           <ion-item>\\r\\n              <ion-radio-group\\r\\n              required\\r\\n              formControlName=\\\"questionThree\\\">\\r\\n                  <ion-list-header>\\r\\n                    <ion-label>Pre Survey Question</ion-label>\\r\\n                  </ion-list-header>\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n                </ion-radio-group>\\r\\n           </ion-item>\\r\\n\\r\\n           <ion-item>\\r\\n              <ion-radio-group\\r\\n              required\\r\\n              formControlName=\\\"questionFour\\\">\\r\\n                  <ion-list-header>\\r\\n                    <ion-label>Pre Survey Question</ion-label>\\r\\n                  </ion-list-header>\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n                </ion-radio-group>\\r\\n           </ion-item>\\r\\n\\r\\n           <ion-item>\\r\\n              <ion-radio-group\\r\\n                required\\r\\n                formControlName=\\\"questionFive\\\">\\r\\n                  <ion-list-header>\\r\\n                    <ion-label>Pre Survey Question </ion-label>\\r\\n                  </ion-list-header>\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"success\\\" value=\\\"apple\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\" value=\\\"grape\\\" checked></ion-radio>\\r\\n                  </ion-item>\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-label>Answer</ion-label>\\r\\n                    <ion-radio slot=\\\"start\\\" color=\\\"danger\\\" value=\\\"cherry\\\"></ion-radio>\\r\\n                  </ion-item>\\r\\n                </ion-radio-group>\\r\\n           </ion-item>\\r\\n         </ion-list>\\r\\n\\r\\n         <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\r\\n          <ion-button class=\\\"orange-button\\\" type=\\\"submit\\\">Register</ion-button>\\r\\n         </ion-col>\\r\\n\\r\\n       </form>\\r\\n      </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\"","export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"ion-hide-md-up\\\">\\r\\n    <ion-title>Register for {{title}} as Volunteer</ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n\\r\\n\\r\\n  <ion-toolbar class=\\\"ion-hide-sm-down fair-page-toolbar-lg\\\">\\r\\n      <ion-title color=\\\"primary\\\">Register for {{title}} as Volunteer</ion-title>\\r\\n      <ion-button (click)=\\\"goBack()\\\" class=\\\"orange-button\\\" style=\\\"width: 100px; --background: #005191; --color: white;\\\" slot=\\\"end\\\">Go Back\\r\\n      </ion-button>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <ion-grid class=\\\"ion-text-center ion-hide-md-up\\\">\\r\\n      <ion-row class=\\\"ion-justify-content-center\\\" style=\\\"margin-top: 75px\\\">\\r\\n          <ion-col size-sm=\\\"8\\\" size-xs=\\\"10\\\">\\r\\n            <p class=\\\"text-header\\\">\\r\\n              Information goes here about letting the user know they are being redirected to another page to sign up as a volunteer.\\r\\n            </p>\\r\\n          </ion-col>\\r\\n          <form  [formGroup]=\\\"registerForm\\\"\\r\\n          (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\r\\n            <ion-list class=\\\"line-input\\\">\\r\\n                <ion-item>\\r\\n                  <ion-input\\r\\n                   #autoFucousInput\\r\\n                   required\\r\\n                   inputmode=\\\"text\\\"\\r\\n                   formControlName=\\\"name\\\"\\r\\n                   type=\\\"text\\\"\\r\\n                   placeholder=\\\"First & Last Name\\\"></ion-input>\\r\\n                </ion-item>\\r\\n    \\r\\n               <ion-item>\\r\\n                 <ion-input\\r\\n                  required\\r\\n                  inputmode=\\\"email\\\"\\r\\n                  formControlName=\\\"email\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  placeholder=\\\"Email\\\"></ion-input>\\r\\n               </ion-item>\\r\\n            </ion-list>\\r\\n          </form>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <!-- Desktop -->\\r\\n\\r\\n    <ion-grid class=\\\"ion-text-center ion-hide-sm-down\\\">\\r\\n\\r\\n        <ion-row class=\\\"ion-justify-content-center\\\" style=\\\"margin-top: 100px;\\\">\\r\\n            <ion-col size=\\\"4\\\">\\r\\n              <p class=\\\"text-header\\\">\\r\\n                Please enter your name and email address. You will be sent an email with further registration instructions.\\r\\n              </p>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n          <ion-col size=\\\"4\\\">\\r\\n              <form  [formGroup]=\\\"registerForm\\\"\\r\\n              (ngSubmit)=\\\"register(this.registerForm.value)\\\">\\r\\n                <ion-list class=\\\"line-input\\\">\\r\\n                    <ion-item>\\r\\n                      <ion-input\\r\\n                       #autoFucousInput\\r\\n                       required\\r\\n                       inputmode=\\\"text\\\"\\r\\n                       formControlName=\\\"name\\\"\\r\\n                       type=\\\"text\\\"\\r\\n                       placeholder=\\\"First & Last Name\\\"></ion-input>\\r\\n                    </ion-item>\\r\\n\\r\\n                   <ion-item>\\r\\n                     <ion-input\\r\\n                      required\\r\\n                      inputmode=\\\"email\\\"\\r\\n                      formControlName=\\\"email\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      placeholder=\\\"Email\\\"></ion-input>\\r\\n                   </ion-item>\\r\\n\\r\\n\\r\\n                   <!-- Email Validation-->\\r\\n                   <div class=\\\"validation-errors\\\">\\r\\n                       <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\r\\n                         <div class=\\\"error-message\\\"\\r\\n                         *ngIf=\\\"registerForm\\r\\n                           .get('email')\\r\\n                           .hasError(validation.type) && (registerForm.get('email')\\r\\n                           .dirty || registerForm.get('email').touched)\\\">\\r\\n                           {{ validation.message }}\\r\\n                         </div>\\r\\n                       </ng-container>\\r\\n                     </div>\\r\\n                </ion-list>\\r\\n\\r\\n                <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\r\\n                 <ion-button class=\\\"orange-button\\\" type=\\\"submit\\\">Continue</ion-button>\\r\\n                </ion-col>\\r\\n\\r\\n              </form>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","export default \".fair-page-toolbar-lg {\\n  --background: #f9fafc;\\n  --padding-end: 25%;\\n}\\n.fair-page-toolbar-lg ion-title {\\n  padding-left: 100px;\\n  font-size: 1.4em;\\n  font-weight: 900;\\n}\\nion-item {\\n  margin: 30px 0 30px 0;\\n}\\n.register-wrapper {\\n  margin-top: 75px;\\n}\\n.register-info {\\n  position: fixed;\\n}\\nion-radio-group {\\n  padding: 10px;\\n}\\nion-radio-group ion-item {\\n  border: none;\\n}\\nion-list-header ion-label {\\n  font-size: 1.4em;\\n  font-weight: 800;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZmFpcnMvZmFpci1wYWdlL2NoYXBlcm9uZXMvcmVnaXN0ZXIvQzpcXFVzZXJzXFxhZ29vZFxcU29mdHdhcmUgRGV2IFByb2plY3RzXFxKT1VSTmlcXFVuaXRlZCBXYXlcXE1vYmlsZS9zcmNcXGFwcFxccGFnZXNcXGZhaXJzXFxmYWlyLXBhZ2VcXGNoYXBlcm9uZXNcXHJlZ2lzdGVyXFxyZWdpc3Rlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2ZhaXJzL2ZhaXItcGFnZS9jaGFwZXJvbmVzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFBO0VBQ0Esa0JBQUE7QUNDRjtBREVFO0VBQ0UsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDQUo7QURJQTtFQUNFLHFCQUFBO0FDREY7QURJQTtFQUNFLGdCQUFBO0FDREY7QURJQTtFQUNFLGVBQUE7QUNERjtBRElBO0VBQ0UsYUFBQTtBQ0RGO0FERUU7RUFDRSxZQUFBO0FDQUo7QURLRTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7QUNGSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ZhaXJzL2ZhaXItcGFnZS9jaGFwZXJvbmVzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mYWlyLXBhZ2UtdG9vbGJhci1sZyB7XHJcbiAgLS1iYWNrZ3JvdW5kOiAjZjlmYWZjO1xyXG4gIC0tcGFkZGluZy1lbmQ6IDI1JTtcclxuXHJcblxyXG4gIGlvbi10aXRsZSB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEwMHB4O1xyXG4gICAgZm9udC1zaXplOiAxLjRlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgfVxyXG59XHJcblxyXG5pb24taXRlbSB7XHJcbiAgbWFyZ2luOiAzMHB4IDAgMzBweCAwO1xyXG59XHJcblxyXG4ucmVnaXN0ZXItd3JhcHBlcntcclxuICBtYXJnaW4tdG9wOiA3NXB4O1xyXG59XHJcblxyXG4ucmVnaXN0ZXItaW5mbyB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG59XHJcblxyXG5pb24tcmFkaW8tZ3JvdXAge1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgaW9uLWl0ZW0ge1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuaW9uLWxpc3QtaGVhZGVyIHtcclxuICBpb24tbGFiZWwge1xyXG4gICAgZm9udC1zaXplOiAxLjRlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XHJcbiAgfVxyXG59XHJcbiIsIi5mYWlyLXBhZ2UtdG9vbGJhci1sZyB7XG4gIC0tYmFja2dyb3VuZDogI2Y5ZmFmYztcbiAgLS1wYWRkaW5nLWVuZDogMjUlO1xufVxuLmZhaXItcGFnZS10b29sYmFyLWxnIGlvbi10aXRsZSB7XG4gIHBhZGRpbmctbGVmdDogMTAwcHg7XG4gIGZvbnQtc2l6ZTogMS40ZW07XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG59XG5cbmlvbi1pdGVtIHtcbiAgbWFyZ2luOiAzMHB4IDAgMzBweCAwO1xufVxuXG4ucmVnaXN0ZXItd3JhcHBlciB7XG4gIG1hcmdpbi10b3A6IDc1cHg7XG59XG5cbi5yZWdpc3Rlci1pbmZvIHtcbiAgcG9zaXRpb246IGZpeGVkO1xufVxuXG5pb24tcmFkaW8tZ3JvdXAge1xuICBwYWRkaW5nOiAxMHB4O1xufVxuaW9uLXJhZGlvLWdyb3VwIGlvbi1pdGVtIHtcbiAgYm9yZGVyOiBub25lO1xufVxuXG5pb24tbGlzdC1oZWFkZXIgaW9uLWxhYmVsIHtcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbn0iXX0= */\"","// Chaperones\r\n\r\nimport { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastController, LoadingController, IonInput, NavController, AlertController } from '@ionic/angular';\r\nimport { FairsService } from '../../../../../services/fairs.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit, AfterViewInit {\r\n\r\n  registerForm: FormGroup;\r\n  @ViewChild('autoFucousInput', {static: false})  inputElement: IonInput;\r\n  id;\r\n  title;\r\n  disabled = true;\r\n\r\n  schoolList =  ['School 1', 'School 2', 'School 3'];\r\n  gradeList =  ['7th Grade', '8th Grade', '9th Grade', '10th Grade', '11th Grade', '12th Grade'];\r\n\r\n  validationMessasges = {\r\n    email: [\r\n      { type: 'email', message: 'Must be a valid email address'}\r\n    ],\r\n    password: [\r\n      // tslint:disable-next-line: max-line-length\r\n      { type: 'pattern', message: 'Password must be at least 6 characters with at least one lowercase character, one uppcase character, and one number.'}\r\n    ]\r\n  };\r\n\r\n  customAlertOptions: any = {\r\n    header: 'Pizza Toppings',\r\n    subHeader: 'Select your toppings',\r\n    message: '$1.00 per topping',\r\n    translucent: true\r\n  };\r\n\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private fairs: FairsService,\r\n    private navCtrl: NavController,\r\n    private loading: LoadingController,\r\n    private toast: ToastController,\r\n    private alert: AlertController) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      name: ['', [Validators.required, Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      school: ['', [Validators.required, Validators.required]],\r\n      phone: ['', [Validators.required, Validators.required]],\r\n      gender: ['', [Validators.required, Validators.required]],\r\n      lunch: ['', [Validators.required, Validators.required]]\r\n    });\r\n\r\n    this.formOnChanges();\r\n\r\n\r\n    // tslint:disable-next-line: radix\r\n    const id  = this.activatedRoute.snapshot.paramMap.get('id');\r\n\r\n    this.id = id;\r\n\r\n    this.fairs.getFair(this.id).subscribe(\r\n      fair => {\r\n        console.log('Fair ID: ' + this.id);\r\n        console.log(fair);\r\n        this.title = fair['title'];\r\n      }\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n       this.inputElement.setFocus();\r\n    }, 1000);\r\n  }\r\n\r\n  register(chaperone) {\r\n    chaperone.id = this.id;\r\n    console.log('Registering');\r\n    this.fairs.registerChaperone(chaperone);\r\n  }\r\n\r\n  goBack() {\r\n    console.log('going back');\r\n    this.navCtrl.back();\r\n  }\r\n\r\n  formOnChanges(): void {\r\n    this.registerForm.statusChanges.subscribe(\r\n      status => {\r\n        console.log(status);\r\n\r\n        if (status === 'VALID') {\r\n          this.disabled = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // Alerts\r\n  async presentAlert() {\r\n    const alert = await this.alert.create({\r\n      header: 'Registered!',\r\n      cssClass: 'registered',\r\n      message: `You have been Registered. Please check your email (email) for details. `,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n\r\n  // Send Email to Student\r\n  // SMS to phones\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","export default \".fair-page-toolbar-lg {\\n  --background: #f9fafc;\\n  --padding-end: 25%;\\n}\\n.fair-page-toolbar-lg ion-title {\\n  padding-left: 100px;\\n  font-size: 1.4em;\\n  font-weight: 900;\\n}\\nion-item {\\n  margin: 30px 0 30px 0;\\n}\\n.register-wrapper {\\n  margin-top: 75px;\\n}\\n.register-info {\\n  position: fixed;\\n}\\nion-radio-group {\\n  padding: 10px;\\n}\\nion-radio-group ion-item {\\n  border: none;\\n}\\nion-list-header ion-label {\\n  font-size: 1.4em;\\n  font-weight: 800;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZmFpcnMvZmFpci1wYWdlL3BhcnRuZXJzL3JlZ2lzdGVyL0M6XFxVc2Vyc1xcYWdvb2RcXFNvZnR3YXJlIERldiBQcm9qZWN0c1xcSk9VUk5pXFxVbml0ZWQgV2F5XFxNb2JpbGUvc3JjXFxhcHBcXHBhZ2VzXFxmYWlyc1xcZmFpci1wYWdlXFxwYXJ0bmVyc1xccmVnaXN0ZXJcXHJlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvZmFpcnMvZmFpci1wYWdlL3BhcnRuZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFBO0VBQ0Esa0JBQUE7QUNDRjtBREVFO0VBQ0UsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDQUo7QURJQTtFQUNFLHFCQUFBO0FDREY7QURJQTtFQUNFLGdCQUFBO0FDREY7QURJQTtFQUNFLGVBQUE7QUNERjtBRElBO0VBQ0UsYUFBQTtBQ0RGO0FERUU7RUFDRSxZQUFBO0FDQUo7QURLRTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7QUNGSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ZhaXJzL2ZhaXItcGFnZS9wYXJ0bmVycy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmFpci1wYWdlLXRvb2xiYXItbGcge1xyXG4gIC0tYmFja2dyb3VuZDogI2Y5ZmFmYztcclxuICAtLXBhZGRpbmctZW5kOiAyNSU7XHJcblxyXG5cclxuICBpb24tdGl0bGUge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMDBweDtcclxuICAgIGZvbnQtc2l6ZTogMS40ZW07XHJcbiAgICBmb250LXdlaWdodDogOTAwO1xyXG4gIH1cclxufVxyXG5cclxuaW9uLWl0ZW0ge1xyXG4gIG1hcmdpbjogMzBweCAwIDMwcHggMDtcclxufVxyXG5cclxuLnJlZ2lzdGVyLXdyYXBwZXJ7XHJcbiAgbWFyZ2luLXRvcDogNzVweDtcclxufVxyXG5cclxuLnJlZ2lzdGVyLWluZm8ge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxufVxyXG5cclxuaW9uLXJhZGlvLWdyb3VwIHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGlvbi1pdGVtIHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICB9XHJcbn1cclxuXHJcbmlvbi1saXN0LWhlYWRlciB7XHJcbiAgaW9uLWxhYmVsIHtcclxuICAgIGZvbnQtc2l6ZTogMS40ZW07XHJcbiAgICBmb250LXdlaWdodDogODAwO1xyXG4gIH1cclxufVxyXG4iLCIuZmFpci1wYWdlLXRvb2xiYXItbGcge1xuICAtLWJhY2tncm91bmQ6ICNmOWZhZmM7XG4gIC0tcGFkZGluZy1lbmQ6IDI1JTtcbn1cbi5mYWlyLXBhZ2UtdG9vbGJhci1sZyBpb24tdGl0bGUge1xuICBwYWRkaW5nLWxlZnQ6IDEwMHB4O1xuICBmb250LXNpemU6IDEuNGVtO1xuICBmb250LXdlaWdodDogOTAwO1xufVxuXG5pb24taXRlbSB7XG4gIG1hcmdpbjogMzBweCAwIDMwcHggMDtcbn1cblxuLnJlZ2lzdGVyLXdyYXBwZXIge1xuICBtYXJnaW4tdG9wOiA3NXB4O1xufVxuXG4ucmVnaXN0ZXItaW5mbyB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuaW9uLXJhZGlvLWdyb3VwIHtcbiAgcGFkZGluZzogMTBweDtcbn1cbmlvbi1yYWRpby1ncm91cCBpb24taXRlbSB7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuaW9uLWxpc3QtaGVhZGVyIGlvbi1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogMS40ZW07XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG59Il19 */\"","// Partners\r\n\r\nimport { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastController, LoadingController, IonInput, NavController } from '@ionic/angular';\r\nimport { FairsService } from '../../../../../services/fairs.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit, AfterViewInit {\r\n\r\n  // Partner Register Class\r\n\r\n  registerForm: FormGroup;\r\n  @ViewChild('autoFucousInput', {static: false})  inputElement: IonInput;\r\n  id;\r\n  title;\r\n\r\n  schoolList =  ['School 1', 'School 2', 'School 3'];\r\n  gradeList =  ['7th Grade', '8th Grade', '9th Grade', '10th Grade', '11th Grade', '12th Grade'];\r\n\r\n  validationMessasges = {\r\n    email: [\r\n      { type: 'email', message: 'Must be a valid email address'}\r\n    ],\r\n    password: [\r\n      // tslint:disable-next-line: max-line-length\r\n      { type: 'pattern', message: 'Password must be at least 6 characters with at least one lowercase character, one uppcase character, and one number.'}\r\n    ]\r\n  };\r\n\r\n  customAlertOptions: any = {\r\n    header: 'Pizza Toppings',\r\n    subHeader: 'Select your toppings',\r\n    message: '$1.00 per topping',\r\n    translucent: true\r\n  };\r\n\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private fairs: FairsService,\r\n    private navCtrl: NavController,\r\n    private loading: LoadingController,\r\n    private toast: ToastController) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      name: ['', [Validators.required, Validators.email]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      company: ['', [Validators.required, Validators.required]],\r\n      logo: ['', [Validators.required, Validators.required]],\r\n      phone: ['', [Validators.required, Validators.required]],\r\n      lunch: ['', [Validators.required, Validators.required]],\r\n      colleagues: ['', [Validators.required, Validators.required]],\r\n    });\r\n\r\n\r\n    // tslint:disable-next-line: radix\r\n    const id  = this.activatedRoute.snapshot.paramMap.get('id');\r\n\r\n    this.id = id;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n       this.inputElement.setFocus();\r\n    }, 1000);\r\n  }\r\n\r\n  goBack() {\r\n    console.log('going back');\r\n    this.navCtrl.back();\r\n  }\r\n\r\n  register(partner) {\r\n    partner.id = this.id;\r\n    console.log('Registering');\r\n    this.fairs.registerPartner(partner);\r\n  }\r\n\r\n  // Send Email to Student\r\n  // SMS to phones\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","export default \".fair-page-toolbar-lg {\\n  --background: #f9fafc;\\n  --padding-end: 25%;\\n}\\n.fair-page-toolbar-lg ion-title {\\n  padding-left: 100px;\\n  font-size: 1.4em;\\n  font-weight: 900;\\n}\\nion-item {\\n  margin: 30px 0 30px 0;\\n}\\n.register-wrapper {\\n  margin-top: 75px;\\n}\\n.register-info {\\n  position: fixed;\\n}\\nion-radio-group {\\n  padding: 10px;\\n}\\nion-radio-group ion-item {\\n  border: none;\\n}\\nion-list-header ion-label {\\n  font-size: 1.4em;\\n  font-weight: 800;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZmFpcnMvZmFpci1wYWdlL3N0dWRlbnRzL3JlZ2lzdGVyL0M6XFxVc2Vyc1xcYWdvb2RcXFNvZnR3YXJlIERldiBQcm9qZWN0c1xcSk9VUk5pXFxVbml0ZWQgV2F5XFxNb2JpbGUvc3JjXFxhcHBcXHBhZ2VzXFxmYWlyc1xcZmFpci1wYWdlXFxzdHVkZW50c1xccmVnaXN0ZXJcXHJlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvZmFpcnMvZmFpci1wYWdlL3N0dWRlbnRzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFBO0VBQ0Esa0JBQUE7QUNDRjtBREVFO0VBQ0UsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDQUo7QURJQTtFQUNFLHFCQUFBO0FDREY7QURJQTtFQUNFLGdCQUFBO0FDREY7QURJQTtFQUNFLGVBQUE7QUNERjtBRElBO0VBQ0UsYUFBQTtBQ0RGO0FERUU7RUFDRSxZQUFBO0FDQUo7QURLRTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7QUNGSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ZhaXJzL2ZhaXItcGFnZS9zdHVkZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmFpci1wYWdlLXRvb2xiYXItbGcge1xyXG4gIC0tYmFja2dyb3VuZDogI2Y5ZmFmYztcclxuICAtLXBhZGRpbmctZW5kOiAyNSU7XHJcblxyXG5cclxuICBpb24tdGl0bGUge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMDBweDtcclxuICAgIGZvbnQtc2l6ZTogMS40ZW07XHJcbiAgICBmb250LXdlaWdodDogOTAwO1xyXG4gIH1cclxufVxyXG5cclxuaW9uLWl0ZW0ge1xyXG4gIG1hcmdpbjogMzBweCAwIDMwcHggMDtcclxufVxyXG5cclxuLnJlZ2lzdGVyLXdyYXBwZXJ7XHJcbiAgbWFyZ2luLXRvcDogNzVweDtcclxufVxyXG5cclxuLnJlZ2lzdGVyLWluZm8ge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxufVxyXG5cclxuaW9uLXJhZGlvLWdyb3VwIHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGlvbi1pdGVtIHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICB9XHJcbn1cclxuXHJcbmlvbi1saXN0LWhlYWRlciB7XHJcbiAgaW9uLWxhYmVsIHtcclxuICAgIGZvbnQtc2l6ZTogMS40ZW07XHJcbiAgICBmb250LXdlaWdodDogODAwO1xyXG4gIH1cclxufVxyXG4iLCIuZmFpci1wYWdlLXRvb2xiYXItbGcge1xuICAtLWJhY2tncm91bmQ6ICNmOWZhZmM7XG4gIC0tcGFkZGluZy1lbmQ6IDI1JTtcbn1cbi5mYWlyLXBhZ2UtdG9vbGJhci1sZyBpb24tdGl0bGUge1xuICBwYWRkaW5nLWxlZnQ6IDEwMHB4O1xuICBmb250LXNpemU6IDEuNGVtO1xuICBmb250LXdlaWdodDogOTAwO1xufVxuXG5pb24taXRlbSB7XG4gIG1hcmdpbjogMzBweCAwIDMwcHggMDtcbn1cblxuLnJlZ2lzdGVyLXdyYXBwZXIge1xuICBtYXJnaW4tdG9wOiA3NXB4O1xufVxuXG4ucmVnaXN0ZXItaW5mbyB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuaW9uLXJhZGlvLWdyb3VwIHtcbiAgcGFkZGluZzogMTBweDtcbn1cbmlvbi1yYWRpby1ncm91cCBpb24taXRlbSB7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuaW9uLWxpc3QtaGVhZGVyIGlvbi1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogMS40ZW07XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG59Il19 */\"","// Students\r\n\r\nimport { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastController, LoadingController, IonInput, NavController } from '@ionic/angular';\r\nimport { FairsService } from '../../../../../services/fairs.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('autoFucousInput', {static: false})  inputElement: IonInput;\r\n\r\n  registerForm: FormGroup;\r\n  id: string;\r\n  title: string;\r\n  time: string;\r\n  date: string;\r\n\r\n  // For Checkbox\r\n  interests = [];\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  schoolList =  ['Central High School', 'Communications Media Arts High School', 'Davis Aerospace Technical High School', 'Henry Ford High School', 'Martin Luther King Jr. Senior High School', 'Mumford High School', 'Pershing High School', 'Western International High School', 'West Side Academy of Technology and Cyber Security', 'University High School Academy', 'Southfield Regional Academic Campus', 'Southfield High School For The Arts And Technology', 'Hazel Park High School', 'Pontiac High', 'Pontiac International Technology Academy' ];\r\n\r\n  gradeList =  ['10th Grade', '11th Grade', '12th Grade'];\r\n\r\n  studentInterests = [\r\n    { name: 'Automotive Mobility', isChecked: false },\r\n    { name: 'Artificial Intelligence', isChecked: false },\r\n    { name: 'Coding', isChecked: false },\r\n    { name: 'Computer Science', isChecked: false },\r\n    { name: 'Cyber Security', isChecked: false },\r\n    { name: 'Digital Media', isChecked: false },\r\n    { name: 'Engineering', isChecked: false },\r\n    { name: 'Graphic Design', isChecked: false },\r\n    { name: 'Robotics', isChecked: false },\r\n    { name: 'Software Development', isChecked: false },\r\n    { name: 'Video Game Design', isChecked: false },\r\n  ]\r\n\r\n  validationMessasges = {\r\n    email: [\r\n      { type: 'email', message: 'Must be a valid email address'}\r\n    ],\r\n    password: [\r\n      // tslint:disable-next-line: max-line-length\r\n      { type: 'pattern', message: 'Password must be at least 6 characters with at least one lowercase character, one uppcase character, and one number.'}\r\n    ]\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private fairs: FairsService,\r\n    private navCtrl: NavController,\r\n    private loading: LoadingController,\r\n    private toast: ToastController,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.schoolList.sort();\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      name: ['', [Validators.required]],\r\n      email: ['eddielacrosse2@gmail.com', [Validators.required, Validators.email]],\r\n      school: ['', [Validators.required]],\r\n      grade: ['', [Validators.required]],\r\n      phone: ['', [Validators.required, Validators.required]],\r\n      gender: ['', [Validators.required, Validators.required]],\r\n      lunch: ['', [Validators.required, Validators.required]],\r\n      interests: ['', [Validators.required, Validators.required]],\r\n      questionOne: ['', [Validators.required, Validators.required]],\r\n      questionTwo: ['', [Validators.required, Validators.required]],\r\n      questionThree: ['', [Validators.required, Validators.required]],\r\n      questionFour: ['', [Validators.required, Validators.required]],\r\n      questionFive: ['', [Validators.required, Validators.required]],\r\n    });\r\n\r\n    // tslint:disable-next-line: radix\r\n    const id  = this.activatedRoute.snapshot.paramMap.get('id');\r\n\r\n    this.id = id;\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n       this.inputElement.setFocus();\r\n    }, 1000);\r\n  }\r\n\r\n  goBack() {\r\n    console.log('going back');\r\n    this.navCtrl.back();\r\n  }\r\n\r\n  register(student) {\r\n    student.id = this.id;\r\n    console.log('Registering');\r\n    this.fairs.registerStudent(student);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","export default \".fair-page-toolbar-lg {\\n  --background: #f9fafc;\\n  --padding-end: 25%;\\n}\\n.fair-page-toolbar-lg ion-title {\\n  padding-left: 100px;\\n  font-size: 1.4em;\\n  font-weight: 900;\\n}\\nion-item {\\n  margin: 30px 0 30px 0;\\n}\\n.register-wrapper {\\n  margin-top: 75px;\\n}\\n.register-info {\\n  position: fixed;\\n}\\nion-radio-group {\\n  padding: 10px;\\n}\\nion-radio-group ion-item {\\n  border: none;\\n}\\nion-list-header ion-label {\\n  font-size: 1.4em;\\n  font-weight: 800;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZmFpcnMvZmFpci1wYWdlL3ZvbHVudGVlcnMvcmVnaXN0ZXIvQzpcXFVzZXJzXFxhZ29vZFxcU29mdHdhcmUgRGV2IFByb2plY3RzXFxKT1VSTmlcXFVuaXRlZCBXYXlcXE1vYmlsZS9zcmNcXGFwcFxccGFnZXNcXGZhaXJzXFxmYWlyLXBhZ2VcXHZvbHVudGVlcnNcXHJlZ2lzdGVyXFxyZWdpc3Rlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2ZhaXJzL2ZhaXItcGFnZS92b2x1bnRlZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFBO0VBQ0Esa0JBQUE7QUNDRjtBREVFO0VBQ0UsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDQUo7QURJQTtFQUNFLHFCQUFBO0FDREY7QURJQTtFQUNFLGdCQUFBO0FDREY7QURJQTtFQUNFLGVBQUE7QUNERjtBRElBO0VBQ0UsYUFBQTtBQ0RGO0FERUU7RUFDRSxZQUFBO0FDQUo7QURLRTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7QUNGSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ZhaXJzL2ZhaXItcGFnZS92b2x1bnRlZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mYWlyLXBhZ2UtdG9vbGJhci1sZyB7XHJcbiAgLS1iYWNrZ3JvdW5kOiAjZjlmYWZjO1xyXG4gIC0tcGFkZGluZy1lbmQ6IDI1JTtcclxuXHJcblxyXG4gIGlvbi10aXRsZSB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEwMHB4O1xyXG4gICAgZm9udC1zaXplOiAxLjRlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgfVxyXG59XHJcblxyXG5pb24taXRlbSB7XHJcbiAgbWFyZ2luOiAzMHB4IDAgMzBweCAwO1xyXG59XHJcblxyXG4ucmVnaXN0ZXItd3JhcHBlcntcclxuICBtYXJnaW4tdG9wOiA3NXB4O1xyXG59XHJcblxyXG4ucmVnaXN0ZXItaW5mbyB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG59XHJcblxyXG5pb24tcmFkaW8tZ3JvdXAge1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgaW9uLWl0ZW0ge1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuaW9uLWxpc3QtaGVhZGVyIHtcclxuICBpb24tbGFiZWwge1xyXG4gICAgZm9udC1zaXplOiAxLjRlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XHJcbiAgfVxyXG59XHJcbiIsIi5mYWlyLXBhZ2UtdG9vbGJhci1sZyB7XG4gIC0tYmFja2dyb3VuZDogI2Y5ZmFmYztcbiAgLS1wYWRkaW5nLWVuZDogMjUlO1xufVxuLmZhaXItcGFnZS10b29sYmFyLWxnIGlvbi10aXRsZSB7XG4gIHBhZGRpbmctbGVmdDogMTAwcHg7XG4gIGZvbnQtc2l6ZTogMS40ZW07XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG59XG5cbmlvbi1pdGVtIHtcbiAgbWFyZ2luOiAzMHB4IDAgMzBweCAwO1xufVxuXG4ucmVnaXN0ZXItd3JhcHBlciB7XG4gIG1hcmdpbi10b3A6IDc1cHg7XG59XG5cbi5yZWdpc3Rlci1pbmZvIHtcbiAgcG9zaXRpb246IGZpeGVkO1xufVxuXG5pb24tcmFkaW8tZ3JvdXAge1xuICBwYWRkaW5nOiAxMHB4O1xufVxuaW9uLXJhZGlvLWdyb3VwIGlvbi1pdGVtIHtcbiAgYm9yZGVyOiBub25lO1xufVxuXG5pb24tbGlzdC1oZWFkZXIgaW9uLWxhYmVsIHtcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbn0iXX0= */\"","// Volunteers\r\n\r\nimport { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastController, LoadingController, IonInput, NavController } from '@ionic/angular';\r\nimport { FairsService } from '../../../../../services/fairs.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n\r\n  @ViewChild('autoFucousInput', {static: false})  inputElement: IonInput;\r\n\r\n  registerForm: FormGroup;\r\n\r\n  id;\r\n  title;\r\n\r\n  validationMessasges = {\r\n    email: [\r\n      { type: 'email', message: 'Must be a valid email address'}\r\n    ],\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private fairs: FairsService,\r\n    private navCtrl: NavController,\r\n    private loading: LoadingController,\r\n    private toast: ToastController) { }\r\n\r\n  ngOnInit() {\r\n    // tslint:disable-next-line: radix\r\n    const id  = this.activatedRoute.snapshot.paramMap.get('id');\r\n\r\n    this.id = id;\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      name: ['', [Validators.required]],\r\n      email: ['', [Validators.required]]\r\n    });\r\n\r\n    this.fairs.getFair(this.id).subscribe(\r\n      fair => {\r\n        console.log('Fair ID: ' + this.id);\r\n        console.log(fair);\r\n        this.title = fair['title'];\r\n      }\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    console.log('going back');\r\n    this.navCtrl.back();\r\n  }\r\n\r\n  register(volunteer) {\r\n    volunteer.id = this.id;\r\n    console.log('Registering Volunteer');\r\n    this.fairs.registerVolunteer(volunteer);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}